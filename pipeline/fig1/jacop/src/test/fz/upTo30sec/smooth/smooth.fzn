var 1..1: nchange:: output_var;
var 2..2: tolerance:: output_var;
var 0..4: X_INTRODUCED_7 ::var_is_introduced ;
var bool: X_INTRODUCED_9 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_10 ::var_is_introduced :: is_defined_var;
var 0..4: X_INTRODUCED_12 ::var_is_introduced ;
var bool: X_INTRODUCED_13 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_14 ::var_is_introduced :: is_defined_var;
var 0..4: X_INTRODUCED_16 ::var_is_introduced ;
var bool: X_INTRODUCED_17 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_18 ::var_is_introduced :: is_defined_var;
var 0..4: X_INTRODUCED_20 ::var_is_introduced ;
var bool: X_INTRODUCED_21 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_22 ::var_is_introduced :: is_defined_var;
var -4..4: X_INTRODUCED_6 ::var_is_introduced  = 2;
var -4..4: X_INTRODUCED_11 ::var_is_introduced  = 1;
var -4..4: X_INTRODUCED_15 ::var_is_introduced  = 1;
var -4..4: X_INTRODUCED_19 ::var_is_introduced  = -3;
array [1..5] of var int: x:: output_array([1..5]) = [1,3,4,5,2];
constraint int_abs(X_INTRODUCED_6,X_INTRODUCED_7);
constraint int_abs(X_INTRODUCED_11,X_INTRODUCED_12);
constraint int_abs(X_INTRODUCED_15,X_INTRODUCED_16);
constraint int_abs(X_INTRODUCED_19,X_INTRODUCED_20);
constraint int_lin_eq([-1,-1,-1,-1],[X_INTRODUCED_10,X_INTRODUCED_14,X_INTRODUCED_18,X_INTRODUCED_22],-1);
constraint int_lin_le_reif([-1],[X_INTRODUCED_7],-3,X_INTRODUCED_9):: defines_var(X_INTRODUCED_9);
constraint bool2int(X_INTRODUCED_9,X_INTRODUCED_10):: defines_var(X_INTRODUCED_10);
constraint int_lin_le_reif([-1],[X_INTRODUCED_12],-3,X_INTRODUCED_13):: defines_var(X_INTRODUCED_13);
constraint bool2int(X_INTRODUCED_13,X_INTRODUCED_14):: defines_var(X_INTRODUCED_14);
constraint int_lin_le_reif([-1],[X_INTRODUCED_16],-3,X_INTRODUCED_17):: defines_var(X_INTRODUCED_17);
constraint bool2int(X_INTRODUCED_17,X_INTRODUCED_18):: defines_var(X_INTRODUCED_18);
constraint int_lin_le_reif([-1],[X_INTRODUCED_20],-3,X_INTRODUCED_21):: defines_var(X_INTRODUCED_21);
constraint bool2int(X_INTRODUCED_21,X_INTRODUCED_22):: defines_var(X_INTRODUCED_22);
solve  satisfy;
