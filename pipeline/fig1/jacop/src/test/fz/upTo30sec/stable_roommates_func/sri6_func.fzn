var 1..2: X_INTRODUCED_0;
var 1..3: X_INTRODUCED_2;
var 1..4: X_INTRODUCED_3;
var 1..3: X_INTRODUCED_4;
var bool: X_INTRODUCED_6 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_7 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_9 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_10 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_14 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_15 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_16 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_17 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_18 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_19 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_20 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_21 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_22 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_23 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_24 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_25 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_26 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_27 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_30 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_31 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_35 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_36 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_37 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_38 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_43 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_44 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_33 ::var_is_introduced :: is_defined_var = false;
var bool: X_INTRODUCED_42 ::var_is_introduced :: is_defined_var = false;
var bool: X_INTRODUCED_45 ::var_is_introduced :: is_defined_var = false;
var bool: X_INTRODUCED_47 ::var_is_introduced :: is_defined_var = false;
array [1..6] of var int: a:: output_array([1..6]) = [X_INTRODUCED_0,1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,1];
constraint bool_clause([X_INTRODUCED_7],[X_INTRODUCED_6]);
constraint bool_clause([X_INTRODUCED_10],[X_INTRODUCED_9]);
constraint bool_clause([X_INTRODUCED_15],[X_INTRODUCED_14]);
constraint bool_clause([X_INTRODUCED_17],[X_INTRODUCED_16]);
constraint bool_clause([X_INTRODUCED_19],[X_INTRODUCED_18]);
constraint bool_clause([X_INTRODUCED_21],[X_INTRODUCED_20]);
constraint bool_clause([X_INTRODUCED_23],[X_INTRODUCED_22]);
constraint bool_clause([X_INTRODUCED_25],[X_INTRODUCED_24]);
constraint bool_clause([X_INTRODUCED_27],[X_INTRODUCED_26]);
constraint bool_clause([X_INTRODUCED_31],[X_INTRODUCED_30]);
constraint bool_clause([X_INTRODUCED_36],[X_INTRODUCED_35]);
constraint bool_clause([X_INTRODUCED_38],[X_INTRODUCED_37]);
constraint bool_clause([X_INTRODUCED_44],[X_INTRODUCED_43]);
constraint bool_clause([X_INTRODUCED_35],[X_INTRODUCED_36]);
constraint bool_clause([X_INTRODUCED_43],[X_INTRODUCED_44]);
constraint bool_clause([X_INTRODUCED_37],[X_INTRODUCED_38]);
constraint int_le_reif(2,X_INTRODUCED_0,X_INTRODUCED_6):: defines_var(X_INTRODUCED_6);
constraint int_le_reif(1,1,X_INTRODUCED_7):: defines_var(X_INTRODUCED_7);
constraint int_le_reif(4,X_INTRODUCED_0,X_INTRODUCED_9):: defines_var(X_INTRODUCED_9);
constraint int_le_reif(X_INTRODUCED_4,1,X_INTRODUCED_10):: defines_var(X_INTRODUCED_10);
constraint int_le_reif(2,X_INTRODUCED_2,X_INTRODUCED_14):: defines_var(X_INTRODUCED_14);
constraint int_le_reif(1,2,X_INTRODUCED_15):: defines_var(X_INTRODUCED_15);
constraint int_le_reif(3,X_INTRODUCED_2,X_INTRODUCED_16):: defines_var(X_INTRODUCED_16);
constraint int_le_reif(X_INTRODUCED_3,2,X_INTRODUCED_17):: defines_var(X_INTRODUCED_17);
constraint int_le_reif(2,X_INTRODUCED_3,X_INTRODUCED_18):: defines_var(X_INTRODUCED_18);
constraint int_le_reif(X_INTRODUCED_0,1,X_INTRODUCED_19):: defines_var(X_INTRODUCED_19);
constraint int_le_reif(3,X_INTRODUCED_3,X_INTRODUCED_20):: defines_var(X_INTRODUCED_20);
constraint int_le_reif(1,2,X_INTRODUCED_21):: defines_var(X_INTRODUCED_21);
constraint int_le_reif(4,X_INTRODUCED_3,X_INTRODUCED_22):: defines_var(X_INTRODUCED_22);
constraint int_le_reif(X_INTRODUCED_2,1,X_INTRODUCED_23):: defines_var(X_INTRODUCED_23);
constraint int_le_reif(2,X_INTRODUCED_4,X_INTRODUCED_24):: defines_var(X_INTRODUCED_24);
constraint int_le_reif(1,1,X_INTRODUCED_25):: defines_var(X_INTRODUCED_25);
constraint int_le_reif(3,X_INTRODUCED_4,X_INTRODUCED_26):: defines_var(X_INTRODUCED_26);
constraint int_le_reif(X_INTRODUCED_0,2,X_INTRODUCED_27):: defines_var(X_INTRODUCED_27);
constraint int_le_reif(4,1,X_INTRODUCED_30):: defines_var(X_INTRODUCED_30);
constraint int_le_reif(X_INTRODUCED_3,1,X_INTRODUCED_31):: defines_var(X_INTRODUCED_31);
constraint int_eq_reif(X_INTRODUCED_0,1,X_INTRODUCED_33):: defines_var(X_INTRODUCED_33);
constraint int_eq_reif(X_INTRODUCED_0,2,X_INTRODUCED_35):: defines_var(X_INTRODUCED_35);
constraint int_eq_reif(X_INTRODUCED_3,1,X_INTRODUCED_36):: defines_var(X_INTRODUCED_36);
constraint int_eq_reif(X_INTRODUCED_0,3,X_INTRODUCED_37):: defines_var(X_INTRODUCED_37);
constraint int_eq_reif(X_INTRODUCED_4,2,X_INTRODUCED_38):: defines_var(X_INTRODUCED_38);
constraint int_eq_reif(X_INTRODUCED_2,1,X_INTRODUCED_42):: defines_var(X_INTRODUCED_42);
constraint int_eq_reif(X_INTRODUCED_2,2,X_INTRODUCED_43):: defines_var(X_INTRODUCED_43);
constraint int_eq_reif(X_INTRODUCED_3,3,X_INTRODUCED_44):: defines_var(X_INTRODUCED_44);
constraint int_eq_reif(X_INTRODUCED_3,2,X_INTRODUCED_45):: defines_var(X_INTRODUCED_45);
constraint int_eq_reif(X_INTRODUCED_4,1,X_INTRODUCED_47):: defines_var(X_INTRODUCED_47);
solve  satisfy;
