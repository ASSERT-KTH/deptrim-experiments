array [1..6] of int: X_INTRODUCED_16 = [1,-1,-1,-1,-1,-1];
var 0..5: X_INTRODUCED_0;
var 0..5: X_INTRODUCED_1;
var 0..5: X_INTRODUCED_2;
var 0..5: X_INTRODUCED_3;
var 0..5: X_INTRODUCED_4;
var 0..5: nvar:: output_var:: is_defined_var;
var bool: X_INTRODUCED_5 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_6 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_7 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_8 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_9 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_10 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_11 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_12 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_13 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_14 ::var_is_introduced :: is_defined_var;
array [1..5] of var int: x:: output_array([1..5]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4];
constraint int_lin_eq(X_INTRODUCED_16,[nvar,X_INTRODUCED_6,X_INTRODUCED_8,X_INTRODUCED_10,X_INTRODUCED_12,X_INTRODUCED_14],0):: defines_var(nvar);
constraint int_ne_reif(X_INTRODUCED_0,0,X_INTRODUCED_5):: defines_var(X_INTRODUCED_5);
constraint bool2int(X_INTRODUCED_5,X_INTRODUCED_6):: defines_var(X_INTRODUCED_6);
constraint int_ne_reif(X_INTRODUCED_1,0,X_INTRODUCED_7):: defines_var(X_INTRODUCED_7);
constraint bool2int(X_INTRODUCED_7,X_INTRODUCED_8):: defines_var(X_INTRODUCED_8);
constraint int_ne_reif(X_INTRODUCED_2,0,X_INTRODUCED_9):: defines_var(X_INTRODUCED_9);
constraint bool2int(X_INTRODUCED_9,X_INTRODUCED_10):: defines_var(X_INTRODUCED_10);
constraint int_ne_reif(X_INTRODUCED_3,0,X_INTRODUCED_11):: defines_var(X_INTRODUCED_11);
constraint bool2int(X_INTRODUCED_11,X_INTRODUCED_12):: defines_var(X_INTRODUCED_12);
constraint int_ne_reif(X_INTRODUCED_4,0,X_INTRODUCED_13):: defines_var(X_INTRODUCED_13);
constraint bool2int(X_INTRODUCED_13,X_INTRODUCED_14):: defines_var(X_INTRODUCED_14);
solve  satisfy;
