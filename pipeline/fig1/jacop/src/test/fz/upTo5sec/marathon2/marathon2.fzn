array [1..2] of int: X_INTRODUCED_2 = [1,-1];
var 1..2: Dominique:: output_var;
var {1,5,6}: Ignace:: output_var;
var 4..6: Naren:: output_var:: is_defined_var;
var 1..5: Olivier:: output_var;
var 1..4: Philippe:: output_var;
var 1..6: Pascal:: output_var;
array [1..6] of var int: runners = [Dominique,Ignace,Naren,Olivier,Philippe,Pascal];
constraint int_lin_eq(X_INTRODUCED_2,[Pascal,Naren],-3):: defines_var(Naren);
constraint int_lin_le(X_INTRODUCED_2,[Ignace,Olivier],-1);
constraint int_lin_le(X_INTRODUCED_2,[Ignace,Naren],-1);
constraint int_lin_le(X_INTRODUCED_2,[Pascal,Olivier],-1);
constraint int_lin_le(X_INTRODUCED_2,[Pascal,Naren],-1);
constraint int_lin_le(X_INTRODUCED_2,[Dominique,Olivier],-1);
constraint int_lin_le(X_INTRODUCED_2,[Dominique,Naren],-1);
constraint int_lin_ne(X_INTRODUCED_2,[Dominique,Ignace],0);
constraint int_lin_ne(X_INTRODUCED_2,[Dominique,Naren],0);
constraint int_lin_ne(X_INTRODUCED_2,[Dominique,Olivier],0);
constraint int_lin_ne(X_INTRODUCED_2,[Dominique,Philippe],0);
constraint int_lin_ne(X_INTRODUCED_2,[Dominique,Pascal],0);
constraint int_lin_ne(X_INTRODUCED_2,[Ignace,Naren],0);
constraint int_lin_ne(X_INTRODUCED_2,[Ignace,Olivier],0);
constraint int_lin_ne(X_INTRODUCED_2,[Ignace,Philippe],0);
constraint int_lin_ne(X_INTRODUCED_2,[Ignace,Pascal],0);
constraint int_lin_ne(X_INTRODUCED_2,[Naren,Olivier],0);
constraint int_lin_ne(X_INTRODUCED_2,[Naren,Philippe],0);
constraint int_lin_ne(X_INTRODUCED_2,[Naren,Pascal],0);
constraint int_lin_ne(X_INTRODUCED_2,[Olivier,Philippe],0);
constraint int_lin_ne(X_INTRODUCED_2,[Olivier,Pascal],0);
constraint int_lin_ne(X_INTRODUCED_2,[Philippe,Pascal],0);
solve  satisfy;
