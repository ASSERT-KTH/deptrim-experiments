array [1..9] of int: X_INTRODUCED_42 = [1,-1,-1,-1,-1,-1,-1,-1,-1];
array [1..10] of int: X_INTRODUCED_100 = [1,-1,-1,-1,-1,-1,-1,-1,-1,-1];
var 0..1: X_INTRODUCED_6;
var 0..1: X_INTRODUCED_7;
var 0..1: X_INTRODUCED_8;
var 0..1: X_INTRODUCED_11;
var 0..1: X_INTRODUCED_12;
var 0..1: X_INTRODUCED_13;
var 0..1: X_INTRODUCED_16;
var 0..1: X_INTRODUCED_17;
var 0..1: X_INTRODUCED_18;
var 0..3: X_INTRODUCED_25:: is_defined_var;
var 0..5: X_INTRODUCED_26:: is_defined_var;
var 0..3: X_INTRODUCED_27:: is_defined_var;
var 0..5: X_INTRODUCED_28:: is_defined_var;
var 0..8: X_INTRODUCED_29:: is_defined_var;
var 0..5: X_INTRODUCED_30:: is_defined_var;
var 0..3: X_INTRODUCED_31:: is_defined_var;
var 0..5: X_INTRODUCED_32:: is_defined_var;
var 0..3: X_INTRODUCED_33:: is_defined_var;
var 0..9: cost:: output_var:: is_defined_var;
var bool: X_INTRODUCED_34 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_35 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_36 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_37 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_38 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_39 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_43 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_44 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_45 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_46 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_47 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_48 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_50 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_51 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_52 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_53 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_54 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_55 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_57 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_58 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_59 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_60 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_61 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_62 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_64 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_65 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_66 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_67 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_68 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_69 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_71 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_72 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_73 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_74 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_75 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_76 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_78 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_79 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_80 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_81 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_82 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_83 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_85 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_86 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_87 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_88 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_89 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_90 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_92 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_93 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_94 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_95 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_96 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_97 ::var_is_introduced :: is_defined_var;
array [1..25] of var int: a:: output_array([0..4,0..4]) = [0,0,0,0,0,0,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,0,0,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,0,0,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,0,0,0,0,0,0];
constraint bool_clause([X_INTRODUCED_35],[X_INTRODUCED_34]);
constraint bool_clause([X_INTRODUCED_39],[X_INTRODUCED_36]);
constraint int_lin_eq([1,-1,-1,-1],[X_INTRODUCED_25,X_INTRODUCED_11,X_INTRODUCED_7,X_INTRODUCED_12],0):: defines_var(X_INTRODUCED_25);
constraint bool_clause([X_INTRODUCED_44],[X_INTRODUCED_43]);
constraint bool_clause([X_INTRODUCED_48],[X_INTRODUCED_45]);
constraint int_lin_eq([1,-1,-1,-1,-1,-1],[X_INTRODUCED_26,X_INTRODUCED_12,X_INTRODUCED_11,X_INTRODUCED_8,X_INTRODUCED_6,X_INTRODUCED_13],0):: defines_var(X_INTRODUCED_26);
constraint bool_clause([X_INTRODUCED_51],[X_INTRODUCED_50]);
constraint bool_clause([X_INTRODUCED_55],[X_INTRODUCED_52]);
constraint int_lin_eq([1,-1,-1,-1],[X_INTRODUCED_27,X_INTRODUCED_13,X_INTRODUCED_12,X_INTRODUCED_7],0):: defines_var(X_INTRODUCED_27);
constraint bool_clause([X_INTRODUCED_58],[X_INTRODUCED_57]);
constraint bool_clause([X_INTRODUCED_62],[X_INTRODUCED_59]);
constraint int_lin_eq([1,-1,-1,-1,-1,-1],[X_INTRODUCED_28,X_INTRODUCED_16,X_INTRODUCED_12,X_INTRODUCED_7,X_INTRODUCED_6,X_INTRODUCED_17],0):: defines_var(X_INTRODUCED_28);
constraint bool_clause([X_INTRODUCED_65],[X_INTRODUCED_64]);
constraint bool_clause([X_INTRODUCED_69],[X_INTRODUCED_66]);
constraint int_lin_eq(X_INTRODUCED_42,[X_INTRODUCED_29,X_INTRODUCED_17,X_INTRODUCED_16,X_INTRODUCED_13,X_INTRODUCED_11,X_INTRODUCED_8,X_INTRODUCED_7,X_INTRODUCED_6,X_INTRODUCED_18],0):: defines_var(X_INTRODUCED_29);
constraint bool_clause([X_INTRODUCED_72],[X_INTRODUCED_71]);
constraint bool_clause([X_INTRODUCED_76],[X_INTRODUCED_73]);
constraint int_lin_eq([1,-1,-1,-1,-1,-1],[X_INTRODUCED_30,X_INTRODUCED_18,X_INTRODUCED_17,X_INTRODUCED_12,X_INTRODUCED_8,X_INTRODUCED_7],0):: defines_var(X_INTRODUCED_30);
constraint bool_clause([X_INTRODUCED_79],[X_INTRODUCED_78]);
constraint bool_clause([X_INTRODUCED_83],[X_INTRODUCED_80]);
constraint int_lin_eq([1,-1,-1,-1],[X_INTRODUCED_31,X_INTRODUCED_17,X_INTRODUCED_12,X_INTRODUCED_11],0):: defines_var(X_INTRODUCED_31);
constraint bool_clause([X_INTRODUCED_86],[X_INTRODUCED_85]);
constraint bool_clause([X_INTRODUCED_90],[X_INTRODUCED_87]);
constraint int_lin_eq([1,-1,-1,-1,-1,-1],[X_INTRODUCED_32,X_INTRODUCED_18,X_INTRODUCED_16,X_INTRODUCED_13,X_INTRODUCED_12,X_INTRODUCED_11],0):: defines_var(X_INTRODUCED_32);
constraint bool_clause([X_INTRODUCED_93],[X_INTRODUCED_92]);
constraint bool_clause([X_INTRODUCED_97],[X_INTRODUCED_94]);
constraint int_lin_eq([1,-1,-1,-1],[X_INTRODUCED_33,X_INTRODUCED_17,X_INTRODUCED_13,X_INTRODUCED_12],0):: defines_var(X_INTRODUCED_33);
constraint int_lin_eq(X_INTRODUCED_100,[cost,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18],0):: defines_var(cost);
constraint int_eq_reif(X_INTRODUCED_6,0,X_INTRODUCED_34):: defines_var(X_INTRODUCED_34);
constraint int_ne_reif(X_INTRODUCED_25,3,X_INTRODUCED_35):: defines_var(X_INTRODUCED_35);
constraint int_eq_reif(X_INTRODUCED_6,1,X_INTRODUCED_36):: defines_var(X_INTRODUCED_36);
constraint int_le_reif(X_INTRODUCED_25,3,X_INTRODUCED_37):: defines_var(X_INTRODUCED_37);
constraint int_le_reif(2,X_INTRODUCED_25,X_INTRODUCED_38):: defines_var(X_INTRODUCED_38);
constraint array_bool_and([X_INTRODUCED_37,X_INTRODUCED_38],X_INTRODUCED_39):: defines_var(X_INTRODUCED_39);
constraint int_eq_reif(X_INTRODUCED_7,0,X_INTRODUCED_43):: defines_var(X_INTRODUCED_43);
constraint int_ne_reif(X_INTRODUCED_26,3,X_INTRODUCED_44):: defines_var(X_INTRODUCED_44);
constraint int_eq_reif(X_INTRODUCED_7,1,X_INTRODUCED_45):: defines_var(X_INTRODUCED_45);
constraint int_le_reif(X_INTRODUCED_26,3,X_INTRODUCED_46):: defines_var(X_INTRODUCED_46);
constraint int_le_reif(2,X_INTRODUCED_26,X_INTRODUCED_47):: defines_var(X_INTRODUCED_47);
constraint array_bool_and([X_INTRODUCED_46,X_INTRODUCED_47],X_INTRODUCED_48):: defines_var(X_INTRODUCED_48);
constraint int_eq_reif(X_INTRODUCED_8,0,X_INTRODUCED_50):: defines_var(X_INTRODUCED_50);
constraint int_ne_reif(X_INTRODUCED_27,3,X_INTRODUCED_51):: defines_var(X_INTRODUCED_51);
constraint int_eq_reif(X_INTRODUCED_8,1,X_INTRODUCED_52):: defines_var(X_INTRODUCED_52);
constraint int_le_reif(X_INTRODUCED_27,3,X_INTRODUCED_53):: defines_var(X_INTRODUCED_53);
constraint int_le_reif(2,X_INTRODUCED_27,X_INTRODUCED_54):: defines_var(X_INTRODUCED_54);
constraint array_bool_and([X_INTRODUCED_53,X_INTRODUCED_54],X_INTRODUCED_55):: defines_var(X_INTRODUCED_55);
constraint int_eq_reif(X_INTRODUCED_11,0,X_INTRODUCED_57):: defines_var(X_INTRODUCED_57);
constraint int_ne_reif(X_INTRODUCED_28,3,X_INTRODUCED_58):: defines_var(X_INTRODUCED_58);
constraint int_eq_reif(X_INTRODUCED_11,1,X_INTRODUCED_59):: defines_var(X_INTRODUCED_59);
constraint int_le_reif(X_INTRODUCED_28,3,X_INTRODUCED_60):: defines_var(X_INTRODUCED_60);
constraint int_le_reif(2,X_INTRODUCED_28,X_INTRODUCED_61):: defines_var(X_INTRODUCED_61);
constraint array_bool_and([X_INTRODUCED_60,X_INTRODUCED_61],X_INTRODUCED_62):: defines_var(X_INTRODUCED_62);
constraint int_eq_reif(X_INTRODUCED_12,0,X_INTRODUCED_64):: defines_var(X_INTRODUCED_64);
constraint int_ne_reif(X_INTRODUCED_29,3,X_INTRODUCED_65):: defines_var(X_INTRODUCED_65);
constraint int_eq_reif(X_INTRODUCED_12,1,X_INTRODUCED_66):: defines_var(X_INTRODUCED_66);
constraint int_le_reif(X_INTRODUCED_29,3,X_INTRODUCED_67):: defines_var(X_INTRODUCED_67);
constraint int_le_reif(2,X_INTRODUCED_29,X_INTRODUCED_68):: defines_var(X_INTRODUCED_68);
constraint array_bool_and([X_INTRODUCED_67,X_INTRODUCED_68],X_INTRODUCED_69):: defines_var(X_INTRODUCED_69);
constraint int_eq_reif(X_INTRODUCED_13,0,X_INTRODUCED_71):: defines_var(X_INTRODUCED_71);
constraint int_ne_reif(X_INTRODUCED_30,3,X_INTRODUCED_72):: defines_var(X_INTRODUCED_72);
constraint int_eq_reif(X_INTRODUCED_13,1,X_INTRODUCED_73):: defines_var(X_INTRODUCED_73);
constraint int_le_reif(X_INTRODUCED_30,3,X_INTRODUCED_74):: defines_var(X_INTRODUCED_74);
constraint int_le_reif(2,X_INTRODUCED_30,X_INTRODUCED_75):: defines_var(X_INTRODUCED_75);
constraint array_bool_and([X_INTRODUCED_74,X_INTRODUCED_75],X_INTRODUCED_76):: defines_var(X_INTRODUCED_76);
constraint int_eq_reif(X_INTRODUCED_16,0,X_INTRODUCED_78):: defines_var(X_INTRODUCED_78);
constraint int_ne_reif(X_INTRODUCED_31,3,X_INTRODUCED_79):: defines_var(X_INTRODUCED_79);
constraint int_eq_reif(X_INTRODUCED_16,1,X_INTRODUCED_80):: defines_var(X_INTRODUCED_80);
constraint int_le_reif(X_INTRODUCED_31,3,X_INTRODUCED_81):: defines_var(X_INTRODUCED_81);
constraint int_le_reif(2,X_INTRODUCED_31,X_INTRODUCED_82):: defines_var(X_INTRODUCED_82);
constraint array_bool_and([X_INTRODUCED_81,X_INTRODUCED_82],X_INTRODUCED_83):: defines_var(X_INTRODUCED_83);
constraint int_eq_reif(X_INTRODUCED_17,0,X_INTRODUCED_85):: defines_var(X_INTRODUCED_85);
constraint int_ne_reif(X_INTRODUCED_32,3,X_INTRODUCED_86):: defines_var(X_INTRODUCED_86);
constraint int_eq_reif(X_INTRODUCED_17,1,X_INTRODUCED_87):: defines_var(X_INTRODUCED_87);
constraint int_le_reif(X_INTRODUCED_32,3,X_INTRODUCED_88):: defines_var(X_INTRODUCED_88);
constraint int_le_reif(2,X_INTRODUCED_32,X_INTRODUCED_89):: defines_var(X_INTRODUCED_89);
constraint array_bool_and([X_INTRODUCED_88,X_INTRODUCED_89],X_INTRODUCED_90):: defines_var(X_INTRODUCED_90);
constraint int_eq_reif(X_INTRODUCED_18,0,X_INTRODUCED_92):: defines_var(X_INTRODUCED_92);
constraint int_ne_reif(X_INTRODUCED_33,3,X_INTRODUCED_93):: defines_var(X_INTRODUCED_93);
constraint int_eq_reif(X_INTRODUCED_18,1,X_INTRODUCED_94):: defines_var(X_INTRODUCED_94);
constraint int_le_reif(X_INTRODUCED_33,3,X_INTRODUCED_95):: defines_var(X_INTRODUCED_95);
constraint int_le_reif(2,X_INTRODUCED_33,X_INTRODUCED_96):: defines_var(X_INTRODUCED_96);
constraint array_bool_and([X_INTRODUCED_95,X_INTRODUCED_96],X_INTRODUCED_97):: defines_var(X_INTRODUCED_97);
solve  maximize cost;
