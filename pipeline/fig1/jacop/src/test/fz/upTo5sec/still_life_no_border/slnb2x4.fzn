array [1..9] of int: X_INTRODUCED_40 = [1,-1,-1,-1,-1,-1,-1,-1,-1];
var 0..1: X_INTRODUCED_7;
var 0..1: X_INTRODUCED_8;
var 0..1: X_INTRODUCED_9;
var 0..1: X_INTRODUCED_10;
var 0..1: X_INTRODUCED_13;
var 0..1: X_INTRODUCED_14;
var 0..1: X_INTRODUCED_15;
var 0..1: X_INTRODUCED_16;
var 0..3: X_INTRODUCED_24:: is_defined_var;
var 0..5: X_INTRODUCED_25:: is_defined_var;
var 0..5: X_INTRODUCED_26:: is_defined_var;
var 0..3: X_INTRODUCED_27:: is_defined_var;
var 0..3: X_INTRODUCED_28:: is_defined_var;
var 0..5: X_INTRODUCED_29:: is_defined_var;
var 0..5: X_INTRODUCED_30:: is_defined_var;
var 0..3: X_INTRODUCED_31:: is_defined_var;
var 0..8: cost:: output_var:: is_defined_var;
var bool: X_INTRODUCED_32 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_33 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_34 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_35 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_36 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_37 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_41 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_42 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_43 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_44 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_45 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_46 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_48 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_49 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_50 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_51 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_52 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_53 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_55 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_56 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_57 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_58 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_59 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_60 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_62 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_63 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_64 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_65 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_66 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_67 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_69 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_70 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_71 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_72 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_73 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_74 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_76 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_77 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_78 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_79 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_80 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_81 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_83 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_84 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_85 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_86 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_87 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_88 ::var_is_introduced :: is_defined_var;
array [1..24] of var int: a:: output_array([0..3,0..5]) = [0,0,0,0,0,0,0,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,0,0,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,0,0,0,0,0,0,0];
constraint bool_clause([X_INTRODUCED_33],[X_INTRODUCED_32]);
constraint bool_clause([X_INTRODUCED_37],[X_INTRODUCED_34]);
constraint int_lin_eq([1,-1,-1,-1],[X_INTRODUCED_24,X_INTRODUCED_13,X_INTRODUCED_8,X_INTRODUCED_14],0):: defines_var(X_INTRODUCED_24);
constraint bool_clause([X_INTRODUCED_42],[X_INTRODUCED_41]);
constraint bool_clause([X_INTRODUCED_46],[X_INTRODUCED_43]);
constraint int_lin_eq([1,-1,-1,-1,-1,-1],[X_INTRODUCED_25,X_INTRODUCED_14,X_INTRODUCED_13,X_INTRODUCED_9,X_INTRODUCED_7,X_INTRODUCED_15],0):: defines_var(X_INTRODUCED_25);
constraint bool_clause([X_INTRODUCED_49],[X_INTRODUCED_48]);
constraint bool_clause([X_INTRODUCED_53],[X_INTRODUCED_50]);
constraint int_lin_eq([1,-1,-1,-1,-1,-1],[X_INTRODUCED_26,X_INTRODUCED_15,X_INTRODUCED_14,X_INTRODUCED_10,X_INTRODUCED_8,X_INTRODUCED_16],0):: defines_var(X_INTRODUCED_26);
constraint bool_clause([X_INTRODUCED_56],[X_INTRODUCED_55]);
constraint bool_clause([X_INTRODUCED_60],[X_INTRODUCED_57]);
constraint int_lin_eq([1,-1,-1,-1],[X_INTRODUCED_27,X_INTRODUCED_16,X_INTRODUCED_15,X_INTRODUCED_9],0):: defines_var(X_INTRODUCED_27);
constraint bool_clause([X_INTRODUCED_63],[X_INTRODUCED_62]);
constraint bool_clause([X_INTRODUCED_67],[X_INTRODUCED_64]);
constraint int_lin_eq([1,-1,-1,-1],[X_INTRODUCED_28,X_INTRODUCED_14,X_INTRODUCED_8,X_INTRODUCED_7],0):: defines_var(X_INTRODUCED_28);
constraint bool_clause([X_INTRODUCED_70],[X_INTRODUCED_69]);
constraint bool_clause([X_INTRODUCED_74],[X_INTRODUCED_71]);
constraint int_lin_eq([1,-1,-1,-1,-1,-1],[X_INTRODUCED_29,X_INTRODUCED_15,X_INTRODUCED_13,X_INTRODUCED_9,X_INTRODUCED_8,X_INTRODUCED_7],0):: defines_var(X_INTRODUCED_29);
constraint bool_clause([X_INTRODUCED_77],[X_INTRODUCED_76]);
constraint bool_clause([X_INTRODUCED_81],[X_INTRODUCED_78]);
constraint int_lin_eq([1,-1,-1,-1,-1,-1],[X_INTRODUCED_30,X_INTRODUCED_16,X_INTRODUCED_14,X_INTRODUCED_10,X_INTRODUCED_9,X_INTRODUCED_8],0):: defines_var(X_INTRODUCED_30);
constraint bool_clause([X_INTRODUCED_84],[X_INTRODUCED_83]);
constraint bool_clause([X_INTRODUCED_88],[X_INTRODUCED_85]);
constraint int_lin_eq([1,-1,-1,-1],[X_INTRODUCED_31,X_INTRODUCED_15,X_INTRODUCED_10,X_INTRODUCED_9],0):: defines_var(X_INTRODUCED_31);
constraint int_lin_eq(X_INTRODUCED_40,[cost,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16],0):: defines_var(cost);
constraint int_eq_reif(X_INTRODUCED_7,0,X_INTRODUCED_32):: defines_var(X_INTRODUCED_32);
constraint int_ne_reif(X_INTRODUCED_24,3,X_INTRODUCED_33):: defines_var(X_INTRODUCED_33);
constraint int_eq_reif(X_INTRODUCED_7,1,X_INTRODUCED_34):: defines_var(X_INTRODUCED_34);
constraint int_le_reif(X_INTRODUCED_24,3,X_INTRODUCED_35):: defines_var(X_INTRODUCED_35);
constraint int_le_reif(2,X_INTRODUCED_24,X_INTRODUCED_36):: defines_var(X_INTRODUCED_36);
constraint array_bool_and([X_INTRODUCED_35,X_INTRODUCED_36],X_INTRODUCED_37):: defines_var(X_INTRODUCED_37);
constraint int_eq_reif(X_INTRODUCED_8,0,X_INTRODUCED_41):: defines_var(X_INTRODUCED_41);
constraint int_ne_reif(X_INTRODUCED_25,3,X_INTRODUCED_42):: defines_var(X_INTRODUCED_42);
constraint int_eq_reif(X_INTRODUCED_8,1,X_INTRODUCED_43):: defines_var(X_INTRODUCED_43);
constraint int_le_reif(X_INTRODUCED_25,3,X_INTRODUCED_44):: defines_var(X_INTRODUCED_44);
constraint int_le_reif(2,X_INTRODUCED_25,X_INTRODUCED_45):: defines_var(X_INTRODUCED_45);
constraint array_bool_and([X_INTRODUCED_44,X_INTRODUCED_45],X_INTRODUCED_46):: defines_var(X_INTRODUCED_46);
constraint int_eq_reif(X_INTRODUCED_9,0,X_INTRODUCED_48):: defines_var(X_INTRODUCED_48);
constraint int_ne_reif(X_INTRODUCED_26,3,X_INTRODUCED_49):: defines_var(X_INTRODUCED_49);
constraint int_eq_reif(X_INTRODUCED_9,1,X_INTRODUCED_50):: defines_var(X_INTRODUCED_50);
constraint int_le_reif(X_INTRODUCED_26,3,X_INTRODUCED_51):: defines_var(X_INTRODUCED_51);
constraint int_le_reif(2,X_INTRODUCED_26,X_INTRODUCED_52):: defines_var(X_INTRODUCED_52);
constraint array_bool_and([X_INTRODUCED_51,X_INTRODUCED_52],X_INTRODUCED_53):: defines_var(X_INTRODUCED_53);
constraint int_eq_reif(X_INTRODUCED_10,0,X_INTRODUCED_55):: defines_var(X_INTRODUCED_55);
constraint int_ne_reif(X_INTRODUCED_27,3,X_INTRODUCED_56):: defines_var(X_INTRODUCED_56);
constraint int_eq_reif(X_INTRODUCED_10,1,X_INTRODUCED_57):: defines_var(X_INTRODUCED_57);
constraint int_le_reif(X_INTRODUCED_27,3,X_INTRODUCED_58):: defines_var(X_INTRODUCED_58);
constraint int_le_reif(2,X_INTRODUCED_27,X_INTRODUCED_59):: defines_var(X_INTRODUCED_59);
constraint array_bool_and([X_INTRODUCED_58,X_INTRODUCED_59],X_INTRODUCED_60):: defines_var(X_INTRODUCED_60);
constraint int_eq_reif(X_INTRODUCED_13,0,X_INTRODUCED_62):: defines_var(X_INTRODUCED_62);
constraint int_ne_reif(X_INTRODUCED_28,3,X_INTRODUCED_63):: defines_var(X_INTRODUCED_63);
constraint int_eq_reif(X_INTRODUCED_13,1,X_INTRODUCED_64):: defines_var(X_INTRODUCED_64);
constraint int_le_reif(X_INTRODUCED_28,3,X_INTRODUCED_65):: defines_var(X_INTRODUCED_65);
constraint int_le_reif(2,X_INTRODUCED_28,X_INTRODUCED_66):: defines_var(X_INTRODUCED_66);
constraint array_bool_and([X_INTRODUCED_65,X_INTRODUCED_66],X_INTRODUCED_67):: defines_var(X_INTRODUCED_67);
constraint int_eq_reif(X_INTRODUCED_14,0,X_INTRODUCED_69):: defines_var(X_INTRODUCED_69);
constraint int_ne_reif(X_INTRODUCED_29,3,X_INTRODUCED_70):: defines_var(X_INTRODUCED_70);
constraint int_eq_reif(X_INTRODUCED_14,1,X_INTRODUCED_71):: defines_var(X_INTRODUCED_71);
constraint int_le_reif(X_INTRODUCED_29,3,X_INTRODUCED_72):: defines_var(X_INTRODUCED_72);
constraint int_le_reif(2,X_INTRODUCED_29,X_INTRODUCED_73):: defines_var(X_INTRODUCED_73);
constraint array_bool_and([X_INTRODUCED_72,X_INTRODUCED_73],X_INTRODUCED_74):: defines_var(X_INTRODUCED_74);
constraint int_eq_reif(X_INTRODUCED_15,0,X_INTRODUCED_76):: defines_var(X_INTRODUCED_76);
constraint int_ne_reif(X_INTRODUCED_30,3,X_INTRODUCED_77):: defines_var(X_INTRODUCED_77);
constraint int_eq_reif(X_INTRODUCED_15,1,X_INTRODUCED_78):: defines_var(X_INTRODUCED_78);
constraint int_le_reif(X_INTRODUCED_30,3,X_INTRODUCED_79):: defines_var(X_INTRODUCED_79);
constraint int_le_reif(2,X_INTRODUCED_30,X_INTRODUCED_80):: defines_var(X_INTRODUCED_80);
constraint array_bool_and([X_INTRODUCED_79,X_INTRODUCED_80],X_INTRODUCED_81):: defines_var(X_INTRODUCED_81);
constraint int_eq_reif(X_INTRODUCED_16,0,X_INTRODUCED_83):: defines_var(X_INTRODUCED_83);
constraint int_ne_reif(X_INTRODUCED_31,3,X_INTRODUCED_84):: defines_var(X_INTRODUCED_84);
constraint int_eq_reif(X_INTRODUCED_16,1,X_INTRODUCED_85):: defines_var(X_INTRODUCED_85);
constraint int_le_reif(X_INTRODUCED_31,3,X_INTRODUCED_86):: defines_var(X_INTRODUCED_86);
constraint int_le_reif(2,X_INTRODUCED_31,X_INTRODUCED_87):: defines_var(X_INTRODUCED_87);
constraint array_bool_and([X_INTRODUCED_86,X_INTRODUCED_87],X_INTRODUCED_88):: defines_var(X_INTRODUCED_88);
solve  maximize cost;
