array [1..2] of int: X_INTRODUCED_5 = [1,-1];
array [1..2] of int: X_INTRODUCED_12 = [-1,1];
var 1..5: X_INTRODUCED_1;
var 1..5: X_INTRODUCED_2;
var 1..5: X_INTRODUCED_3;
var 1..5: X_INTRODUCED_4;
var 1..1: pos:: output_var;
var 1..5: X_INTRODUCED_11 ::var_is_introduced :: is_defined_var;
array [1..5] of var int: x:: output_array([1..5]) = [X_INTRODUCED_11,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4];
constraint int_lin_ne(X_INTRODUCED_5,[X_INTRODUCED_11,X_INTRODUCED_1],0);
constraint int_lin_ne(X_INTRODUCED_5,[X_INTRODUCED_11,X_INTRODUCED_2],0);
constraint int_lin_ne(X_INTRODUCED_5,[X_INTRODUCED_11,X_INTRODUCED_3],0);
constraint int_lin_ne(X_INTRODUCED_5,[X_INTRODUCED_11,X_INTRODUCED_4],0);
constraint int_lin_ne(X_INTRODUCED_5,[X_INTRODUCED_1,X_INTRODUCED_2],0);
constraint int_lin_ne(X_INTRODUCED_5,[X_INTRODUCED_1,X_INTRODUCED_3],0);
constraint int_lin_ne(X_INTRODUCED_5,[X_INTRODUCED_1,X_INTRODUCED_4],0);
constraint int_lin_ne(X_INTRODUCED_5,[X_INTRODUCED_2,X_INTRODUCED_3],0);
constraint int_lin_ne(X_INTRODUCED_5,[X_INTRODUCED_2,X_INTRODUCED_4],0);
constraint int_lin_ne(X_INTRODUCED_5,[X_INTRODUCED_3,X_INTRODUCED_4],0);
constraint int_lin_le(X_INTRODUCED_5,[X_INTRODUCED_1,X_INTRODUCED_11],-1);
constraint int_lin_le(X_INTRODUCED_5,[X_INTRODUCED_1,X_INTRODUCED_2],-1);
constraint int_lin_le(X_INTRODUCED_5,[X_INTRODUCED_1,X_INTRODUCED_3],-1);
constraint int_lin_le(X_INTRODUCED_5,[X_INTRODUCED_1,X_INTRODUCED_4],-1);
constraint int_lin_le(X_INTRODUCED_12,[X_INTRODUCED_11,X_INTRODUCED_1],-1);
constraint int_lin_le(X_INTRODUCED_12,[X_INTRODUCED_11,X_INTRODUCED_2],-1);
constraint int_lin_le(X_INTRODUCED_12,[X_INTRODUCED_11,X_INTRODUCED_3],-1);
constraint int_lin_le(X_INTRODUCED_12,[X_INTRODUCED_11,X_INTRODUCED_4],-1);
solve  satisfy;
