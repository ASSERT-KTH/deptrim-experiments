var 1..3: X_INTRODUCED_0;
var 1..3: X_INTRODUCED_1;
var 1..3: X_INTRODUCED_2;
var bool: X_INTRODUCED_6 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_7 ::var_is_introduced :: is_defined_var;
var 0..4: X_INTRODUCED_8 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_9 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_10 ::var_is_introduced :: is_defined_var;
var 0..4: X_INTRODUCED_11 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_12 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_13 ::var_is_introduced :: is_defined_var;
var 0..4: X_INTRODUCED_14 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_17 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_18 ::var_is_introduced :: is_defined_var;
var 0..4: X_INTRODUCED_19 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_20 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_21 ::var_is_introduced :: is_defined_var;
var 0..4: X_INTRODUCED_22 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_23 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_24 ::var_is_introduced :: is_defined_var;
var 0..4: X_INTRODUCED_25 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_27 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_28 ::var_is_introduced :: is_defined_var;
var 0..4: X_INTRODUCED_29 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_30 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_31 ::var_is_introduced :: is_defined_var;
var 0..4: X_INTRODUCED_32 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_33 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_34 ::var_is_introduced :: is_defined_var;
var 0..4: X_INTRODUCED_35 ::var_is_introduced :: is_defined_var;
array [1..3] of var int: bins:: output_array([1..3]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2];
array [1..3] of var int: weights:: output_array([1..3]) = [4,3,1];
constraint int_lin_le([1,1,1],[X_INTRODUCED_8,X_INTRODUCED_11,X_INTRODUCED_14],5);
constraint int_lin_le([1,1,1],[X_INTRODUCED_19,X_INTRODUCED_22,X_INTRODUCED_25],5);
constraint int_lin_le([1,1,1],[X_INTRODUCED_29,X_INTRODUCED_32,X_INTRODUCED_35],5);
constraint int_eq_reif(X_INTRODUCED_0,1,X_INTRODUCED_6):: defines_var(X_INTRODUCED_6);
constraint bool2int(X_INTRODUCED_6,X_INTRODUCED_7):: defines_var(X_INTRODUCED_7);
constraint int_times(4,X_INTRODUCED_7,X_INTRODUCED_8):: defines_var(X_INTRODUCED_8);
constraint int_eq_reif(X_INTRODUCED_1,1,X_INTRODUCED_9):: defines_var(X_INTRODUCED_9);
constraint bool2int(X_INTRODUCED_9,X_INTRODUCED_10):: defines_var(X_INTRODUCED_10);
constraint int_times(3,X_INTRODUCED_10,X_INTRODUCED_11):: defines_var(X_INTRODUCED_11);
constraint int_eq_reif(X_INTRODUCED_2,1,X_INTRODUCED_12):: defines_var(X_INTRODUCED_12);
constraint bool2int(X_INTRODUCED_12,X_INTRODUCED_13):: defines_var(X_INTRODUCED_13);
constraint int_times(1,X_INTRODUCED_13,X_INTRODUCED_14):: defines_var(X_INTRODUCED_14);
constraint int_eq_reif(X_INTRODUCED_0,2,X_INTRODUCED_17):: defines_var(X_INTRODUCED_17);
constraint bool2int(X_INTRODUCED_17,X_INTRODUCED_18):: defines_var(X_INTRODUCED_18);
constraint int_times(4,X_INTRODUCED_18,X_INTRODUCED_19):: defines_var(X_INTRODUCED_19);
constraint int_eq_reif(X_INTRODUCED_1,2,X_INTRODUCED_20):: defines_var(X_INTRODUCED_20);
constraint bool2int(X_INTRODUCED_20,X_INTRODUCED_21):: defines_var(X_INTRODUCED_21);
constraint int_times(3,X_INTRODUCED_21,X_INTRODUCED_22):: defines_var(X_INTRODUCED_22);
constraint int_eq_reif(X_INTRODUCED_2,2,X_INTRODUCED_23):: defines_var(X_INTRODUCED_23);
constraint bool2int(X_INTRODUCED_23,X_INTRODUCED_24):: defines_var(X_INTRODUCED_24);
constraint int_times(1,X_INTRODUCED_24,X_INTRODUCED_25):: defines_var(X_INTRODUCED_25);
constraint int_eq_reif(X_INTRODUCED_0,3,X_INTRODUCED_27):: defines_var(X_INTRODUCED_27);
constraint bool2int(X_INTRODUCED_27,X_INTRODUCED_28):: defines_var(X_INTRODUCED_28);
constraint int_times(4,X_INTRODUCED_28,X_INTRODUCED_29):: defines_var(X_INTRODUCED_29);
constraint int_eq_reif(X_INTRODUCED_1,3,X_INTRODUCED_30):: defines_var(X_INTRODUCED_30);
constraint bool2int(X_INTRODUCED_30,X_INTRODUCED_31):: defines_var(X_INTRODUCED_31);
constraint int_times(3,X_INTRODUCED_31,X_INTRODUCED_32):: defines_var(X_INTRODUCED_32);
constraint int_eq_reif(X_INTRODUCED_2,3,X_INTRODUCED_33):: defines_var(X_INTRODUCED_33);
constraint bool2int(X_INTRODUCED_33,X_INTRODUCED_34):: defines_var(X_INTRODUCED_34);
constraint int_times(1,X_INTRODUCED_34,X_INTRODUCED_35):: defines_var(X_INTRODUCED_35);
solve  satisfy;
