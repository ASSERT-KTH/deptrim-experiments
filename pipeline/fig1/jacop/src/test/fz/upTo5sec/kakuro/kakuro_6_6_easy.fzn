predicate jacop_alldiff(array [int] of var int: x);
array [1..3] of int: X_INTRODUCED_39 = [1,1,1];
array [1..4] of int: X_INTRODUCED_43 = [1,1,1,1];
array [1..2] of int: X_INTRODUCED_47 = [1,1];
array [1..5] of int: X_INTRODUCED_63 = [1,1,1,1,1];
var {4,6,7,8,9}: X_INTRODUCED_8;
var {1,3}: X_INTRODUCED_9;
var 1..5: X_INTRODUCED_10;
var 1..2: X_INTRODUCED_13;
var {4,6,7,8,9}: X_INTRODUCED_14;
var {1,3}: X_INTRODUCED_15;
var 1..5: X_INTRODUCED_16;
var 1..2: X_INTRODUCED_19;
var {4,6,7,8,9}: X_INTRODUCED_20;
var 1..5: X_INTRODUCED_22;
var {1,3}: X_INTRODUCED_23;
var {4,6,7,8,9}: X_INTRODUCED_26;
var 8..9: X_INTRODUCED_27;
var 1..5: X_INTRODUCED_28;
var {1,3}: X_INTRODUCED_29;
var {4,6,7,8,9}: X_INTRODUCED_32;
var 8..9: X_INTRODUCED_33;
var 1..5: X_INTRODUCED_34;
array [1..36] of var int: grid:: output_array([1..6,1..6]) = [0,0,0,0,0,0,0,0,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,0,0,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,0,0,X_INTRODUCED_19,X_INTRODUCED_20,0,X_INTRODUCED_22,X_INTRODUCED_23,0,0,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29,0,0,X_INTRODUCED_32,X_INTRODUCED_33,X_INTRODUCED_34,0];
array [1..3] of var int: X_INTRODUCED_36 ::var_is_introduced  = [X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10];
array [1..4] of var int: X_INTRODUCED_40 ::var_is_introduced  = [X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16];
array [1..2] of var int: X_INTRODUCED_44 ::var_is_introduced  = [X_INTRODUCED_19,X_INTRODUCED_20];
array [1..2] of var int: X_INTRODUCED_48 ::var_is_introduced  = [X_INTRODUCED_22,X_INTRODUCED_23];
array [1..4] of var int: X_INTRODUCED_51 ::var_is_introduced  = [X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29];
array [1..3] of var int: X_INTRODUCED_54 ::var_is_introduced  = [X_INTRODUCED_32,X_INTRODUCED_33,X_INTRODUCED_34];
array [1..2] of var int: X_INTRODUCED_57 ::var_is_introduced  = [X_INTRODUCED_13,X_INTRODUCED_19];
array [1..5] of var int: X_INTRODUCED_60 ::var_is_introduced  = [X_INTRODUCED_8,X_INTRODUCED_14,X_INTRODUCED_20,X_INTRODUCED_26,X_INTRODUCED_32];
array [1..2] of var int: X_INTRODUCED_64 ::var_is_introduced  = [X_INTRODUCED_9,X_INTRODUCED_15];
array [1..2] of var int: X_INTRODUCED_67 ::var_is_introduced  = [X_INTRODUCED_27,X_INTRODUCED_33];
array [1..5] of var int: X_INTRODUCED_70 ::var_is_introduced  = [X_INTRODUCED_10,X_INTRODUCED_16,X_INTRODUCED_22,X_INTRODUCED_28,X_INTRODUCED_34];
array [1..2] of var int: X_INTRODUCED_73 ::var_is_introduced  = [X_INTRODUCED_23,X_INTRODUCED_29];
constraint jacop_alldiff(X_INTRODUCED_36);
constraint int_lin_eq(X_INTRODUCED_39,[X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10],8);
constraint jacop_alldiff(X_INTRODUCED_40);
constraint int_lin_eq(X_INTRODUCED_43,[X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16],15);
constraint jacop_alldiff(X_INTRODUCED_44);
constraint int_lin_eq(X_INTRODUCED_47,[X_INTRODUCED_19,X_INTRODUCED_20],9);
constraint jacop_alldiff(X_INTRODUCED_48);
constraint int_lin_eq(X_INTRODUCED_47,[X_INTRODUCED_22,X_INTRODUCED_23],8);
constraint jacop_alldiff(X_INTRODUCED_51);
constraint int_lin_eq(X_INTRODUCED_43,[X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29],22);
constraint jacop_alldiff(X_INTRODUCED_54);
constraint int_lin_eq(X_INTRODUCED_39,[X_INTRODUCED_32,X_INTRODUCED_33,X_INTRODUCED_34],15);
constraint jacop_alldiff(X_INTRODUCED_57);
constraint int_lin_eq(X_INTRODUCED_47,[X_INTRODUCED_13,X_INTRODUCED_19],3);
constraint jacop_alldiff(X_INTRODUCED_60);
constraint int_lin_eq(X_INTRODUCED_63,[X_INTRODUCED_8,X_INTRODUCED_14,X_INTRODUCED_20,X_INTRODUCED_26,X_INTRODUCED_32],34);
constraint jacop_alldiff(X_INTRODUCED_64);
constraint int_lin_eq(X_INTRODUCED_47,[X_INTRODUCED_9,X_INTRODUCED_15],4);
constraint jacop_alldiff(X_INTRODUCED_67);
constraint int_lin_eq(X_INTRODUCED_47,[X_INTRODUCED_27,X_INTRODUCED_33],17);
constraint jacop_alldiff(X_INTRODUCED_70);
constraint int_lin_eq(X_INTRODUCED_63,[X_INTRODUCED_10,X_INTRODUCED_16,X_INTRODUCED_22,X_INTRODUCED_28,X_INTRODUCED_34],15);
constraint jacop_alldiff(X_INTRODUCED_73);
constraint int_lin_eq(X_INTRODUCED_47,[X_INTRODUCED_23,X_INTRODUCED_29],4);
solve  satisfy;
