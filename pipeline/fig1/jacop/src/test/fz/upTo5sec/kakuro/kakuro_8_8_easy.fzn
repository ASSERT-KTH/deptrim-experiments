predicate jacop_alldiff(array [int] of var int: x);
array [1..2] of int: X_INTRODUCED_67 = [1,1];
array [1..4] of int: X_INTRODUCED_71 = [1,1,1,1];
array [1..3] of int: X_INTRODUCED_81 = [1,1,1];
var {5,7,8,9}: X_INTRODUCED_10;
var {1,3}: X_INTRODUCED_11;
var 7..9: X_INTRODUCED_17;
var {5,7,8,9}: X_INTRODUCED_18;
var {1,3}: X_INTRODUCED_19;
var 8..9: X_INTRODUCED_20;
var 7..9: X_INTRODUCED_25;
var {5,7,8,9}: X_INTRODUCED_26;
var 8..9: X_INTRODUCED_28;
var 1..2: X_INTRODUCED_29;
var 7..9: X_INTRODUCED_33;
var {5,7,8,9}: X_INTRODUCED_34;
var 1..2: X_INTRODUCED_35;
var 1..2: X_INTRODUCED_37;
var {1,2,3,5}: X_INTRODUCED_38;
var {1,2,4}: X_INTRODUCED_39;
var 1..2: X_INTRODUCED_43;
var {7,9}: X_INTRODUCED_44;
var {1,2,3,5}: X_INTRODUCED_46;
var {1,2,4}: X_INTRODUCED_47;
var {7,9}: X_INTRODUCED_52;
var 8..9: X_INTRODUCED_53;
var {1,2,3,5}: X_INTRODUCED_54;
var {1,2,4}: X_INTRODUCED_55;
var 8..9: X_INTRODUCED_61;
var {1,2,3,5}: X_INTRODUCED_62;
array [1..64] of var int: grid:: output_array([1..8,1..8]) = [0,0,0,0,0,0,0,0,0,0,X_INTRODUCED_10,X_INTRODUCED_11,0,0,0,0,0,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,0,0,0,0,X_INTRODUCED_25,X_INTRODUCED_26,0,X_INTRODUCED_28,X_INTRODUCED_29,0,0,0,X_INTRODUCED_33,X_INTRODUCED_34,X_INTRODUCED_35,0,X_INTRODUCED_37,X_INTRODUCED_38,X_INTRODUCED_39,0,0,0,X_INTRODUCED_43,X_INTRODUCED_44,0,X_INTRODUCED_46,X_INTRODUCED_47,0,0,0,0,X_INTRODUCED_52,X_INTRODUCED_53,X_INTRODUCED_54,X_INTRODUCED_55,0,0,0,0,0,X_INTRODUCED_61,X_INTRODUCED_62,0];
array [1..2] of var int: X_INTRODUCED_64 ::var_is_introduced  = [X_INTRODUCED_10,X_INTRODUCED_11];
array [1..4] of var int: X_INTRODUCED_68 ::var_is_introduced  = [X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20];
array [1..2] of var int: X_INTRODUCED_72 ::var_is_introduced  = [X_INTRODUCED_25,X_INTRODUCED_26];
array [1..2] of var int: X_INTRODUCED_75 ::var_is_introduced  = [X_INTRODUCED_28,X_INTRODUCED_29];
array [1..3] of var int: X_INTRODUCED_78 ::var_is_introduced  = [X_INTRODUCED_33,X_INTRODUCED_34,X_INTRODUCED_35];
array [1..3] of var int: X_INTRODUCED_82 ::var_is_introduced  = [X_INTRODUCED_37,X_INTRODUCED_38,X_INTRODUCED_39];
array [1..2] of var int: X_INTRODUCED_85 ::var_is_introduced  = [X_INTRODUCED_43,X_INTRODUCED_44];
array [1..2] of var int: X_INTRODUCED_88 ::var_is_introduced  = [X_INTRODUCED_46,X_INTRODUCED_47];
array [1..4] of var int: X_INTRODUCED_91 ::var_is_introduced  = [X_INTRODUCED_52,X_INTRODUCED_53,X_INTRODUCED_54,X_INTRODUCED_55];
array [1..2] of var int: X_INTRODUCED_94 ::var_is_introduced  = [X_INTRODUCED_61,X_INTRODUCED_62];
array [1..4] of var int: X_INTRODUCED_97 ::var_is_introduced  = [X_INTRODUCED_10,X_INTRODUCED_18,X_INTRODUCED_26,X_INTRODUCED_34];
array [1..2] of var int: X_INTRODUCED_100 ::var_is_introduced  = [X_INTRODUCED_11,X_INTRODUCED_19];
array [1..3] of var int: X_INTRODUCED_103 ::var_is_introduced  = [X_INTRODUCED_17,X_INTRODUCED_25,X_INTRODUCED_33];
array [1..2] of var int: X_INTRODUCED_106 ::var_is_introduced  = [X_INTRODUCED_20,X_INTRODUCED_28];
array [1..2] of var int: X_INTRODUCED_109 ::var_is_introduced  = [X_INTRODUCED_29,X_INTRODUCED_37];
array [1..2] of var int: X_INTRODUCED_112 ::var_is_introduced  = [X_INTRODUCED_35,X_INTRODUCED_43];
array [1..4] of var int: X_INTRODUCED_115 ::var_is_introduced  = [X_INTRODUCED_38,X_INTRODUCED_46,X_INTRODUCED_54,X_INTRODUCED_62];
array [1..3] of var int: X_INTRODUCED_118 ::var_is_introduced  = [X_INTRODUCED_39,X_INTRODUCED_47,X_INTRODUCED_55];
array [1..2] of var int: X_INTRODUCED_121 ::var_is_introduced  = [X_INTRODUCED_44,X_INTRODUCED_52];
array [1..2] of var int: X_INTRODUCED_124 ::var_is_introduced  = [X_INTRODUCED_53,X_INTRODUCED_61];
constraint jacop_alldiff(X_INTRODUCED_64);
constraint int_lin_eq(X_INTRODUCED_67,[X_INTRODUCED_10,X_INTRODUCED_11],11);
constraint jacop_alldiff(X_INTRODUCED_68);
constraint int_lin_eq(X_INTRODUCED_71,[X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20],25);
constraint jacop_alldiff(X_INTRODUCED_72);
constraint int_lin_eq(X_INTRODUCED_67,[X_INTRODUCED_25,X_INTRODUCED_26],12);
constraint jacop_alldiff(X_INTRODUCED_75);
constraint int_lin_eq(X_INTRODUCED_67,[X_INTRODUCED_28,X_INTRODUCED_29],11);
constraint jacop_alldiff(X_INTRODUCED_78);
constraint int_lin_eq(X_INTRODUCED_81,[X_INTRODUCED_33,X_INTRODUCED_34,X_INTRODUCED_35],18);
constraint jacop_alldiff(X_INTRODUCED_82);
constraint int_lin_eq(X_INTRODUCED_81,[X_INTRODUCED_37,X_INTRODUCED_38,X_INTRODUCED_39],8);
constraint jacop_alldiff(X_INTRODUCED_85);
constraint int_lin_eq(X_INTRODUCED_67,[X_INTRODUCED_43,X_INTRODUCED_44],9);
constraint jacop_alldiff(X_INTRODUCED_88);
constraint int_lin_eq(X_INTRODUCED_67,[X_INTRODUCED_46,X_INTRODUCED_47],6);
constraint jacop_alldiff(X_INTRODUCED_91);
constraint int_lin_eq(X_INTRODUCED_71,[X_INTRODUCED_52,X_INTRODUCED_53,X_INTRODUCED_54,X_INTRODUCED_55],20);
constraint jacop_alldiff(X_INTRODUCED_94);
constraint int_lin_eq(X_INTRODUCED_67,[X_INTRODUCED_61,X_INTRODUCED_62],11);
constraint jacop_alldiff(X_INTRODUCED_97);
constraint int_lin_eq(X_INTRODUCED_71,[X_INTRODUCED_10,X_INTRODUCED_18,X_INTRODUCED_26,X_INTRODUCED_34],29);
constraint jacop_alldiff(X_INTRODUCED_100);
constraint int_lin_eq(X_INTRODUCED_67,[X_INTRODUCED_11,X_INTRODUCED_19],4);
constraint jacop_alldiff(X_INTRODUCED_103);
constraint int_lin_eq(X_INTRODUCED_81,[X_INTRODUCED_17,X_INTRODUCED_25,X_INTRODUCED_33],24);
constraint jacop_alldiff(X_INTRODUCED_106);
constraint int_lin_eq(X_INTRODUCED_67,[X_INTRODUCED_20,X_INTRODUCED_28],17);
constraint jacop_alldiff(X_INTRODUCED_109);
constraint int_lin_eq(X_INTRODUCED_67,[X_INTRODUCED_29,X_INTRODUCED_37],3);
constraint jacop_alldiff(X_INTRODUCED_112);
constraint int_lin_eq(X_INTRODUCED_67,[X_INTRODUCED_35,X_INTRODUCED_43],3);
constraint jacop_alldiff(X_INTRODUCED_115);
constraint int_lin_eq(X_INTRODUCED_71,[X_INTRODUCED_38,X_INTRODUCED_46,X_INTRODUCED_54,X_INTRODUCED_62],11);
constraint jacop_alldiff(X_INTRODUCED_118);
constraint int_lin_eq(X_INTRODUCED_81,[X_INTRODUCED_39,X_INTRODUCED_47,X_INTRODUCED_55],7);
constraint jacop_alldiff(X_INTRODUCED_121);
constraint int_lin_eq(X_INTRODUCED_67,[X_INTRODUCED_44,X_INTRODUCED_52],16);
constraint jacop_alldiff(X_INTRODUCED_124);
constraint int_lin_eq(X_INTRODUCED_67,[X_INTRODUCED_53,X_INTRODUCED_61],17);
solve  satisfy;
