array [1..2] of int: X_INTRODUCED_1 = [-10,-1];
var 1..9: A:: output_var;
var 1..9: B:: output_var;
var 1..9: C:: output_var;
var 0..9: D:: output_var;
var 0..9: E:: output_var;
var 1..9: F:: output_var;
var 1..9: G:: output_var;
var 0..9: H:: output_var;
var 0..9: I:: output_var;
var 0..9: J:: output_var;
var 1..9: K:: output_var;
var 0..9: L:: output_var;
var 10..99: AB:: is_defined_var;
var 0..9999: X_INTRODUCED_13 ::var_is_introduced :: is_defined_var;
var 0..100: X_INTRODUCED_14 ::var_is_introduced ;
var 0..10000: X_INTRODUCED_15 ::var_is_introduced :: is_defined_var;
var 0..9999: X_INTRODUCED_16 ::var_is_introduced :: is_defined_var;
var 0..100: X_INTRODUCED_17 ::var_is_introduced ;
var 0..10000: X_INTRODUCED_18 ::var_is_introduced :: is_defined_var;
var 0..99: X_INTRODUCED_19 ::var_is_introduced :: is_defined_var;
var 0..10: X_INTRODUCED_20 ::var_is_introduced ;
var 0..100: X_INTRODUCED_21 ::var_is_introduced :: is_defined_var;
var 0..99: X_INTRODUCED_22 ::var_is_introduced :: is_defined_var;
var 0..10: X_INTRODUCED_23 ::var_is_introduced ;
var 0..100: X_INTRODUCED_24 ::var_is_introduced :: is_defined_var;
var 0..99: X_INTRODUCED_25 ::var_is_introduced :: is_defined_var;
var 0..10: X_INTRODUCED_26 ::var_is_introduced ;
var 0..100: X_INTRODUCED_27 ::var_is_introduced :: is_defined_var;
var 0..9999: X_INTRODUCED_28 ::var_is_introduced :: is_defined_var;
var 0..100: X_INTRODUCED_29 ::var_is_introduced ;
var 0..10000: X_INTRODUCED_30 ::var_is_introduced :: is_defined_var;
var 0..9999: X_INTRODUCED_31 ::var_is_introduced :: is_defined_var;
var 0..100: X_INTRODUCED_32 ::var_is_introduced ;
var 0..10000: X_INTRODUCED_33 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_2 ::var_is_introduced  = true;
var bool: X_INTRODUCED_3 ::var_is_introduced  = true;
var bool: X_INTRODUCED_4 ::var_is_introduced  = true;
var bool: X_INTRODUCED_5 ::var_is_introduced  = true;
var bool: X_INTRODUCED_6 ::var_is_introduced  = true;
var bool: X_INTRODUCED_7 ::var_is_introduced  = true;
var bool: X_INTRODUCED_8 ::var_is_introduced  = true;
var bool: X_INTRODUCED_9 ::var_is_introduced  = true;
var bool: X_INTRODUCED_10 ::var_is_introduced  = true;
var bool: X_INTRODUCED_11 ::var_is_introduced  = true;
array [1..12] of var int: all = [A,B,C,D,E,F,G,H,I,J,K,L];
constraint int_eq(X_INTRODUCED_15,X_INTRODUCED_13);
constraint int_eq(X_INTRODUCED_18,X_INTRODUCED_16);
constraint int_eq(X_INTRODUCED_21,X_INTRODUCED_19);
constraint int_eq(X_INTRODUCED_24,X_INTRODUCED_22);
constraint int_eq(X_INTRODUCED_27,X_INTRODUCED_25);
constraint int_eq(X_INTRODUCED_30,X_INTRODUCED_28);
constraint int_eq(X_INTRODUCED_33,X_INTRODUCED_31);
constraint int_lin_eq([10,1,-1],[A,B,AB],0):: defines_var(AB);
constraint int_lin_ne(X_INTRODUCED_1,[A,B],-1);
constraint int_lin_ne(X_INTRODUCED_1,[A,B],-4);
constraint int_lin_ne(X_INTRODUCED_1,[A,B],-9);
constraint int_lin_ne(X_INTRODUCED_1,[A,B],-16);
constraint int_lin_ne(X_INTRODUCED_1,[A,B],-25);
constraint int_lin_ne(X_INTRODUCED_1,[A,B],-36);
constraint int_lin_ne(X_INTRODUCED_1,[A,B],-49);
constraint int_lin_ne(X_INTRODUCED_1,[A,B],-64);
constraint int_lin_ne(X_INTRODUCED_1,[A,B],-81);
constraint int_lin_ne(X_INTRODUCED_1,[A,B],-100);
constraint int_lin_eq([10,100,1000,1,-1],[I,E,B,L,X_INTRODUCED_13],0):: defines_var(X_INTRODUCED_13);
constraint int_times(X_INTRODUCED_14,X_INTRODUCED_14,X_INTRODUCED_15):: defines_var(X_INTRODUCED_15);
constraint int_lin_eq([10,100,1000,1,-1],[H,D,A,K,X_INTRODUCED_16],0):: defines_var(X_INTRODUCED_16);
constraint int_times(X_INTRODUCED_17,X_INTRODUCED_17,X_INTRODUCED_18):: defines_var(X_INTRODUCED_18);
constraint int_lin_eq([10,1,-1],[K,L,X_INTRODUCED_19],0):: defines_var(X_INTRODUCED_19);
constraint int_times(X_INTRODUCED_20,X_INTRODUCED_20,X_INTRODUCED_21):: defines_var(X_INTRODUCED_21);
constraint int_lin_eq([10,1,-1],[F,J,X_INTRODUCED_22],0):: defines_var(X_INTRODUCED_22);
constraint int_times(X_INTRODUCED_23,X_INTRODUCED_23,X_INTRODUCED_24):: defines_var(X_INTRODUCED_24);
constraint int_lin_eq([10,1,-1],[C,G,X_INTRODUCED_25],0):: defines_var(X_INTRODUCED_25);
constraint int_times(X_INTRODUCED_26,X_INTRODUCED_26,X_INTRODUCED_27):: defines_var(X_INTRODUCED_27);
constraint int_lin_eq([10,100,1000,1,-1],[I,H,G,J,X_INTRODUCED_28],0):: defines_var(X_INTRODUCED_28);
constraint int_times(X_INTRODUCED_29,X_INTRODUCED_29,X_INTRODUCED_30):: defines_var(X_INTRODUCED_30);
constraint int_lin_eq([10,100,1000,1,-1],[E,D,C,F,X_INTRODUCED_31],0):: defines_var(X_INTRODUCED_31);
constraint int_times(X_INTRODUCED_32,X_INTRODUCED_32,X_INTRODUCED_33):: defines_var(X_INTRODUCED_33);
solve  satisfy;
