array [1..19] of float: X_INTRODUCED_84 = [1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0];
array [1..2] of float: X_INTRODUCED_85 = [1.0,1.0];
var float: X_INTRODUCED_0;
var float: X_INTRODUCED_1;
var float: X_INTRODUCED_2;
var float: X_INTRODUCED_3;
var float: X_INTRODUCED_4;
var float: X_INTRODUCED_5;
var float: X_INTRODUCED_6;
var float: X_INTRODUCED_7;
var float: X_INTRODUCED_8;
var float: X_INTRODUCED_9;
var float: X_INTRODUCED_10;
var float: X_INTRODUCED_11;
var float: X_INTRODUCED_12;
var float: X_INTRODUCED_13;
var float: X_INTRODUCED_14;
var float: X_INTRODUCED_15;
var float: X_INTRODUCED_16;
var float: X_INTRODUCED_17;
var float: X_INTRODUCED_18;
var float: X_INTRODUCED_19;
var float: X_INTRODUCED_20;
var float: X_INTRODUCED_21;
var float: X_INTRODUCED_22;
var float: X_INTRODUCED_23;
var float: X_INTRODUCED_24;
var float: X_INTRODUCED_25;
var float: X_INTRODUCED_26;
var float: X_INTRODUCED_27;
var float: X_INTRODUCED_28;
var float: X_INTRODUCED_29;
var float: X_INTRODUCED_30;
var float: X_INTRODUCED_31;
var float: X_INTRODUCED_32;
var float: X_INTRODUCED_33;
var float: X_INTRODUCED_34;
var float: X_INTRODUCED_35;
var float: X_INTRODUCED_36;
var float: X_INTRODUCED_37;
var float: X:: output_var;
var float: Y:: output_var;
array [1..19] of var float: Ex:: output_array([1..19]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18];
array [1..19] of var float: Ey:: output_array([1..19]) = [X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29,X_INTRODUCED_30,X_INTRODUCED_31,X_INTRODUCED_32,X_INTRODUCED_33,X_INTRODUCED_34,X_INTRODUCED_35,X_INTRODUCED_36,X_INTRODUCED_37];
array [1..38] of var float: X_INTRODUCED_80 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29,X_INTRODUCED_30,X_INTRODUCED_31,X_INTRODUCED_32,X_INTRODUCED_33,X_INTRODUCED_34,X_INTRODUCED_35,X_INTRODUCED_36,X_INTRODUCED_37];
array [1..19] of var float: X_INTRODUCED_83 ::var_is_introduced  = [X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29,X_INTRODUCED_30,X_INTRODUCED_31,X_INTRODUCED_32,X_INTRODUCED_33,X_INTRODUCED_34,X_INTRODUCED_35,X_INTRODUCED_36,X_INTRODUCED_37];
array [1..19] of var float: X_INTRODUCED_128 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18];
constraint float_lin_eq(X_INTRODUCED_84,X_INTRODUCED_83,0.0);
constraint float_lin_eq(X_INTRODUCED_85,[Y,X_INTRODUCED_19],1.0);
constraint float_lin_eq(X_INTRODUCED_85,[Y,X_INTRODUCED_20],0.9);
constraint float_lin_eq(X_INTRODUCED_85,[Y,X_INTRODUCED_21],0.7);
constraint float_lin_eq(X_INTRODUCED_85,[Y,X_INTRODUCED_22],1.5);
constraint float_lin_eq(X_INTRODUCED_85,[Y,X_INTRODUCED_23],2.0);
constraint float_lin_eq(X_INTRODUCED_85,[Y,X_INTRODUCED_24],2.4);
constraint float_lin_eq(X_INTRODUCED_85,[Y,X_INTRODUCED_25],3.2);
constraint float_lin_eq(X_INTRODUCED_85,[Y,X_INTRODUCED_26],2.0);
constraint float_lin_eq(X_INTRODUCED_85,[Y,X_INTRODUCED_27],2.7);
constraint float_lin_eq(X_INTRODUCED_85,[Y,X_INTRODUCED_28],3.5);
constraint float_lin_eq(X_INTRODUCED_85,[Y,X_INTRODUCED_29],1.0);
constraint float_lin_eq(X_INTRODUCED_85,[Y,X_INTRODUCED_30],4.0);
constraint float_lin_eq(X_INTRODUCED_85,[Y,X_INTRODUCED_31],3.6);
constraint float_lin_eq(X_INTRODUCED_85,[Y,X_INTRODUCED_32],2.7);
constraint float_lin_eq(X_INTRODUCED_85,[Y,X_INTRODUCED_33],5.7);
constraint float_lin_eq(X_INTRODUCED_85,[Y,X_INTRODUCED_34],4.6);
constraint float_lin_eq(X_INTRODUCED_85,[Y,X_INTRODUCED_35],6.0);
constraint float_lin_eq(X_INTRODUCED_85,[Y,X_INTRODUCED_36],6.8);
constraint float_lin_eq(X_INTRODUCED_85,[Y,X_INTRODUCED_37],7.3);
constraint float_lin_eq(X_INTRODUCED_85,[X,X_INTRODUCED_0],0.0);
constraint float_lin_eq(X_INTRODUCED_85,[X,X_INTRODUCED_1],0.5);
constraint float_lin_eq(X_INTRODUCED_85,[X,X_INTRODUCED_2],1.0);
constraint float_lin_eq(X_INTRODUCED_85,[X,X_INTRODUCED_3],1.5);
constraint float_lin_eq(X_INTRODUCED_85,[X,X_INTRODUCED_4],1.9);
constraint float_lin_eq(X_INTRODUCED_85,[X,X_INTRODUCED_5],2.5);
constraint float_lin_eq(X_INTRODUCED_85,[X,X_INTRODUCED_6],3.0);
constraint float_lin_eq(X_INTRODUCED_85,[X,X_INTRODUCED_7],3.5);
constraint float_lin_eq(X_INTRODUCED_85,[X,X_INTRODUCED_8],4.0);
constraint float_lin_eq(X_INTRODUCED_85,[X,X_INTRODUCED_9],4.5);
constraint float_lin_eq(X_INTRODUCED_85,[X,X_INTRODUCED_10],5.0);
constraint float_lin_eq(X_INTRODUCED_85,[X,X_INTRODUCED_11],5.5);
constraint float_lin_eq(X_INTRODUCED_85,[X,X_INTRODUCED_12],6.0);
constraint float_lin_eq(X_INTRODUCED_85,[X,X_INTRODUCED_13],6.6);
constraint float_lin_eq(X_INTRODUCED_85,[X,X_INTRODUCED_14],7.0);
constraint float_lin_eq(X_INTRODUCED_85,[X,X_INTRODUCED_15],7.6);
constraint float_lin_eq(X_INTRODUCED_85,[X,X_INTRODUCED_16],8.5);
constraint float_lin_eq(X_INTRODUCED_85,[X,X_INTRODUCED_17],9.0);
constraint float_lin_eq(X_INTRODUCED_85,[X,X_INTRODUCED_18],10.0);
constraint float_lin_eq(X_INTRODUCED_84,X_INTRODUCED_128,0.0);
solve :: float_search(X_INTRODUCED_80,1e-12,input_order,indomain_split,complete) satisfy;
