array [1..6] of int: X_INTRODUCED_7 = [1,2,5,7,13,21];
array [1..2] of int: X_INTRODUCED_27 = [1,-1];
var 1..6: X_INTRODUCED_0;
var 1..6: X_INTRODUCED_1;
var 1..6: X_INTRODUCED_2;
var 1..6: X_INTRODUCED_3;
var 1..6: X_INTRODUCED_4;
var 0..76: z:: is_defined_var;
var 1..21: X_INTRODUCED_6 ::var_is_introduced :: is_defined_var;
var -2..18: X_INTRODUCED_9 ::var_is_introduced :: is_defined_var;
var 0..18: X_INTRODUCED_10 ::var_is_introduced ;
var 1..21: X_INTRODUCED_12 ::var_is_introduced :: is_defined_var;
var -3..17: X_INTRODUCED_13 ::var_is_introduced :: is_defined_var;
var 0..17: X_INTRODUCED_14 ::var_is_introduced ;
var 1..21: X_INTRODUCED_16 ::var_is_introduced :: is_defined_var;
var -6..14: X_INTRODUCED_17 ::var_is_introduced :: is_defined_var;
var 0..14: X_INTRODUCED_18 ::var_is_introduced ;
var 1..21: X_INTRODUCED_20 ::var_is_introduced :: is_defined_var;
var -10..10: X_INTRODUCED_21 ::var_is_introduced :: is_defined_var;
var 0..10: X_INTRODUCED_22 ::var_is_introduced ;
var 1..21: X_INTRODUCED_24 ::var_is_introduced :: is_defined_var;
var -17..3: X_INTRODUCED_25 ::var_is_introduced :: is_defined_var;
var 0..17: X_INTRODUCED_26 ::var_is_introduced ;
array [1..5] of var int: x:: output_array([1..5]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4];
constraint array_int_element(X_INTRODUCED_0,X_INTRODUCED_7,X_INTRODUCED_6):: defines_var(X_INTRODUCED_6);
constraint int_abs(X_INTRODUCED_9,X_INTRODUCED_10);
constraint array_int_element(X_INTRODUCED_1,X_INTRODUCED_7,X_INTRODUCED_12):: defines_var(X_INTRODUCED_12);
constraint int_abs(X_INTRODUCED_13,X_INTRODUCED_14);
constraint array_int_element(X_INTRODUCED_2,X_INTRODUCED_7,X_INTRODUCED_16):: defines_var(X_INTRODUCED_16);
constraint int_abs(X_INTRODUCED_17,X_INTRODUCED_18);
constraint array_int_element(X_INTRODUCED_3,X_INTRODUCED_7,X_INTRODUCED_20):: defines_var(X_INTRODUCED_20);
constraint int_abs(X_INTRODUCED_21,X_INTRODUCED_22);
constraint array_int_element(X_INTRODUCED_4,X_INTRODUCED_7,X_INTRODUCED_24):: defines_var(X_INTRODUCED_24);
constraint int_abs(X_INTRODUCED_25,X_INTRODUCED_26);
constraint int_lin_ne(X_INTRODUCED_27,[X_INTRODUCED_0,X_INTRODUCED_1],0);
constraint int_lin_ne(X_INTRODUCED_27,[X_INTRODUCED_0,X_INTRODUCED_2],0);
constraint int_lin_ne(X_INTRODUCED_27,[X_INTRODUCED_0,X_INTRODUCED_3],0);
constraint int_lin_ne(X_INTRODUCED_27,[X_INTRODUCED_0,X_INTRODUCED_4],0);
constraint int_lin_ne(X_INTRODUCED_27,[X_INTRODUCED_1,X_INTRODUCED_2],0);
constraint int_lin_ne(X_INTRODUCED_27,[X_INTRODUCED_1,X_INTRODUCED_3],0);
constraint int_lin_ne(X_INTRODUCED_27,[X_INTRODUCED_1,X_INTRODUCED_4],0);
constraint int_lin_ne(X_INTRODUCED_27,[X_INTRODUCED_2,X_INTRODUCED_3],0);
constraint int_lin_ne(X_INTRODUCED_27,[X_INTRODUCED_2,X_INTRODUCED_4],0);
constraint int_lin_ne(X_INTRODUCED_27,[X_INTRODUCED_3,X_INTRODUCED_4],0);
constraint int_lin_eq([1,1,1,1,1,-1],[X_INTRODUCED_10,X_INTRODUCED_14,X_INTRODUCED_18,X_INTRODUCED_22,X_INTRODUCED_26,z],0):: defines_var(z);
constraint int_lin_eq([1,-1],[X_INTRODUCED_6,X_INTRODUCED_9],3):: defines_var(X_INTRODUCED_9);
constraint int_lin_eq([1,-1],[X_INTRODUCED_12,X_INTRODUCED_13],4):: defines_var(X_INTRODUCED_13);
constraint int_lin_eq([1,-1],[X_INTRODUCED_16,X_INTRODUCED_17],7):: defines_var(X_INTRODUCED_17);
constraint int_lin_eq([1,-1],[X_INTRODUCED_20,X_INTRODUCED_21],11):: defines_var(X_INTRODUCED_21);
constraint int_lin_eq([1,-1],[X_INTRODUCED_24,X_INTRODUCED_25],18):: defines_var(X_INTRODUCED_25);
solve :: int_search(x,smallest,indomain_min,complete) minimize z;
