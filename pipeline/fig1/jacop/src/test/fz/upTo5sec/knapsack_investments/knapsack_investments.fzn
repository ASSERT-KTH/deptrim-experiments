array [1..2] of int: X_INTRODUCED_92 = [1,1];
array [1..2] of int: X_INTRODUCED_99 = [1,-1];
array [1..15] of int: X_INTRODUCED_106 = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];
array [1..15] of int: X_INTRODUCED_108 = [5,3,4,2,2,2,4,1,1,5,3,2,2,4,3];
array [1..15] of int: X_INTRODUCED_110 = [35,34,26,12,10,18,32,11,10,22,27,18,16,29,22];
var 0..1: X_INTRODUCED_0;
var 0..1: X_INTRODUCED_1;
var 0..1: X_INTRODUCED_2;
var 0..1: X_INTRODUCED_3;
var 0..1: X_INTRODUCED_4;
var 0..1: X_INTRODUCED_5;
var 0..1: X_INTRODUCED_6;
var 0..1: X_INTRODUCED_7;
var 0..1: X_INTRODUCED_8;
var 0..1: X_INTRODUCED_9;
var 0..1: X_INTRODUCED_10;
var 0..1: X_INTRODUCED_11;
var 0..1: X_INTRODUCED_12;
var 0..1: X_INTRODUCED_13;
var 0..1: X_INTRODUCED_14;
var 0..3390: total_values:: is_defined_var;
array [1..15] of var int: x:: output_array([1..15]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..15] of var int: X_INTRODUCED_105 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..15] of var int: X_INTRODUCED_107 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..15] of var int: X_INTRODUCED_109 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
constraint int_lin_le(X_INTRODUCED_92,[X_INTRODUCED_0,X_INTRODUCED_9],1);
constraint int_lin_le(X_INTRODUCED_92,[X_INTRODUCED_4,X_INTRODUCED_5],1);
constraint int_lin_le(X_INTRODUCED_92,[X_INTRODUCED_5,X_INTRODUCED_4],1);
constraint int_lin_le(X_INTRODUCED_92,[X_INTRODUCED_9,X_INTRODUCED_0],1);
constraint int_lin_le(X_INTRODUCED_92,[X_INTRODUCED_10,X_INTRODUCED_14],1);
constraint int_lin_le(X_INTRODUCED_92,[X_INTRODUCED_14,X_INTRODUCED_10],1);
constraint int_lin_le(X_INTRODUCED_99,[X_INTRODUCED_2,X_INTRODUCED_14],0);
constraint int_lin_le(X_INTRODUCED_99,[X_INTRODUCED_3,X_INTRODUCED_14],0);
constraint int_lin_le(X_INTRODUCED_99,[X_INTRODUCED_7,X_INTRODUCED_6],0);
constraint int_lin_le(X_INTRODUCED_99,[X_INTRODUCED_12,X_INTRODUCED_1],0);
constraint int_lin_le(X_INTRODUCED_99,[X_INTRODUCED_13,X_INTRODUCED_1],0);
constraint int_lin_le(X_INTRODUCED_106,X_INTRODUCED_105,9);
constraint int_lin_le(X_INTRODUCED_108,X_INTRODUCED_107,28);
constraint int_lin_le(X_INTRODUCED_110,X_INTRODUCED_109,225);
constraint int_lin_eq([600,400,100,150,80,120,200,220,90,380,290,130,80,270,280,-1],[X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,total_values],0):: defines_var(total_values);
solve :: int_search(x,first_fail,indomain_min,complete) maximize total_values;
