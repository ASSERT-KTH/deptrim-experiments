var 1..7: r:: output_var:: is_defined_var;
var 0..1: X_INTRODUCED_8 ::var_is_introduced ;
var 0..1: X_INTRODUCED_9 ::var_is_introduced ;
var 0..1: X_INTRODUCED_10 ::var_is_introduced ;
var 0..1: X_INTRODUCED_11 ::var_is_introduced ;
var 0..1: X_INTRODUCED_12 ::var_is_introduced ;
var bool: X_INTRODUCED_15 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_16 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_17 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_18 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_19 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_20 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_21 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_22 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_23 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_24 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_29 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_30 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_31 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_32 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_33 ::var_is_introduced :: is_defined_var;
array [1..6] of var int: x:: output_array([1..6]) = [1,1,2,2,1,1];
constraint int_lin_eq([1,-1,-1,-1,-1,-1],[r,X_INTRODUCED_16,X_INTRODUCED_18,X_INTRODUCED_20,X_INTRODUCED_22,X_INTRODUCED_24],1):: defines_var(r);
constraint int_eq_reif(1,1,X_INTRODUCED_29):: defines_var(X_INTRODUCED_29);
constraint int_eq_reif(1,2,X_INTRODUCED_30):: defines_var(X_INTRODUCED_30);
constraint int_eq_reif(2,2,X_INTRODUCED_31):: defines_var(X_INTRODUCED_31);
constraint int_eq_reif(2,1,X_INTRODUCED_32):: defines_var(X_INTRODUCED_32);
constraint int_eq_reif(1,1,X_INTRODUCED_33):: defines_var(X_INTRODUCED_33);
constraint int_eq_reif(X_INTRODUCED_8,0,X_INTRODUCED_15):: defines_var(X_INTRODUCED_15);
constraint bool2int(X_INTRODUCED_15,X_INTRODUCED_16):: defines_var(X_INTRODUCED_16);
constraint int_eq_reif(X_INTRODUCED_9,0,X_INTRODUCED_17):: defines_var(X_INTRODUCED_17);
constraint bool2int(X_INTRODUCED_17,X_INTRODUCED_18):: defines_var(X_INTRODUCED_18);
constraint int_eq_reif(X_INTRODUCED_10,0,X_INTRODUCED_19):: defines_var(X_INTRODUCED_19);
constraint bool2int(X_INTRODUCED_19,X_INTRODUCED_20):: defines_var(X_INTRODUCED_20);
constraint int_eq_reif(X_INTRODUCED_11,0,X_INTRODUCED_21):: defines_var(X_INTRODUCED_21);
constraint bool2int(X_INTRODUCED_21,X_INTRODUCED_22):: defines_var(X_INTRODUCED_22);
constraint int_eq_reif(X_INTRODUCED_12,0,X_INTRODUCED_23):: defines_var(X_INTRODUCED_23);
constraint bool2int(X_INTRODUCED_23,X_INTRODUCED_24):: defines_var(X_INTRODUCED_24);
constraint int_eq_reif(X_INTRODUCED_8,1,X_INTRODUCED_29):: defines_var(X_INTRODUCED_29);
constraint int_eq_reif(X_INTRODUCED_9,1,X_INTRODUCED_30):: defines_var(X_INTRODUCED_30);
constraint int_eq_reif(X_INTRODUCED_10,1,X_INTRODUCED_31):: defines_var(X_INTRODUCED_31);
constraint int_eq_reif(X_INTRODUCED_11,1,X_INTRODUCED_32):: defines_var(X_INTRODUCED_32);
constraint int_eq_reif(X_INTRODUCED_12,1,X_INTRODUCED_33):: defines_var(X_INTRODUCED_33);
solve  satisfy;
