predicate jacop_diff2_strict(array [int] of var int: x,array [int] of var int: y,array [int] of var int: lx,array [int] of var int: ly);
predicate jacop_maximum(var int: m,array [int] of var int: x);
array [1..2] of int: X_INTRODUCED_48 = [1,-1];
array [1..15] of int: X_INTRODUCED_74 = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];
array [1..8] of int: X_INTRODUCED_75 = [2,2,2,2,2,2,2,2];
array [1..8] of int: X_INTRODUCED_76 = [1,1,1,1,1,1,1,1];
var 0..100: X_INTRODUCED_0;
var 0..100: X_INTRODUCED_1;
var 0..100: X_INTRODUCED_2;
var 0..100: X_INTRODUCED_3;
var 0..100: X_INTRODUCED_4;
var 0..100: X_INTRODUCED_5;
var 0..100: X_INTRODUCED_6;
var 0..100: X_INTRODUCED_7;
var 0..100: X_INTRODUCED_8;
var 0..100: X_INTRODUCED_9;
var 0..100: X_INTRODUCED_10;
var 0..100: X_INTRODUCED_11;
var 0..100: X_INTRODUCED_12;
var 0..100: X_INTRODUCED_13;
var 0..100: X_INTRODUCED_14;
var 0..100: X_INTRODUCED_15;
var 0..100: X_INTRODUCED_16;
var 0..100: X_INTRODUCED_17;
var 0..100: X_INTRODUCED_18;
var 0..100: X_INTRODUCED_19;
var 0..100: X_INTRODUCED_20;
var 0..100: X_INTRODUCED_21;
var 0..100: X_INTRODUCED_22;
var 1..4: X_INTRODUCED_24;
var 1..4: X_INTRODUCED_33;
var 1..4: X_INTRODUCED_35;
var 1..4: X_INTRODUCED_37;
var 1..4: X_INTRODUCED_39;
var 1..4: X_INTRODUCED_41;
var 1..4: X_INTRODUCED_43;
var 1..4: X_INTRODUCED_45;
var 0..1000: objective:: output_var;
var 1..101: X_INTRODUCED_79 ::var_is_introduced :: is_defined_var;
array [1..23] of var int: t:: output_array([1..23]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22];
array [1..23] of var int: r:: output_array([1..23]) = [1,X_INTRODUCED_24,1,1,1,1,1,1,1,1,X_INTRODUCED_33,1,X_INTRODUCED_35,1,X_INTRODUCED_37,1,X_INTRODUCED_39,1,X_INTRODUCED_41,1,X_INTRODUCED_43,1,X_INTRODUCED_45];
array [1..15] of var int: t_add = [X_INTRODUCED_0,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_11,X_INTRODUCED_13,X_INTRODUCED_15,X_INTRODUCED_17,X_INTRODUCED_19,X_INTRODUCED_21];
array [1..8] of var int: t_mul = [X_INTRODUCED_1,X_INTRODUCED_10,X_INTRODUCED_12,X_INTRODUCED_14,X_INTRODUCED_16,X_INTRODUCED_18,X_INTRODUCED_20,X_INTRODUCED_22];
array [1..15] of var int: X_INTRODUCED_72 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_11,X_INTRODUCED_13,X_INTRODUCED_15,X_INTRODUCED_17,X_INTRODUCED_19,X_INTRODUCED_21];
array [1..15] of var int: X_INTRODUCED_73 ::var_is_introduced  = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];
array [1..8] of var int: X_INTRODUCED_77 ::var_is_introduced  = [X_INTRODUCED_24,X_INTRODUCED_33,X_INTRODUCED_35,X_INTRODUCED_37,X_INTRODUCED_39,X_INTRODUCED_41,X_INTRODUCED_43,X_INTRODUCED_45];
array [1..8] of var int: X_INTRODUCED_78 ::var_is_introduced  = [X_INTRODUCED_1,X_INTRODUCED_10,X_INTRODUCED_12,X_INTRODUCED_14,X_INTRODUCED_16,X_INTRODUCED_18,X_INTRODUCED_20,X_INTRODUCED_22];
array [1..1] of var int: X_INTRODUCED_80 ::var_is_introduced  = [X_INTRODUCED_79];
constraint int_lin_le(X_INTRODUCED_48,[X_INTRODUCED_0,X_INTRODUCED_1],-1);
constraint int_lin_le(X_INTRODUCED_48,[X_INTRODUCED_1,X_INTRODUCED_2],-2);
constraint int_lin_le(X_INTRODUCED_48,[X_INTRODUCED_2,X_INTRODUCED_3],-1);
constraint int_lin_le(X_INTRODUCED_48,[X_INTRODUCED_3,X_INTRODUCED_4],-1);
constraint int_lin_le(X_INTRODUCED_48,[X_INTRODUCED_4,X_INTRODUCED_5],-1);
constraint int_lin_le(X_INTRODUCED_48,[X_INTRODUCED_5,X_INTRODUCED_6],-1);
constraint int_lin_le(X_INTRODUCED_48,[X_INTRODUCED_6,X_INTRODUCED_7],-1);
constraint int_lin_le(X_INTRODUCED_48,[X_INTRODUCED_7,X_INTRODUCED_8],-1);
constraint int_lin_le(X_INTRODUCED_48,[X_INTRODUCED_9,X_INTRODUCED_10],-1);
constraint int_lin_le(X_INTRODUCED_48,[X_INTRODUCED_10,X_INTRODUCED_2],-2);
constraint int_lin_le(X_INTRODUCED_48,[X_INTRODUCED_11,X_INTRODUCED_12],-1);
constraint int_lin_le(X_INTRODUCED_48,[X_INTRODUCED_12,X_INTRODUCED_3],-2);
constraint int_lin_le(X_INTRODUCED_48,[X_INTRODUCED_13,X_INTRODUCED_14],-1);
constraint int_lin_le(X_INTRODUCED_48,[X_INTRODUCED_14,X_INTRODUCED_4],-2);
constraint int_lin_le(X_INTRODUCED_48,[X_INTRODUCED_15,X_INTRODUCED_16],-1);
constraint int_lin_le(X_INTRODUCED_48,[X_INTRODUCED_16,X_INTRODUCED_5],-2);
constraint int_lin_le(X_INTRODUCED_48,[X_INTRODUCED_17,X_INTRODUCED_18],-1);
constraint int_lin_le(X_INTRODUCED_48,[X_INTRODUCED_18,X_INTRODUCED_6],-2);
constraint int_lin_le(X_INTRODUCED_48,[X_INTRODUCED_19,X_INTRODUCED_20],-1);
constraint int_lin_le(X_INTRODUCED_48,[X_INTRODUCED_20,X_INTRODUCED_7],-2);
constraint int_lin_le(X_INTRODUCED_48,[X_INTRODUCED_21,X_INTRODUCED_22],-1);
constraint int_lin_le(X_INTRODUCED_48,[X_INTRODUCED_22,X_INTRODUCED_8],-2);
constraint jacop_diff2_strict(X_INTRODUCED_72,X_INTRODUCED_73,X_INTRODUCED_74,X_INTRODUCED_74);
constraint jacop_diff2_strict(X_INTRODUCED_78,X_INTRODUCED_77,X_INTRODUCED_75,X_INTRODUCED_76);
constraint jacop_maximum(objective,X_INTRODUCED_80);
constraint int_lin_eq([1,-1],[X_INTRODUCED_8,X_INTRODUCED_79],-1):: defines_var(X_INTRODUCED_79);
solve :: seq_search([int_search(t,smallest,indomain_min,complete),int_search(r,input_order,indomain_min,complete)]) minimize objective;
