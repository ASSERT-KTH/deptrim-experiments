array [1..7] of int: X_INTRODUCED_26 = [10,1,10,1,-10,-100,-1];
var 0..9: X_INTRODUCED_0;
var 0..9: X_INTRODUCED_1;
var 0..9: X_INTRODUCED_2;
var 0..9: X_INTRODUCED_3;
var 0..9: X_INTRODUCED_4;
var 0..9: X_INTRODUCED_5;
var 0..9: X_INTRODUCED_6;
var -5..4: X_INTRODUCED_8 ::var_is_introduced :: is_defined_var;
var -6..3: X_INTRODUCED_10 ::var_is_introduced :: is_defined_var;
var -4..5: X_INTRODUCED_12 ::var_is_introduced :: is_defined_var;
var -2..7: X_INTRODUCED_14 ::var_is_introduced :: is_defined_var;
var -7..2: X_INTRODUCED_16 ::var_is_introduced :: is_defined_var;
var -9..0: X_INTRODUCED_18 ::var_is_introduced :: is_defined_var;
var -2..7: X_INTRODUCED_20 ::var_is_introduced :: is_defined_var;
array [1..7] of var int: x:: output_array([1..7]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6];
constraint int_abs(X_INTRODUCED_8,1);
constraint int_abs(X_INTRODUCED_10,1);
constraint int_abs(X_INTRODUCED_12,1);
constraint int_abs(X_INTRODUCED_14,1);
constraint int_abs(X_INTRODUCED_16,1);
constraint int_abs(X_INTRODUCED_18,1);
constraint int_abs(X_INTRODUCED_20,1);
constraint int_lin_eq(X_INTRODUCED_26,[X_INTRODUCED_2,X_INTRODUCED_1,X_INTRODUCED_0,X_INTRODUCED_3,X_INTRODUCED_5,X_INTRODUCED_4,X_INTRODUCED_6],0);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_0,X_INTRODUCED_8],-4):: defines_var(X_INTRODUCED_8);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_1,X_INTRODUCED_10],-3):: defines_var(X_INTRODUCED_10);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_2,X_INTRODUCED_12],-5):: defines_var(X_INTRODUCED_12);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_3,X_INTRODUCED_14],-7):: defines_var(X_INTRODUCED_14);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_4,X_INTRODUCED_16],-2):: defines_var(X_INTRODUCED_16);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_5,X_INTRODUCED_18],0):: defines_var(X_INTRODUCED_18);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_6,X_INTRODUCED_20],-7):: defines_var(X_INTRODUCED_20);
solve  satisfy;
