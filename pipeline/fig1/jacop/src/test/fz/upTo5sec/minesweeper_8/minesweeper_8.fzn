var 0..1: X_INTRODUCED_0;
var 0..1: X_INTRODUCED_1;
var 0..1: X_INTRODUCED_2;
var 0..1: X_INTRODUCED_3;
var 0..1: X_INTRODUCED_4;
var 0..1: X_INTRODUCED_5;
var 0..1: X_INTRODUCED_6;
var 0..1: X_INTRODUCED_7;
var 0..1: X_INTRODUCED_13;
var 0..1: X_INTRODUCED_14;
var 0..1: X_INTRODUCED_16;
var 0..1: X_INTRODUCED_17;
var 0..1: X_INTRODUCED_18;
var 0..1: X_INTRODUCED_20;
var 0..1: X_INTRODUCED_21;
var 0..1: X_INTRODUCED_22;
var 0..1: X_INTRODUCED_23;
var 0..1: X_INTRODUCED_25;
var 0..1: X_INTRODUCED_26;
var 0..1: X_INTRODUCED_27;
var 0..1: X_INTRODUCED_28;
var 0..1: X_INTRODUCED_30;
var 0..1: X_INTRODUCED_31;
var 0..1: X_INTRODUCED_32;
var 0..1: X_INTRODUCED_34;
var 0..1: X_INTRODUCED_35;
var 0..1: X_INTRODUCED_41;
var 0..1: X_INTRODUCED_42;
var 0..1: X_INTRODUCED_43;
var 0..1: X_INTRODUCED_44;
var 0..1: X_INTRODUCED_45;
var 0..1: X_INTRODUCED_46;
var 0..1: X_INTRODUCED_47;
var 0..1: X_INTRODUCED_48;
array [1..49] of var int: mines:: output_array([1..7,1..7]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,0,0,0,0,0,X_INTRODUCED_13,X_INTRODUCED_14,0,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,0,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,0,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,0,X_INTRODUCED_30,X_INTRODUCED_31,X_INTRODUCED_32,0,X_INTRODUCED_34,X_INTRODUCED_35,0,0,0,0,0,X_INTRODUCED_41,X_INTRODUCED_42,X_INTRODUCED_43,X_INTRODUCED_44,X_INTRODUCED_45,X_INTRODUCED_46,X_INTRODUCED_47,X_INTRODUCED_48];
array [1..49] of var int: X_INTRODUCED_66 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,0,0,0,0,0,X_INTRODUCED_13,X_INTRODUCED_14,0,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,0,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,0,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,0,X_INTRODUCED_30,X_INTRODUCED_31,X_INTRODUCED_32,0,X_INTRODUCED_34,X_INTRODUCED_35,0,0,0,0,0,X_INTRODUCED_41,X_INTRODUCED_42,X_INTRODUCED_43,X_INTRODUCED_44,X_INTRODUCED_45,X_INTRODUCED_46,X_INTRODUCED_47,X_INTRODUCED_48];
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1],[X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_7,X_INTRODUCED_14,X_INTRODUCED_16],-2);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1],[X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_16,X_INTRODUCED_17],-3);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1],[X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18],-4);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1],[X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_17,X_INTRODUCED_18],-3);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1],[X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_13,X_INTRODUCED_18,X_INTRODUCED_20],-5);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1],[X_INTRODUCED_7,X_INTRODUCED_14,X_INTRODUCED_16,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1],[X_INTRODUCED_13,X_INTRODUCED_18,X_INTRODUCED_20,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27],-3);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1,-1,-1],[X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_23,X_INTRODUCED_25,X_INTRODUCED_30,X_INTRODUCED_31,X_INTRODUCED_32],-5);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1],[X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_28,X_INTRODUCED_30,X_INTRODUCED_35],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1],[X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_32,X_INTRODUCED_34,X_INTRODUCED_41],-3);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1],[X_INTRODUCED_28,X_INTRODUCED_30,X_INTRODUCED_35,X_INTRODUCED_42,X_INTRODUCED_43,X_INTRODUCED_44],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1],[X_INTRODUCED_30,X_INTRODUCED_31,X_INTRODUCED_43,X_INTRODUCED_44,X_INTRODUCED_45],-2);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1],[X_INTRODUCED_30,X_INTRODUCED_31,X_INTRODUCED_32,X_INTRODUCED_44,X_INTRODUCED_45,X_INTRODUCED_46],-2);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1],[X_INTRODUCED_31,X_INTRODUCED_32,X_INTRODUCED_45,X_INTRODUCED_46,X_INTRODUCED_47],-3);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1],[X_INTRODUCED_32,X_INTRODUCED_34,X_INTRODUCED_41,X_INTRODUCED_46,X_INTRODUCED_47,X_INTRODUCED_48],-4);
solve :: int_search(X_INTRODUCED_66,first_fail,indomain_min,complete) satisfy;
