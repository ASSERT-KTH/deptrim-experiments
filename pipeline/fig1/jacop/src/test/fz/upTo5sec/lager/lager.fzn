array [1..3] of int: X_INTRODUCED_18 = [1,1,-1];
var 0..20: X_INTRODUCED_0;
var 0..16: X_INTRODUCED_1;
var 0..10: X_INTRODUCED_2;
var int: X_INTRODUCED_4;
var int: X_INTRODUCED_5;
var int: X_INTRODUCED_6;
var int: X_INTRODUCED_13 ::var_is_introduced :: is_defined_var;
array [1..3] of var int: x:: output_array([1..3]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2];
array [1..4] of var int: y:: output_array([0..3]) = [5,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6];
constraint int_le(X_INTRODUCED_0,20);
constraint int_le(X_INTRODUCED_1,16);
constraint int_le(X_INTRODUCED_2,10);
constraint int_lin_eq([1,-1],[X_INTRODUCED_0,X_INTRODUCED_4],5);
constraint int_lin_eq(X_INTRODUCED_18,[X_INTRODUCED_4,X_INTRODUCED_1,X_INTRODUCED_5],15);
constraint int_lin_eq(X_INTRODUCED_18,[X_INTRODUCED_5,X_INTRODUCED_2,X_INTRODUCED_6],12);
constraint int_le(0,X_INTRODUCED_4);
constraint int_le(0,X_INTRODUCED_5);
constraint int_le(0,X_INTRODUCED_6);
constraint int_lin_eq([25,4,36,3,30,5,-1],[X_INTRODUCED_0,X_INTRODUCED_4,X_INTRODUCED_1,X_INTRODUCED_5,X_INTRODUCED_2,X_INTRODUCED_6,X_INTRODUCED_13],0):: defines_var(X_INTRODUCED_13);
solve  minimize X_INTRODUCED_13;
