predicate jacop_count(array [int] of var int: x,int: y,var int: c);
array [1..2] of int: X_INTRODUCED_37 = [1,-100];
array [1..2] of int: X_INTRODUCED_62 = [1,-1];
var 1..3: X_INTRODUCED_1;
var {1,4}: X_INTRODUCED_2;
var 1..4: X_INTRODUCED_3;
var 1..4: X_INTRODUCED_4;
var 1..4: X_INTRODUCED_5;
var 1..4: X_INTRODUCED_6;
var 1..4: X_INTRODUCED_7;
var 1..4: X_INTRODUCED_8;
var 3..4: X_INTRODUCED_9;
var 0..10: X_INTRODUCED_10;
var 0..10: X_INTRODUCED_11;
var 0..10: X_INTRODUCED_12;
var 0..10: X_INTRODUCED_13;
var 0..10: X_INTRODUCED_14;
var 0..10: X_INTRODUCED_15;
var 0..10: X_INTRODUCED_16;
var 0..10: X_INTRODUCED_17;
var 0..1: X_INTRODUCED_18;
var 0..1: X_INTRODUCED_19;
var 0..1: X_INTRODUCED_20;
var 0..1: X_INTRODUCED_21;
var 0..1: X_INTRODUCED_22;
var 0..1: X_INTRODUCED_23;
var 0..1: X_INTRODUCED_24;
var 0..1: X_INTRODUCED_25;
var 0..1: X_INTRODUCED_26;
var 0..1: X_INTRODUCED_27;
var 0..1: X_INTRODUCED_28;
var 0..10: week_day_bt:: output_var;
var 0..10: weekend_bt:: output_var;
var 0..31: objective:: is_defined_var;
var -1000..1000: X_INTRODUCED_33 ::var_is_introduced :: is_defined_var;
var 0..1000: X_INTRODUCED_34 ::var_is_introduced ;
var -1000..1000: X_INTRODUCED_38 ::var_is_introduced :: is_defined_var;
var 0..1000: X_INTRODUCED_39 ::var_is_introduced ;
var -1000..1000: X_INTRODUCED_41 ::var_is_introduced :: is_defined_var;
var 0..1000: X_INTRODUCED_42 ::var_is_introduced ;
var -1000..1000: X_INTRODUCED_43 ::var_is_introduced :: is_defined_var;
var 0..1000: X_INTRODUCED_44 ::var_is_introduced ;
var -1000..1000: X_INTRODUCED_45 ::var_is_introduced :: is_defined_var;
var 0..1000: X_INTRODUCED_46 ::var_is_introduced ;
var -1000..1000: X_INTRODUCED_47 ::var_is_introduced :: is_defined_var;
var 0..1000: X_INTRODUCED_48 ::var_is_introduced ;
var -1000..1000: X_INTRODUCED_49 ::var_is_introduced :: is_defined_var;
var 0..1000: X_INTRODUCED_50 ::var_is_introduced ;
var -1000..1000: X_INTRODUCED_51 ::var_is_introduced :: is_defined_var;
var 0..1000: X_INTRODUCED_52 ::var_is_introduced ;
var -1000..1000: X_INTRODUCED_53 ::var_is_introduced :: is_defined_var;
var 0..1000: X_INTRODUCED_54 ::var_is_introduced ;
var -1000..1000: X_INTRODUCED_55 ::var_is_introduced :: is_defined_var;
var 0..1000: X_INTRODUCED_56 ::var_is_introduced ;
var -1000..1000: X_INTRODUCED_57 ::var_is_introduced :: is_defined_var;
var 0..1000: X_INTRODUCED_58 ::var_is_introduced ;
var -1000..1000: X_INTRODUCED_59 ::var_is_introduced :: is_defined_var;
var 0..1000: X_INTRODUCED_60 ::var_is_introduced ;
var bool: X_INTRODUCED_61 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_63 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_64 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_65 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_66 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_67 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_68 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_69 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_70 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_71 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_72 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_73 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_74 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_75 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_76 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_77 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_78 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_79 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_80 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_81 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_82 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_83 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_84 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_85 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_87 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_88 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_89 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_90 ::var_is_introduced :: is_defined_var;
array [1..10] of var int: roster:: output_array([1..10]) = [3,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9];
array [1..4] of var int: week_days_oc = [X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13];
array [1..4] of var int: weekend_days_oc = [X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17];
array [1..9] of var int: adj_days:: output_array([1..9]) = [X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26];
array [1..2] of var int: wed_before_weekend:: output_array([1..2]) = [X_INTRODUCED_27,X_INTRODUCED_28];
array [1..8] of var int: roster_week_days = [3,X_INTRODUCED_1,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_8,X_INTRODUCED_9];
array [1..2] of var int: roster_weekend_days = [X_INTRODUCED_2,X_INTRODUCED_7];
constraint jacop_count(roster_weekend_days,1,X_INTRODUCED_14);
constraint jacop_count(roster_week_days,1,X_INTRODUCED_10);
constraint jacop_count(roster_weekend_days,2,X_INTRODUCED_15);
constraint jacop_count(roster_week_days,2,X_INTRODUCED_11);
constraint jacop_count(roster_weekend_days,3,X_INTRODUCED_16);
constraint jacop_count(roster_week_days,3,X_INTRODUCED_12);
constraint jacop_count(roster_weekend_days,4,X_INTRODUCED_17);
constraint jacop_count(roster_week_days,4,X_INTRODUCED_13);
constraint int_abs(X_INTRODUCED_33,X_INTRODUCED_34);
constraint int_lin_le(X_INTRODUCED_37,[X_INTRODUCED_34,weekend_bt],0);
constraint int_abs(X_INTRODUCED_38,X_INTRODUCED_39);
constraint int_lin_le(X_INTRODUCED_37,[X_INTRODUCED_39,week_day_bt],0);
constraint int_abs(X_INTRODUCED_41,X_INTRODUCED_42);
constraint int_lin_le(X_INTRODUCED_37,[X_INTRODUCED_42,weekend_bt],0);
constraint int_abs(X_INTRODUCED_43,X_INTRODUCED_44);
constraint int_lin_le(X_INTRODUCED_37,[X_INTRODUCED_44,week_day_bt],0);
constraint int_abs(X_INTRODUCED_45,X_INTRODUCED_46);
constraint int_lin_le(X_INTRODUCED_37,[X_INTRODUCED_46,weekend_bt],0);
constraint int_abs(X_INTRODUCED_47,X_INTRODUCED_48);
constraint int_lin_le(X_INTRODUCED_37,[X_INTRODUCED_48,week_day_bt],0);
constraint int_abs(X_INTRODUCED_49,X_INTRODUCED_50);
constraint int_lin_le(X_INTRODUCED_37,[X_INTRODUCED_50,weekend_bt],0);
constraint int_abs(X_INTRODUCED_51,X_INTRODUCED_52);
constraint int_lin_le(X_INTRODUCED_37,[X_INTRODUCED_52,week_day_bt],0);
constraint int_abs(X_INTRODUCED_53,X_INTRODUCED_54);
constraint int_lin_le(X_INTRODUCED_37,[X_INTRODUCED_54,weekend_bt],0);
constraint int_abs(X_INTRODUCED_55,X_INTRODUCED_56);
constraint int_lin_le(X_INTRODUCED_37,[X_INTRODUCED_56,week_day_bt],0);
constraint int_abs(X_INTRODUCED_57,X_INTRODUCED_58);
constraint int_lin_le(X_INTRODUCED_37,[X_INTRODUCED_58,weekend_bt],0);
constraint int_abs(X_INTRODUCED_59,X_INTRODUCED_60);
constraint int_lin_le(X_INTRODUCED_37,[X_INTRODUCED_60,week_day_bt],0);
constraint bool_clause([X_INTRODUCED_63],[X_INTRODUCED_61]);
constraint bool_clause([X_INTRODUCED_65],[X_INTRODUCED_64]);
constraint bool_clause([X_INTRODUCED_67],[X_INTRODUCED_66]);
constraint bool_clause([X_INTRODUCED_69],[X_INTRODUCED_68]);
constraint bool_clause([X_INTRODUCED_71],[X_INTRODUCED_70]);
constraint bool_clause([X_INTRODUCED_73],[X_INTRODUCED_72]);
constraint bool_clause([X_INTRODUCED_75],[X_INTRODUCED_74]);
constraint bool_clause([X_INTRODUCED_77],[X_INTRODUCED_76]);
constraint bool_clause([X_INTRODUCED_78],[X_INTRODUCED_61]);
constraint bool_clause([X_INTRODUCED_79],[X_INTRODUCED_64]);
constraint bool_clause([X_INTRODUCED_80],[X_INTRODUCED_66]);
constraint bool_clause([X_INTRODUCED_81],[X_INTRODUCED_68]);
constraint bool_clause([X_INTRODUCED_82],[X_INTRODUCED_70]);
constraint bool_clause([X_INTRODUCED_83],[X_INTRODUCED_72]);
constraint bool_clause([X_INTRODUCED_84],[X_INTRODUCED_74]);
constraint bool_clause([X_INTRODUCED_85],[X_INTRODUCED_76]);
constraint int_lin_ne(X_INTRODUCED_62,[X_INTRODUCED_2,X_INTRODUCED_1],0);
constraint int_lin_ne(X_INTRODUCED_62,[X_INTRODUCED_2,X_INTRODUCED_3],0);
constraint int_lin_ne(X_INTRODUCED_62,[X_INTRODUCED_7,X_INTRODUCED_6],0);
constraint int_lin_ne(X_INTRODUCED_62,[X_INTRODUCED_7,X_INTRODUCED_8],0);
constraint bool_clause([X_INTRODUCED_88],[X_INTRODUCED_87]);
constraint bool_clause([X_INTRODUCED_90],[X_INTRODUCED_89]);
constraint int_lin_ne(X_INTRODUCED_62,[X_INTRODUCED_2,X_INTRODUCED_7],0);
constraint int_lin_eq([1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[week_day_bt,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,weekend_bt,objective],0):: defines_var(objective);
constraint int_lin_eq([100,-100,-1],[X_INTRODUCED_15,X_INTRODUCED_14,X_INTRODUCED_33],0):: defines_var(X_INTRODUCED_33);
constraint int_lin_eq([100,-100,-1],[X_INTRODUCED_11,X_INTRODUCED_10,X_INTRODUCED_38],0):: defines_var(X_INTRODUCED_38);
constraint int_lin_eq([100,-100,-1],[X_INTRODUCED_16,X_INTRODUCED_14,X_INTRODUCED_41],0):: defines_var(X_INTRODUCED_41);
constraint int_lin_eq([100,-100,-1],[X_INTRODUCED_12,X_INTRODUCED_10,X_INTRODUCED_43],0):: defines_var(X_INTRODUCED_43);
constraint int_lin_eq([100,-100,-1],[X_INTRODUCED_17,X_INTRODUCED_14,X_INTRODUCED_45],0):: defines_var(X_INTRODUCED_45);
constraint int_lin_eq([100,-100,-1],[X_INTRODUCED_13,X_INTRODUCED_10,X_INTRODUCED_47],0):: defines_var(X_INTRODUCED_47);
constraint int_lin_eq([100,-100,-1],[X_INTRODUCED_16,X_INTRODUCED_15,X_INTRODUCED_49],0):: defines_var(X_INTRODUCED_49);
constraint int_lin_eq([100,-100,-1],[X_INTRODUCED_12,X_INTRODUCED_11,X_INTRODUCED_51],0):: defines_var(X_INTRODUCED_51);
constraint int_lin_eq([100,-100,-1],[X_INTRODUCED_17,X_INTRODUCED_15,X_INTRODUCED_53],0):: defines_var(X_INTRODUCED_53);
constraint int_lin_eq([100,-100,-1],[X_INTRODUCED_13,X_INTRODUCED_11,X_INTRODUCED_55],0):: defines_var(X_INTRODUCED_55);
constraint int_lin_eq([100,-100,-1],[X_INTRODUCED_17,X_INTRODUCED_16,X_INTRODUCED_57],0):: defines_var(X_INTRODUCED_57);
constraint int_lin_eq([100,-100,-1],[X_INTRODUCED_13,X_INTRODUCED_12,X_INTRODUCED_59],0):: defines_var(X_INTRODUCED_59);
constraint int_eq_reif(3,X_INTRODUCED_1,X_INTRODUCED_61):: defines_var(X_INTRODUCED_61);
constraint int_lin_ne_reif([1],[X_INTRODUCED_2],3,X_INTRODUCED_63):: defines_var(X_INTRODUCED_63);
constraint int_eq_reif(X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_64):: defines_var(X_INTRODUCED_64);
constraint int_lin_ne_reif(X_INTRODUCED_62,[X_INTRODUCED_3,X_INTRODUCED_1],0,X_INTRODUCED_65):: defines_var(X_INTRODUCED_65);
constraint int_eq_reif(X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_66):: defines_var(X_INTRODUCED_66);
constraint int_lin_ne_reif(X_INTRODUCED_62,[X_INTRODUCED_4,X_INTRODUCED_2],0,X_INTRODUCED_67):: defines_var(X_INTRODUCED_67);
constraint int_eq_reif(X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_68):: defines_var(X_INTRODUCED_68);
constraint int_lin_ne_reif(X_INTRODUCED_62,[X_INTRODUCED_5,X_INTRODUCED_3],0,X_INTRODUCED_69):: defines_var(X_INTRODUCED_69);
constraint int_eq_reif(X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_70):: defines_var(X_INTRODUCED_70);
constraint int_lin_ne_reif(X_INTRODUCED_62,[X_INTRODUCED_6,X_INTRODUCED_4],0,X_INTRODUCED_71):: defines_var(X_INTRODUCED_71);
constraint int_eq_reif(X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_72):: defines_var(X_INTRODUCED_72);
constraint int_lin_ne_reif(X_INTRODUCED_62,[X_INTRODUCED_7,X_INTRODUCED_5],0,X_INTRODUCED_73):: defines_var(X_INTRODUCED_73);
constraint int_eq_reif(X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_74):: defines_var(X_INTRODUCED_74);
constraint int_lin_ne_reif(X_INTRODUCED_62,[X_INTRODUCED_8,X_INTRODUCED_6],0,X_INTRODUCED_75):: defines_var(X_INTRODUCED_75);
constraint int_eq_reif(X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_76):: defines_var(X_INTRODUCED_76);
constraint int_lin_ne_reif(X_INTRODUCED_62,[X_INTRODUCED_9,X_INTRODUCED_7],0,X_INTRODUCED_77):: defines_var(X_INTRODUCED_77);
constraint int_eq_reif(X_INTRODUCED_18,1,X_INTRODUCED_78):: defines_var(X_INTRODUCED_78);
constraint int_eq_reif(X_INTRODUCED_19,1,X_INTRODUCED_79):: defines_var(X_INTRODUCED_79);
constraint int_eq_reif(X_INTRODUCED_20,1,X_INTRODUCED_80):: defines_var(X_INTRODUCED_80);
constraint int_eq_reif(X_INTRODUCED_21,1,X_INTRODUCED_81):: defines_var(X_INTRODUCED_81);
constraint int_eq_reif(X_INTRODUCED_22,1,X_INTRODUCED_82):: defines_var(X_INTRODUCED_82);
constraint int_eq_reif(X_INTRODUCED_23,1,X_INTRODUCED_83):: defines_var(X_INTRODUCED_83);
constraint int_eq_reif(X_INTRODUCED_24,1,X_INTRODUCED_84):: defines_var(X_INTRODUCED_84);
constraint int_eq_reif(X_INTRODUCED_25,1,X_INTRODUCED_85):: defines_var(X_INTRODUCED_85);
constraint int_eq_reif(X_INTRODUCED_2,3,X_INTRODUCED_87):: defines_var(X_INTRODUCED_87);
constraint int_eq_reif(X_INTRODUCED_27,1,X_INTRODUCED_88):: defines_var(X_INTRODUCED_88);
constraint int_eq_reif(X_INTRODUCED_7,X_INTRODUCED_5,X_INTRODUCED_89):: defines_var(X_INTRODUCED_89);
constraint int_eq_reif(X_INTRODUCED_28,1,X_INTRODUCED_90):: defines_var(X_INTRODUCED_90);
solve :: seq_search([int_search(roster,anti_first_fail,indomain_split,complete),int_search(roster_week_days,anti_first_fail,indomain_split,complete),int_search(roster_weekend_days,anti_first_fail,indomain_split,complete),int_search(week_days_oc,input_order,indomain_split,complete),int_search(weekend_days_oc,input_order,indomain_split,complete),int_search(adj_days,input_order,indomain_split,complete),int_search(wed_before_weekend,input_order,indomain_split,complete),int_search([week_day_bt,weekend_bt],input_order,indomain_split,complete)]) minimize objective;
