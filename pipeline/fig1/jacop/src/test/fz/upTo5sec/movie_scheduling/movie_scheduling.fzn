var 0..1: X_INTRODUCED_0;
var 0..1: X_INTRODUCED_1;
var 0..1: X_INTRODUCED_2;
var 0..1: X_INTRODUCED_3;
var 0..1: X_INTRODUCED_4;
var 0..1: X_INTRODUCED_5;
var 0..1: X_INTRODUCED_6;
var 0..1: X_INTRODUCED_7;
var 0..1: X_INTRODUCED_8;
var 0..9: z:: is_defined_var;
var bool: X_INTRODUCED_9 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_10 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_12 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_14 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_16 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_18 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_20 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_22 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_24 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_13 ::var_is_introduced :: is_defined_var = false;
var bool: X_INTRODUCED_15 ::var_is_introduced :: is_defined_var = false;
var bool: X_INTRODUCED_19 ::var_is_introduced :: is_defined_var = false;
var bool: X_INTRODUCED_23 ::var_is_introduced :: is_defined_var = false;
var bool: X_INTRODUCED_27 ::var_is_introduced :: is_defined_var = false;
var bool: X_INTRODUCED_28 ::var_is_introduced :: is_defined_var = false;
var bool: X_INTRODUCED_30 ::var_is_introduced :: is_defined_var = false;
var bool: X_INTRODUCED_32 ::var_is_introduced :: is_defined_var = false;
var bool: X_INTRODUCED_35 ::var_is_introduced :: is_defined_var = false;
var bool: X_INTRODUCED_37 ::var_is_introduced :: is_defined_var = false;
var bool: X_INTRODUCED_40 ::var_is_introduced :: is_defined_var = false;
var bool: X_INTRODUCED_45 ::var_is_introduced :: is_defined_var = false;
var bool: X_INTRODUCED_47 ::var_is_introduced :: is_defined_var = false;
array [1..9] of var int: x:: output_array([1..9]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8];
constraint int_lin_eq([1,1,1,1,1,1,1,1,1,-1],[X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,z],0):: defines_var(z);
constraint int_eq_reif(X_INTRODUCED_1,1,X_INTRODUCED_9):: defines_var(X_INTRODUCED_9);
constraint int_eq_reif(X_INTRODUCED_0,1,X_INTRODUCED_10):: defines_var(X_INTRODUCED_10);
constraint int_eq_reif(X_INTRODUCED_2,1,X_INTRODUCED_12):: defines_var(X_INTRODUCED_12);
constraint array_bool_and([X_INTRODUCED_10,X_INTRODUCED_12],X_INTRODUCED_13):: defines_var(X_INTRODUCED_13);
constraint int_eq_reif(X_INTRODUCED_3,1,X_INTRODUCED_14):: defines_var(X_INTRODUCED_14);
constraint array_bool_and([X_INTRODUCED_10,X_INTRODUCED_14],X_INTRODUCED_15):: defines_var(X_INTRODUCED_15);
constraint int_eq_reif(X_INTRODUCED_4,1,X_INTRODUCED_16):: defines_var(X_INTRODUCED_16);
constraint int_eq_reif(X_INTRODUCED_5,1,X_INTRODUCED_18):: defines_var(X_INTRODUCED_18);
constraint array_bool_and([X_INTRODUCED_10,X_INTRODUCED_18],X_INTRODUCED_19):: defines_var(X_INTRODUCED_19);
constraint int_eq_reif(X_INTRODUCED_6,1,X_INTRODUCED_20):: defines_var(X_INTRODUCED_20);
constraint int_eq_reif(X_INTRODUCED_7,1,X_INTRODUCED_22):: defines_var(X_INTRODUCED_22);
constraint array_bool_and([X_INTRODUCED_10,X_INTRODUCED_22],X_INTRODUCED_23):: defines_var(X_INTRODUCED_23);
constraint int_eq_reif(X_INTRODUCED_8,1,X_INTRODUCED_24):: defines_var(X_INTRODUCED_24);
constraint array_bool_and([X_INTRODUCED_9,X_INTRODUCED_14],X_INTRODUCED_27):: defines_var(X_INTRODUCED_27);
constraint array_bool_and([X_INTRODUCED_9,X_INTRODUCED_16],X_INTRODUCED_28):: defines_var(X_INTRODUCED_28);
constraint array_bool_and([X_INTRODUCED_9,X_INTRODUCED_20],X_INTRODUCED_30):: defines_var(X_INTRODUCED_30);
constraint array_bool_and([X_INTRODUCED_9,X_INTRODUCED_24],X_INTRODUCED_32):: defines_var(X_INTRODUCED_32);
constraint array_bool_and([X_INTRODUCED_12,X_INTRODUCED_18],X_INTRODUCED_35):: defines_var(X_INTRODUCED_35);
constraint array_bool_and([X_INTRODUCED_12,X_INTRODUCED_22],X_INTRODUCED_37):: defines_var(X_INTRODUCED_37);
constraint array_bool_and([X_INTRODUCED_14,X_INTRODUCED_18],X_INTRODUCED_40):: defines_var(X_INTRODUCED_40);
constraint array_bool_and([X_INTRODUCED_16,X_INTRODUCED_20],X_INTRODUCED_45):: defines_var(X_INTRODUCED_45);
constraint array_bool_and([X_INTRODUCED_16,X_INTRODUCED_24],X_INTRODUCED_47):: defines_var(X_INTRODUCED_47);
solve :: int_search(x,first_fail,indomain_min,complete) maximize z;
