array [1..9] of int: X_INTRODUCED_9 = [1,1,1,1,1,1,1,1,1];
array [1..2] of int: X_INTRODUCED_10 = [1,-1];
var 1..81: X_INTRODUCED_0;
var 1..81: X_INTRODUCED_1;
var 1..81: X_INTRODUCED_2;
var 1..81: X_INTRODUCED_3;
var 1..81: X_INTRODUCED_4;
var 1..81: X_INTRODUCED_5;
var 1..81: X_INTRODUCED_6;
var 1..81: X_INTRODUCED_7;
var 1..81: X_INTRODUCED_8;
array [1..9] of var int: x:: output_array([1..9]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8];
constraint int_lin_eq(X_INTRODUCED_9,[X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8],369);
constraint int_lin_eq(X_INTRODUCED_10,[X_INTRODUCED_8,X_INTRODUCED_0],8);
constraint int_lin_le(X_INTRODUCED_10,[X_INTRODUCED_0,X_INTRODUCED_1],0);
constraint int_lin_le(X_INTRODUCED_10,[X_INTRODUCED_1,X_INTRODUCED_2],0);
constraint int_lin_le(X_INTRODUCED_10,[X_INTRODUCED_2,X_INTRODUCED_3],0);
constraint int_lin_le(X_INTRODUCED_10,[X_INTRODUCED_3,X_INTRODUCED_4],0);
constraint int_lin_le(X_INTRODUCED_10,[X_INTRODUCED_4,X_INTRODUCED_5],0);
constraint int_lin_le(X_INTRODUCED_10,[X_INTRODUCED_5,X_INTRODUCED_6],0);
constraint int_lin_le(X_INTRODUCED_10,[X_INTRODUCED_6,X_INTRODUCED_7],0);
constraint int_lin_le(X_INTRODUCED_10,[X_INTRODUCED_7,X_INTRODUCED_8],0);
constraint int_lin_ne(X_INTRODUCED_10,[X_INTRODUCED_0,X_INTRODUCED_1],0);
constraint int_lin_ne(X_INTRODUCED_10,[X_INTRODUCED_0,X_INTRODUCED_2],0);
constraint int_lin_ne(X_INTRODUCED_10,[X_INTRODUCED_0,X_INTRODUCED_3],0);
constraint int_lin_ne(X_INTRODUCED_10,[X_INTRODUCED_0,X_INTRODUCED_4],0);
constraint int_lin_ne(X_INTRODUCED_10,[X_INTRODUCED_0,X_INTRODUCED_5],0);
constraint int_lin_ne(X_INTRODUCED_10,[X_INTRODUCED_0,X_INTRODUCED_6],0);
constraint int_lin_ne(X_INTRODUCED_10,[X_INTRODUCED_0,X_INTRODUCED_7],0);
constraint int_lin_ne(X_INTRODUCED_10,[X_INTRODUCED_0,X_INTRODUCED_8],0);
constraint int_lin_ne(X_INTRODUCED_10,[X_INTRODUCED_1,X_INTRODUCED_2],0);
constraint int_lin_ne(X_INTRODUCED_10,[X_INTRODUCED_1,X_INTRODUCED_3],0);
constraint int_lin_ne(X_INTRODUCED_10,[X_INTRODUCED_1,X_INTRODUCED_4],0);
constraint int_lin_ne(X_INTRODUCED_10,[X_INTRODUCED_1,X_INTRODUCED_5],0);
constraint int_lin_ne(X_INTRODUCED_10,[X_INTRODUCED_1,X_INTRODUCED_6],0);
constraint int_lin_ne(X_INTRODUCED_10,[X_INTRODUCED_1,X_INTRODUCED_7],0);
constraint int_lin_ne(X_INTRODUCED_10,[X_INTRODUCED_1,X_INTRODUCED_8],0);
constraint int_lin_ne(X_INTRODUCED_10,[X_INTRODUCED_2,X_INTRODUCED_3],0);
constraint int_lin_ne(X_INTRODUCED_10,[X_INTRODUCED_2,X_INTRODUCED_4],0);
constraint int_lin_ne(X_INTRODUCED_10,[X_INTRODUCED_2,X_INTRODUCED_5],0);
constraint int_lin_ne(X_INTRODUCED_10,[X_INTRODUCED_2,X_INTRODUCED_6],0);
constraint int_lin_ne(X_INTRODUCED_10,[X_INTRODUCED_2,X_INTRODUCED_7],0);
constraint int_lin_ne(X_INTRODUCED_10,[X_INTRODUCED_2,X_INTRODUCED_8],0);
constraint int_lin_ne(X_INTRODUCED_10,[X_INTRODUCED_3,X_INTRODUCED_4],0);
constraint int_lin_ne(X_INTRODUCED_10,[X_INTRODUCED_3,X_INTRODUCED_5],0);
constraint int_lin_ne(X_INTRODUCED_10,[X_INTRODUCED_3,X_INTRODUCED_6],0);
constraint int_lin_ne(X_INTRODUCED_10,[X_INTRODUCED_3,X_INTRODUCED_7],0);
constraint int_lin_ne(X_INTRODUCED_10,[X_INTRODUCED_3,X_INTRODUCED_8],0);
constraint int_lin_ne(X_INTRODUCED_10,[X_INTRODUCED_4,X_INTRODUCED_5],0);
constraint int_lin_ne(X_INTRODUCED_10,[X_INTRODUCED_4,X_INTRODUCED_6],0);
constraint int_lin_ne(X_INTRODUCED_10,[X_INTRODUCED_4,X_INTRODUCED_7],0);
constraint int_lin_ne(X_INTRODUCED_10,[X_INTRODUCED_4,X_INTRODUCED_8],0);
constraint int_lin_ne(X_INTRODUCED_10,[X_INTRODUCED_5,X_INTRODUCED_6],0);
constraint int_lin_ne(X_INTRODUCED_10,[X_INTRODUCED_5,X_INTRODUCED_7],0);
constraint int_lin_ne(X_INTRODUCED_10,[X_INTRODUCED_5,X_INTRODUCED_8],0);
constraint int_lin_ne(X_INTRODUCED_10,[X_INTRODUCED_6,X_INTRODUCED_7],0);
constraint int_lin_ne(X_INTRODUCED_10,[X_INTRODUCED_6,X_INTRODUCED_8],0);
constraint int_lin_ne(X_INTRODUCED_10,[X_INTRODUCED_7,X_INTRODUCED_8],0);
solve :: int_search(x,first_fail,indomain_min,complete) satisfy;
