predicate jacop_networkflow(array [int,int] of int: arc,array [int] of var int: flow,array [int] of var int: weight,array [int] of int: balance,var int: cost);
array [1..24] of int: X_INTRODUCED_28 = [1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0];
array [1..12] of int: X_INTRODUCED_29 = [0,0,0,0,0,0,0,0,0,0,0,0];
array [1..48] of int: X_INTRODUCED_30 = [1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,1,1,11,2,12,3,1,4,2,5,3,6,4,7,5,8,6,9,7,10,8,11,9,12,10];
array [1..3] of int: X_INTRODUCED_32 = [1,-1,-1];
var 69..115: X_INTRODUCED_0:: is_defined_var;
var 51..115: X_INTRODUCED_1:: is_defined_var;
var 69..115: X_INTRODUCED_2:: is_defined_var;
var 24..115: X_INTRODUCED_3:: is_defined_var;
var 98..115: X_INTRODUCED_4:: is_defined_var;
var 99..115: X_INTRODUCED_5:: is_defined_var;
var 79..115: X_INTRODUCED_6:: is_defined_var;
var 19..115: X_INTRODUCED_7:: is_defined_var;
var 63..115: X_INTRODUCED_8:: is_defined_var;
var 39..115: X_INTRODUCED_9:: is_defined_var;
var 30..115: X_INTRODUCED_10:: is_defined_var;
var 0..115: X_INTRODUCED_12;
var 0..115: X_INTRODUCED_13;
var 0..115: X_INTRODUCED_14;
var 0..115: X_INTRODUCED_15;
var 0..115: X_INTRODUCED_16;
var 0..115: X_INTRODUCED_17;
var 0..115: X_INTRODUCED_18;
var 0..115: X_INTRODUCED_19;
var 0..115: X_INTRODUCED_20;
var 0..115: X_INTRODUCED_21;
var 0..115: X_INTRODUCED_22;
var 0..115: X_INTRODUCED_23;
var 0..1380: objective:: output_var;
array [1..12] of var int: w:: output_array([0..11]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,115];
array [1..12] of var int: f:: output_array([0..11]) = [X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23];
array [1..24] of var int: X_INTRODUCED_27 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,115,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23];
array [1..12] of var int: X_INTRODUCED_45 ::var_is_introduced  = [X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23];
array [1..12] of var int: X_INTRODUCED_46 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,115];
constraint jacop_networkflow(X_INTRODUCED_30,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29,objective);
constraint int_lin_eq(X_INTRODUCED_32,[X_INTRODUCED_0,X_INTRODUCED_13,X_INTRODUCED_14],0):: defines_var(X_INTRODUCED_0);
constraint int_lin_eq(X_INTRODUCED_32,[X_INTRODUCED_1,X_INTRODUCED_14,X_INTRODUCED_15],0):: defines_var(X_INTRODUCED_1);
constraint int_lin_eq(X_INTRODUCED_32,[X_INTRODUCED_2,X_INTRODUCED_15,X_INTRODUCED_16],0):: defines_var(X_INTRODUCED_2);
constraint int_lin_eq(X_INTRODUCED_32,[X_INTRODUCED_3,X_INTRODUCED_16,X_INTRODUCED_17],0):: defines_var(X_INTRODUCED_3);
constraint int_lin_eq(X_INTRODUCED_32,[X_INTRODUCED_4,X_INTRODUCED_17,X_INTRODUCED_18],0):: defines_var(X_INTRODUCED_4);
constraint int_lin_eq(X_INTRODUCED_32,[X_INTRODUCED_5,X_INTRODUCED_18,X_INTRODUCED_19],0):: defines_var(X_INTRODUCED_5);
constraint int_lin_eq(X_INTRODUCED_32,[X_INTRODUCED_6,X_INTRODUCED_19,X_INTRODUCED_20],0):: defines_var(X_INTRODUCED_6);
constraint int_lin_eq(X_INTRODUCED_32,[X_INTRODUCED_7,X_INTRODUCED_20,X_INTRODUCED_21],0):: defines_var(X_INTRODUCED_7);
constraint int_lin_eq(X_INTRODUCED_32,[X_INTRODUCED_8,X_INTRODUCED_21,X_INTRODUCED_22],0):: defines_var(X_INTRODUCED_8);
constraint int_lin_eq(X_INTRODUCED_32,[X_INTRODUCED_9,X_INTRODUCED_22,X_INTRODUCED_23],0):: defines_var(X_INTRODUCED_9);
constraint int_lin_eq(X_INTRODUCED_32,[X_INTRODUCED_10,X_INTRODUCED_23,X_INTRODUCED_12],0):: defines_var(X_INTRODUCED_10);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_12,X_INTRODUCED_13],-115);
solve :: seq_search([int_search(X_INTRODUCED_46,first_fail,indomain_split,complete),int_search(X_INTRODUCED_45,first_fail,indomain_split,complete),int_search([objective],input_order,indomain_min,complete)]) minimize objective;
