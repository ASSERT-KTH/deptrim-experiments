var 0..1: X_INTRODUCED_1;
var 0..1: X_INTRODUCED_2;
var 0..1: X_INTRODUCED_4;
var 0..1: X_INTRODUCED_6;
var 0..1: X_INTRODUCED_8;
var 0..1: X_INTRODUCED_9;
var 0..1: X_INTRODUCED_10;
var 0..1: X_INTRODUCED_13;
var 0..1: X_INTRODUCED_14;
var 0..1: X_INTRODUCED_15;
var 0..1: X_INTRODUCED_17;
var 0..1: X_INTRODUCED_18;
var 0..1: X_INTRODUCED_20;
var 0..1: X_INTRODUCED_21;
var 0..1: X_INTRODUCED_22;
var 0..1: X_INTRODUCED_25;
var 0..1: X_INTRODUCED_26;
var 0..1: X_INTRODUCED_27;
var 0..1: X_INTRODUCED_29;
var 0..1: X_INTRODUCED_31;
var 0..1: X_INTRODUCED_33;
var 0..1: X_INTRODUCED_34;
var 0..1: X_INTRODUCED_35;
var 0..1: X_INTRODUCED_37;
var 0..1: X_INTRODUCED_38;
var 0..1: X_INTRODUCED_39;
var 0..1: X_INTRODUCED_40;
var 0..1: X_INTRODUCED_43;
var 0..1: X_INTRODUCED_45;
var 0..1: X_INTRODUCED_46;
var 0..1: X_INTRODUCED_48;
var 0..1: X_INTRODUCED_50;
var 0..1: X_INTRODUCED_52;
var 0..1: X_INTRODUCED_54;
var 0..1: X_INTRODUCED_55;
var 0..1: X_INTRODUCED_57;
var 0..1: X_INTRODUCED_59;
var 0..1: X_INTRODUCED_61;
var 0..1: X_INTRODUCED_62;
var 0..1: X_INTRODUCED_65;
var 0..1: X_INTRODUCED_66;
var 0..1: X_INTRODUCED_68;
var 0..1: X_INTRODUCED_69;
var 0..1: X_INTRODUCED_70;
var 0..1: X_INTRODUCED_72;
var 0..1: X_INTRODUCED_73;
var 0..1: X_INTRODUCED_74;
var 0..1: X_INTRODUCED_77;
var 0..1: X_INTRODUCED_78;
var 0..1: X_INTRODUCED_80;
var 0..1: X_INTRODUCED_81;
var 0..1: X_INTRODUCED_83;
var 0..1: X_INTRODUCED_86;
var 0..1: X_INTRODUCED_87;
var 0..1: X_INTRODUCED_88;
var 0..1: X_INTRODUCED_89;
var 0..1: X_INTRODUCED_90;
var 0..1: X_INTRODUCED_92;
var 0..1: X_INTRODUCED_94;
var 0..1: X_INTRODUCED_95;
var 0..1: X_INTRODUCED_96;
var 0..1: X_INTRODUCED_99;
array [1..100] of var int: mines:: output_array([1..10,1..10]) = [0,X_INTRODUCED_1,X_INTRODUCED_2,0,X_INTRODUCED_4,0,X_INTRODUCED_6,0,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,0,0,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,0,X_INTRODUCED_17,X_INTRODUCED_18,0,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,0,0,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,0,X_INTRODUCED_29,0,X_INTRODUCED_31,0,X_INTRODUCED_33,X_INTRODUCED_34,X_INTRODUCED_35,0,X_INTRODUCED_37,X_INTRODUCED_38,X_INTRODUCED_39,X_INTRODUCED_40,0,0,X_INTRODUCED_43,0,X_INTRODUCED_45,X_INTRODUCED_46,0,X_INTRODUCED_48,0,X_INTRODUCED_50,0,X_INTRODUCED_52,0,X_INTRODUCED_54,X_INTRODUCED_55,0,X_INTRODUCED_57,0,X_INTRODUCED_59,0,X_INTRODUCED_61,X_INTRODUCED_62,0,0,X_INTRODUCED_65,X_INTRODUCED_66,0,X_INTRODUCED_68,X_INTRODUCED_69,X_INTRODUCED_70,0,X_INTRODUCED_72,X_INTRODUCED_73,X_INTRODUCED_74,0,0,X_INTRODUCED_77,X_INTRODUCED_78,0,X_INTRODUCED_80,X_INTRODUCED_81,0,X_INTRODUCED_83,0,0,X_INTRODUCED_86,X_INTRODUCED_87,X_INTRODUCED_88,X_INTRODUCED_89,X_INTRODUCED_90,0,X_INTRODUCED_92,0,X_INTRODUCED_94,X_INTRODUCED_95,X_INTRODUCED_96,0,0,X_INTRODUCED_99];
array [1..100] of var int: X_INTRODUCED_142 ::var_is_introduced  = [0,X_INTRODUCED_1,X_INTRODUCED_2,0,X_INTRODUCED_4,0,X_INTRODUCED_6,0,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,0,0,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,0,X_INTRODUCED_17,X_INTRODUCED_18,0,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,0,0,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,0,X_INTRODUCED_29,0,X_INTRODUCED_31,0,X_INTRODUCED_33,X_INTRODUCED_34,X_INTRODUCED_35,0,X_INTRODUCED_37,X_INTRODUCED_38,X_INTRODUCED_39,X_INTRODUCED_40,0,0,X_INTRODUCED_43,0,X_INTRODUCED_45,X_INTRODUCED_46,0,X_INTRODUCED_48,0,X_INTRODUCED_50,0,X_INTRODUCED_52,0,X_INTRODUCED_54,X_INTRODUCED_55,0,X_INTRODUCED_57,0,X_INTRODUCED_59,0,X_INTRODUCED_61,X_INTRODUCED_62,0,0,X_INTRODUCED_65,X_INTRODUCED_66,0,X_INTRODUCED_68,X_INTRODUCED_69,X_INTRODUCED_70,0,X_INTRODUCED_72,X_INTRODUCED_73,X_INTRODUCED_74,0,0,X_INTRODUCED_77,X_INTRODUCED_78,0,X_INTRODUCED_80,X_INTRODUCED_81,0,X_INTRODUCED_83,0,0,X_INTRODUCED_86,X_INTRODUCED_87,X_INTRODUCED_88,X_INTRODUCED_89,X_INTRODUCED_90,0,X_INTRODUCED_92,0,X_INTRODUCED_94,X_INTRODUCED_95,X_INTRODUCED_96,0,0,X_INTRODUCED_99];
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_1,X_INTRODUCED_10],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1],[X_INTRODUCED_2,X_INTRODUCED_4,X_INTRODUCED_13,X_INTRODUCED_14],-2);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1],[X_INTRODUCED_4,X_INTRODUCED_6,X_INTRODUCED_14,X_INTRODUCED_15],-2);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1],[X_INTRODUCED_6,X_INTRODUCED_8,X_INTRODUCED_17,X_INTRODUCED_18],-2);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1],[X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_10,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22],-3);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1],[X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_13,X_INTRODUCED_21,X_INTRODUCED_22],-2);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1],[X_INTRODUCED_6,X_INTRODUCED_15,X_INTRODUCED_17,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27],-4);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1],[X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_18,X_INTRODUCED_29],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1],[X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_22,X_INTRODUCED_33,X_INTRODUCED_34],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1,-1],[X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_25,X_INTRODUCED_33,X_INTRODUCED_34,X_INTRODUCED_35],-3);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1,-1],[X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_27,X_INTRODUCED_29,X_INTRODUCED_37,X_INTRODUCED_38,X_INTRODUCED_39],-4);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1],[X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_31,X_INTRODUCED_40],-3);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1],[X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_31,X_INTRODUCED_33,X_INTRODUCED_43],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1,-1],[X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_35,X_INTRODUCED_37,X_INTRODUCED_45,X_INTRODUCED_46],-3);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1],[X_INTRODUCED_31,X_INTRODUCED_40,X_INTRODUCED_50,X_INTRODUCED_52],-2);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1],[X_INTRODUCED_31,X_INTRODUCED_33,X_INTRODUCED_43,X_INTRODUCED_52],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1,-1],[X_INTRODUCED_33,X_INTRODUCED_34,X_INTRODUCED_35,X_INTRODUCED_43,X_INTRODUCED_45,X_INTRODUCED_54,X_INTRODUCED_55],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1],[X_INTRODUCED_37,X_INTRODUCED_38,X_INTRODUCED_46,X_INTRODUCED_48,X_INTRODUCED_57],-3);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1],[X_INTRODUCED_38,X_INTRODUCED_39,X_INTRODUCED_48,X_INTRODUCED_59],-2);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1],[X_INTRODUCED_40,X_INTRODUCED_50,X_INTRODUCED_52,X_INTRODUCED_61,X_INTRODUCED_62],-3);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1],[X_INTRODUCED_43,X_INTRODUCED_52,X_INTRODUCED_54,X_INTRODUCED_62],-2);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1],[X_INTRODUCED_45,X_INTRODUCED_46,X_INTRODUCED_55,X_INTRODUCED_57,X_INTRODUCED_65,X_INTRODUCED_66],-2);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1],[X_INTRODUCED_48,X_INTRODUCED_57,X_INTRODUCED_59,X_INTRODUCED_68,X_INTRODUCED_69],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1],[X_INTRODUCED_50,X_INTRODUCED_61,X_INTRODUCED_70],-2);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1],[X_INTRODUCED_52,X_INTRODUCED_54,X_INTRODUCED_62,X_INTRODUCED_72,X_INTRODUCED_73,X_INTRODUCED_74],-3);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1],[X_INTRODUCED_54,X_INTRODUCED_55,X_INTRODUCED_65,X_INTRODUCED_73,X_INTRODUCED_74],-2);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1],[X_INTRODUCED_57,X_INTRODUCED_66,X_INTRODUCED_68,X_INTRODUCED_77,X_INTRODUCED_78],-2);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1],[X_INTRODUCED_61,X_INTRODUCED_62,X_INTRODUCED_70,X_INTRODUCED_72,X_INTRODUCED_80,X_INTRODUCED_81],-3);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1],[X_INTRODUCED_65,X_INTRODUCED_66,X_INTRODUCED_74,X_INTRODUCED_86],-3);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1],[X_INTRODUCED_65,X_INTRODUCED_66,X_INTRODUCED_77,X_INTRODUCED_86,X_INTRODUCED_87],-2);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1],[X_INTRODUCED_68,X_INTRODUCED_69,X_INTRODUCED_78,X_INTRODUCED_88,X_INTRODUCED_89],-3);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1],[X_INTRODUCED_72,X_INTRODUCED_73,X_INTRODUCED_81,X_INTRODUCED_83,X_INTRODUCED_92],-3);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1],[X_INTRODUCED_73,X_INTRODUCED_74,X_INTRODUCED_83,X_INTRODUCED_94,X_INTRODUCED_95],-3);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1],[X_INTRODUCED_74,X_INTRODUCED_86,X_INTRODUCED_94,X_INTRODUCED_95,X_INTRODUCED_96],-3);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1],[X_INTRODUCED_80,X_INTRODUCED_81,X_INTRODUCED_90,X_INTRODUCED_92],-2);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1],[X_INTRODUCED_83,X_INTRODUCED_92,X_INTRODUCED_94],-2);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1],[X_INTRODUCED_86,X_INTRODUCED_87,X_INTRODUCED_88,X_INTRODUCED_96],-2);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1],[X_INTRODUCED_87,X_INTRODUCED_88,X_INTRODUCED_89,X_INTRODUCED_99],-2);
solve :: int_search(X_INTRODUCED_142,first_fail,indomain_min,complete) satisfy;
