var 0..1: X_INTRODUCED_14;
var 0..1: X_INTRODUCED_15;
var 0..1: X_INTRODUCED_20;
var 0..1: X_INTRODUCED_21;
var 2..3: X_INTRODUCED_36:: is_defined_var;
var 2..3: X_INTRODUCED_39:: is_defined_var;
var 5..8: X_INTRODUCED_41:: is_defined_var;
var 5..8: X_INTRODUCED_42:: is_defined_var;
var 5..8: X_INTRODUCED_45:: is_defined_var;
var 5..8: X_INTRODUCED_46:: is_defined_var;
var 2..3: X_INTRODUCED_48:: is_defined_var;
var 2..3: X_INTRODUCED_51:: is_defined_var;
var 12..16: cost:: output_var:: is_defined_var;
var bool: X_INTRODUCED_79 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_80 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_81 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_82 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_83 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_84 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_86 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_87 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_88 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_89 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_90 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_91 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_103 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_104 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_105 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_106 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_107 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_108 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_110 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_111 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_112 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_113 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_114 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_115 ::var_is_introduced :: is_defined_var;
array [1..36] of var int: a:: output_array([0..5,0..5]) = [0,0,0,0,0,0,0,1,1,1,1,0,0,1,X_INTRODUCED_14,X_INTRODUCED_15,1,0,0,1,X_INTRODUCED_20,X_INTRODUCED_21,1,0,0,1,1,1,1,0,0,0,0,0,0,0];
constraint int_lin_eq([1,-1],[X_INTRODUCED_36,X_INTRODUCED_14],2):: defines_var(X_INTRODUCED_36);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_14,X_INTRODUCED_15],0);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_15,X_INTRODUCED_14],0);
constraint int_lin_eq([1,-1],[X_INTRODUCED_39,X_INTRODUCED_15],2):: defines_var(X_INTRODUCED_39);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_14,X_INTRODUCED_20],0);
constraint bool_clause([X_INTRODUCED_80],[X_INTRODUCED_79]);
constraint bool_clause([X_INTRODUCED_84],[X_INTRODUCED_81]);
constraint int_lin_eq([1,-1,-1,-1],[X_INTRODUCED_41,X_INTRODUCED_20,X_INTRODUCED_15,X_INTRODUCED_21],5):: defines_var(X_INTRODUCED_41);
constraint bool_clause([X_INTRODUCED_87],[X_INTRODUCED_86]);
constraint bool_clause([X_INTRODUCED_91],[X_INTRODUCED_88]);
constraint int_lin_eq([1,-1,-1,-1],[X_INTRODUCED_42,X_INTRODUCED_21,X_INTRODUCED_20,X_INTRODUCED_14],5):: defines_var(X_INTRODUCED_42);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_21,X_INTRODUCED_15],0);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_20,X_INTRODUCED_14],0);
constraint bool_clause([X_INTRODUCED_104],[X_INTRODUCED_103]);
constraint bool_clause([X_INTRODUCED_108],[X_INTRODUCED_105]);
constraint int_lin_eq([1,-1,-1,-1],[X_INTRODUCED_45,X_INTRODUCED_21,X_INTRODUCED_15,X_INTRODUCED_14],5):: defines_var(X_INTRODUCED_45);
constraint bool_clause([X_INTRODUCED_111],[X_INTRODUCED_110]);
constraint bool_clause([X_INTRODUCED_115],[X_INTRODUCED_112]);
constraint int_lin_eq([1,-1,-1,-1],[X_INTRODUCED_46,X_INTRODUCED_20,X_INTRODUCED_15,X_INTRODUCED_14],5):: defines_var(X_INTRODUCED_46);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_21,X_INTRODUCED_15],0);
constraint int_lin_eq([1,-1],[X_INTRODUCED_48,X_INTRODUCED_20],2):: defines_var(X_INTRODUCED_48);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_21,X_INTRODUCED_20],0);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_21,X_INTRODUCED_20],0);
constraint int_lin_eq([1,-1],[X_INTRODUCED_51,X_INTRODUCED_21],2):: defines_var(X_INTRODUCED_51);
constraint int_lin_eq([1,-1,-1,-1,-1],[cost,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_20,X_INTRODUCED_21],12):: defines_var(cost);
constraint int_eq_reif(X_INTRODUCED_14,0,X_INTRODUCED_79):: defines_var(X_INTRODUCED_79);
constraint int_ne_reif(X_INTRODUCED_41,3,X_INTRODUCED_80):: defines_var(X_INTRODUCED_80);
constraint int_eq_reif(X_INTRODUCED_14,1,X_INTRODUCED_81):: defines_var(X_INTRODUCED_81);
constraint int_le_reif(X_INTRODUCED_41,3,X_INTRODUCED_82):: defines_var(X_INTRODUCED_82);
constraint int_le_reif(2,X_INTRODUCED_41,X_INTRODUCED_83):: defines_var(X_INTRODUCED_83);
constraint array_bool_and([X_INTRODUCED_82,X_INTRODUCED_83],X_INTRODUCED_84):: defines_var(X_INTRODUCED_84);
constraint int_eq_reif(X_INTRODUCED_15,0,X_INTRODUCED_86):: defines_var(X_INTRODUCED_86);
constraint int_ne_reif(X_INTRODUCED_42,3,X_INTRODUCED_87):: defines_var(X_INTRODUCED_87);
constraint int_eq_reif(X_INTRODUCED_15,1,X_INTRODUCED_88):: defines_var(X_INTRODUCED_88);
constraint int_le_reif(X_INTRODUCED_42,3,X_INTRODUCED_89):: defines_var(X_INTRODUCED_89);
constraint int_le_reif(2,X_INTRODUCED_42,X_INTRODUCED_90):: defines_var(X_INTRODUCED_90);
constraint array_bool_and([X_INTRODUCED_89,X_INTRODUCED_90],X_INTRODUCED_91):: defines_var(X_INTRODUCED_91);
constraint int_eq_reif(X_INTRODUCED_20,0,X_INTRODUCED_103):: defines_var(X_INTRODUCED_103);
constraint int_ne_reif(X_INTRODUCED_45,3,X_INTRODUCED_104):: defines_var(X_INTRODUCED_104);
constraint int_eq_reif(X_INTRODUCED_20,1,X_INTRODUCED_105):: defines_var(X_INTRODUCED_105);
constraint int_le_reif(X_INTRODUCED_45,3,X_INTRODUCED_106):: defines_var(X_INTRODUCED_106);
constraint int_le_reif(2,X_INTRODUCED_45,X_INTRODUCED_107):: defines_var(X_INTRODUCED_107);
constraint array_bool_and([X_INTRODUCED_106,X_INTRODUCED_107],X_INTRODUCED_108):: defines_var(X_INTRODUCED_108);
constraint int_eq_reif(X_INTRODUCED_21,0,X_INTRODUCED_110):: defines_var(X_INTRODUCED_110);
constraint int_ne_reif(X_INTRODUCED_46,3,X_INTRODUCED_111):: defines_var(X_INTRODUCED_111);
constraint int_eq_reif(X_INTRODUCED_21,1,X_INTRODUCED_112):: defines_var(X_INTRODUCED_112);
constraint int_le_reif(X_INTRODUCED_46,3,X_INTRODUCED_113):: defines_var(X_INTRODUCED_113);
constraint int_le_reif(2,X_INTRODUCED_46,X_INTRODUCED_114):: defines_var(X_INTRODUCED_114);
constraint array_bool_and([X_INTRODUCED_113,X_INTRODUCED_114],X_INTRODUCED_115):: defines_var(X_INTRODUCED_115);
solve  maximize cost;
