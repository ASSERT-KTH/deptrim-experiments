var 1..2014: year:: output_var;
var 0..1: is_leap_year:: output_var;
var bool: X_INTRODUCED_0 ::var_is_introduced :: is_defined_var;
var -400..400: X_INTRODUCED_2 ::var_is_introduced ;
var bool: X_INTRODUCED_3 ::var_is_introduced :: is_defined_var;
var -100..100: X_INTRODUCED_5 ::var_is_introduced ;
var bool: X_INTRODUCED_6 ::var_is_introduced :: is_defined_var;
var -4..4: X_INTRODUCED_8 ::var_is_introduced ;
var bool: X_INTRODUCED_9 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_10 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_11 ::var_is_introduced :: is_defined_var;
constraint int_mod(year,400,X_INTRODUCED_2);
constraint int_mod(year,100,X_INTRODUCED_5);
constraint int_mod(year,4,X_INTRODUCED_8);
constraint bool_eq(X_INTRODUCED_0,X_INTRODUCED_11);
constraint int_eq_reif(is_leap_year,1,X_INTRODUCED_0):: defines_var(X_INTRODUCED_0);
constraint int_eq_reif(X_INTRODUCED_2,0,X_INTRODUCED_3):: defines_var(X_INTRODUCED_3);
constraint int_ne_reif(X_INTRODUCED_5,0,X_INTRODUCED_6):: defines_var(X_INTRODUCED_6);
constraint int_eq_reif(X_INTRODUCED_8,0,X_INTRODUCED_9):: defines_var(X_INTRODUCED_9);
constraint array_bool_and([X_INTRODUCED_6,X_INTRODUCED_9],X_INTRODUCED_10):: defines_var(X_INTRODUCED_10);
constraint array_bool_or([X_INTRODUCED_3,X_INTRODUCED_10],X_INTRODUCED_11):: defines_var(X_INTRODUCED_11);
solve  satisfy;
