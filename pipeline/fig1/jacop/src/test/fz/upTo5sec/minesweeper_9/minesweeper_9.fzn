var 0..1: X_INTRODUCED_1;
var 0..1: X_INTRODUCED_2;
var 0..1: X_INTRODUCED_3;
var 0..1: X_INTRODUCED_5;
var 0..1: X_INTRODUCED_6;
var 0..1: X_INTRODUCED_7;
var 0..1: X_INTRODUCED_9;
var 0..1: X_INTRODUCED_11;
var 0..1: X_INTRODUCED_13;
var 0..1: X_INTRODUCED_15;
var 0..1: X_INTRODUCED_17;
var 0..1: X_INTRODUCED_18;
var 0..1: X_INTRODUCED_19;
var 0..1: X_INTRODUCED_21;
var 0..1: X_INTRODUCED_22;
var 0..1: X_INTRODUCED_23;
var 0..1: X_INTRODUCED_25;
var 0..1: X_INTRODUCED_26;
var 0..1: X_INTRODUCED_27;
var 0..1: X_INTRODUCED_29;
var 0..1: X_INTRODUCED_31;
var 0..1: X_INTRODUCED_33;
var 0..1: X_INTRODUCED_35;
var 0..1: X_INTRODUCED_37;
var 0..1: X_INTRODUCED_38;
var 0..1: X_INTRODUCED_39;
var 0..1: X_INTRODUCED_40;
var 0..1: X_INTRODUCED_41;
var 0..1: X_INTRODUCED_42;
var 0..1: X_INTRODUCED_43;
var 0..1: X_INTRODUCED_45;
var 0..1: X_INTRODUCED_47;
var 0..1: X_INTRODUCED_49;
var 0..1: X_INTRODUCED_51;
var 0..1: X_INTRODUCED_53;
var 0..1: X_INTRODUCED_54;
var 0..1: X_INTRODUCED_55;
var 0..1: X_INTRODUCED_57;
var 0..1: X_INTRODUCED_58;
var 0..1: X_INTRODUCED_59;
var 0..1: X_INTRODUCED_61;
var 0..1: X_INTRODUCED_62;
var 0..1: X_INTRODUCED_63;
var 0..1: X_INTRODUCED_65;
var 0..1: X_INTRODUCED_67;
var 0..1: X_INTRODUCED_69;
var 0..1: X_INTRODUCED_71;
var 0..1: X_INTRODUCED_73;
var 0..1: X_INTRODUCED_74;
var 0..1: X_INTRODUCED_75;
var 0..1: X_INTRODUCED_77;
var 0..1: X_INTRODUCED_78;
var 0..1: X_INTRODUCED_79;
array [1..81] of var int: mines:: output_array([1..9,1..9]) = [0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,0,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,0,X_INTRODUCED_9,0,X_INTRODUCED_11,0,X_INTRODUCED_13,0,X_INTRODUCED_15,0,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,0,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,0,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,0,X_INTRODUCED_29,0,X_INTRODUCED_31,0,X_INTRODUCED_33,0,X_INTRODUCED_35,0,X_INTRODUCED_37,X_INTRODUCED_38,X_INTRODUCED_39,X_INTRODUCED_40,X_INTRODUCED_41,X_INTRODUCED_42,X_INTRODUCED_43,0,X_INTRODUCED_45,0,X_INTRODUCED_47,0,X_INTRODUCED_49,0,X_INTRODUCED_51,0,X_INTRODUCED_53,X_INTRODUCED_54,X_INTRODUCED_55,0,X_INTRODUCED_57,X_INTRODUCED_58,X_INTRODUCED_59,0,X_INTRODUCED_61,X_INTRODUCED_62,X_INTRODUCED_63,0,X_INTRODUCED_65,0,X_INTRODUCED_67,0,X_INTRODUCED_69,0,X_INTRODUCED_71,0,X_INTRODUCED_73,X_INTRODUCED_74,X_INTRODUCED_75,0,X_INTRODUCED_77,X_INTRODUCED_78,X_INTRODUCED_79,0];
array [1..81] of var int: X_INTRODUCED_113 ::var_is_introduced  = [0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,0,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,0,X_INTRODUCED_9,0,X_INTRODUCED_11,0,X_INTRODUCED_13,0,X_INTRODUCED_15,0,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,0,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,0,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,0,X_INTRODUCED_29,0,X_INTRODUCED_31,0,X_INTRODUCED_33,0,X_INTRODUCED_35,0,X_INTRODUCED_37,X_INTRODUCED_38,X_INTRODUCED_39,X_INTRODUCED_40,X_INTRODUCED_41,X_INTRODUCED_42,X_INTRODUCED_43,0,X_INTRODUCED_45,0,X_INTRODUCED_47,0,X_INTRODUCED_49,0,X_INTRODUCED_51,0,X_INTRODUCED_53,X_INTRODUCED_54,X_INTRODUCED_55,0,X_INTRODUCED_57,X_INTRODUCED_58,X_INTRODUCED_59,0,X_INTRODUCED_61,X_INTRODUCED_62,X_INTRODUCED_63,0,X_INTRODUCED_65,0,X_INTRODUCED_67,0,X_INTRODUCED_69,0,X_INTRODUCED_71,0,X_INTRODUCED_73,X_INTRODUCED_74,X_INTRODUCED_75,0,X_INTRODUCED_77,X_INTRODUCED_78,X_INTRODUCED_79,0];
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_1,X_INTRODUCED_9],-2);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1],[X_INTRODUCED_3,X_INTRODUCED_5,X_INTRODUCED_13],-2);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_7,X_INTRODUCED_17],-2);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1],[X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_9,X_INTRODUCED_11,X_INTRODUCED_18,X_INTRODUCED_19],-4);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1],[X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_11,X_INTRODUCED_13,X_INTRODUCED_21,X_INTRODUCED_22],-4);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1],[X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_13,X_INTRODUCED_15,X_INTRODUCED_22,X_INTRODUCED_23],-3);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1],[X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_15,X_INTRODUCED_17,X_INTRODUCED_25,X_INTRODUCED_26],-4);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1],[X_INTRODUCED_11,X_INTRODUCED_19,X_INTRODUCED_21,X_INTRODUCED_29],-4);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1],[X_INTRODUCED_15,X_INTRODUCED_23,X_INTRODUCED_25,X_INTRODUCED_33],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1],[X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_27,X_INTRODUCED_29,X_INTRODUCED_37,X_INTRODUCED_38],-4);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1,-1],[X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_29,X_INTRODUCED_31,X_INTRODUCED_38,X_INTRODUCED_39,X_INTRODUCED_40],-3);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1,-1],[X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_31,X_INTRODUCED_33,X_INTRODUCED_40,X_INTRODUCED_41,X_INTRODUCED_42],-3);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1],[X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_33,X_INTRODUCED_35,X_INTRODUCED_42,X_INTRODUCED_43],-4);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1],[X_INTRODUCED_27,X_INTRODUCED_37,X_INTRODUCED_45],-2);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1],[X_INTRODUCED_35,X_INTRODUCED_43,X_INTRODUCED_53],-2);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1],[X_INTRODUCED_37,X_INTRODUCED_38,X_INTRODUCED_45,X_INTRODUCED_47,X_INTRODUCED_54,X_INTRODUCED_55],-5);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1,-1],[X_INTRODUCED_38,X_INTRODUCED_39,X_INTRODUCED_40,X_INTRODUCED_47,X_INTRODUCED_49,X_INTRODUCED_57,X_INTRODUCED_58],-4);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1,-1],[X_INTRODUCED_40,X_INTRODUCED_41,X_INTRODUCED_42,X_INTRODUCED_49,X_INTRODUCED_51,X_INTRODUCED_58,X_INTRODUCED_59],-5);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1],[X_INTRODUCED_42,X_INTRODUCED_43,X_INTRODUCED_51,X_INTRODUCED_53,X_INTRODUCED_61,X_INTRODUCED_62],-4);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1],[X_INTRODUCED_47,X_INTRODUCED_55,X_INTRODUCED_57,X_INTRODUCED_65],-3);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1],[X_INTRODUCED_51,X_INTRODUCED_59,X_INTRODUCED_61,X_INTRODUCED_69],-3);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1],[X_INTRODUCED_54,X_INTRODUCED_55,X_INTRODUCED_63,X_INTRODUCED_65,X_INTRODUCED_73,X_INTRODUCED_74],-4);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1],[X_INTRODUCED_57,X_INTRODUCED_58,X_INTRODUCED_65,X_INTRODUCED_67,X_INTRODUCED_74,X_INTRODUCED_75],-3);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1],[X_INTRODUCED_58,X_INTRODUCED_59,X_INTRODUCED_67,X_INTRODUCED_69,X_INTRODUCED_77,X_INTRODUCED_78],-5);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1],[X_INTRODUCED_61,X_INTRODUCED_62,X_INTRODUCED_69,X_INTRODUCED_71,X_INTRODUCED_78,X_INTRODUCED_79],-6);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_63,X_INTRODUCED_73],-2);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1],[X_INTRODUCED_67,X_INTRODUCED_75,X_INTRODUCED_77],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_71,X_INTRODUCED_79],-2);
solve :: int_search(X_INTRODUCED_113,first_fail,indomain_min,complete) satisfy;
