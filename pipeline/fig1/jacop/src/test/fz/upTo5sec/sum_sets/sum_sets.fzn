array [1..11] of int: X_INTRODUCED_31 = [1,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10];
var set of 1..10: s:: output_var;
var 0..55: s_total:: output_var:: is_defined_var;
var 0..1: X_INTRODUCED_1 ::var_is_introduced ;
var 0..1: X_INTRODUCED_2 ::var_is_introduced ;
var 0..1: X_INTRODUCED_3 ::var_is_introduced ;
var 0..1: X_INTRODUCED_4 ::var_is_introduced ;
var 0..1: X_INTRODUCED_5 ::var_is_introduced ;
var 0..1: X_INTRODUCED_6 ::var_is_introduced ;
var 0..1: X_INTRODUCED_7 ::var_is_introduced ;
var 0..1: X_INTRODUCED_8 ::var_is_introduced ;
var 0..1: X_INTRODUCED_9 ::var_is_introduced ;
var 0..1: X_INTRODUCED_10 ::var_is_introduced ;
var bool: X_INTRODUCED_32 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_33 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_34 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_35 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_36 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_37 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_38 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_39 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_40 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_41 ::var_is_introduced :: is_defined_var;
array [1..11] of var int: X_INTRODUCED_30 ::var_is_introduced  = [s_total,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10];
constraint int_lin_eq(X_INTRODUCED_31,X_INTRODUCED_30,0):: defines_var(s_total);
constraint int_eq_reif(X_INTRODUCED_1,1,X_INTRODUCED_32):: defines_var(X_INTRODUCED_32);
constraint int_eq_reif(X_INTRODUCED_2,1,X_INTRODUCED_33):: defines_var(X_INTRODUCED_33);
constraint int_eq_reif(X_INTRODUCED_3,1,X_INTRODUCED_34):: defines_var(X_INTRODUCED_34);
constraint int_eq_reif(X_INTRODUCED_4,1,X_INTRODUCED_35):: defines_var(X_INTRODUCED_35);
constraint int_eq_reif(X_INTRODUCED_5,1,X_INTRODUCED_36):: defines_var(X_INTRODUCED_36);
constraint int_eq_reif(X_INTRODUCED_6,1,X_INTRODUCED_37):: defines_var(X_INTRODUCED_37);
constraint int_eq_reif(X_INTRODUCED_7,1,X_INTRODUCED_38):: defines_var(X_INTRODUCED_38);
constraint int_eq_reif(X_INTRODUCED_8,1,X_INTRODUCED_39):: defines_var(X_INTRODUCED_39);
constraint int_eq_reif(X_INTRODUCED_9,1,X_INTRODUCED_40):: defines_var(X_INTRODUCED_40);
constraint int_eq_reif(X_INTRODUCED_10,1,X_INTRODUCED_41):: defines_var(X_INTRODUCED_41);
constraint set_in_reif(1,s,X_INTRODUCED_32):: defines_var(X_INTRODUCED_32);
constraint set_in_reif(2,s,X_INTRODUCED_33):: defines_var(X_INTRODUCED_33);
constraint set_in_reif(3,s,X_INTRODUCED_34):: defines_var(X_INTRODUCED_34);
constraint set_in_reif(4,s,X_INTRODUCED_35):: defines_var(X_INTRODUCED_35);
constraint set_in_reif(5,s,X_INTRODUCED_36):: defines_var(X_INTRODUCED_36);
constraint set_in_reif(6,s,X_INTRODUCED_37):: defines_var(X_INTRODUCED_37);
constraint set_in_reif(7,s,X_INTRODUCED_38):: defines_var(X_INTRODUCED_38);
constraint set_in_reif(8,s,X_INTRODUCED_39):: defines_var(X_INTRODUCED_39);
constraint set_in_reif(9,s,X_INTRODUCED_40):: defines_var(X_INTRODUCED_40);
constraint set_in_reif(10,s,X_INTRODUCED_41):: defines_var(X_INTRODUCED_41);
solve  satisfy;
