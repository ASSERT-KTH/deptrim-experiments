predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_22 = [1,-1];
array [1..10] of int: X_INTRODUCED_34 = [1,2,1,2,1,2,1,1,1,1];
array [1..10] of int: X_INTRODUCED_35 = [2,1,5,4,1,4,5,3,3,1];
array [1..16] of int: X_INTRODUCED_37 = [1,1,1,2,2,2,3,1,3,2,2,3,2,3,2,2];
array [1..16] of int: X_INTRODUCED_38 = [2,5,1,3,4,1,2,1,4,5,3,4,3,3,1,2];
array [1..10] of int: X_INTRODUCED_40 = [3,3,3,3,2,3,3,1,3,1];
array [1..10] of int: X_INTRODUCED_41 = [2,5,1,3,1,3,4,3,1,2];
var 0..56: X_INTRODUCED_0;
var 0..56: X_INTRODUCED_1;
var 0..56: X_INTRODUCED_2;
var 0..56: X_INTRODUCED_3;
var 0..56: X_INTRODUCED_4;
var 0..56: X_INTRODUCED_5;
var 0..56: X_INTRODUCED_6;
var 0..56: X_INTRODUCED_7;
var 0..56: X_INTRODUCED_8;
var 0..56: X_INTRODUCED_9;
var 0..56: X_INTRODUCED_10;
var 0..56: X_INTRODUCED_11;
var 0..56: X_INTRODUCED_12;
var 0..56: X_INTRODUCED_13;
var 0..56: X_INTRODUCED_14;
var 0..56: X_INTRODUCED_15;
var 0..56: X_INTRODUCED_16;
var 0..56: X_INTRODUCED_17;
var 0..56: X_INTRODUCED_18;
var 0..56: X_INTRODUCED_19;
var 0..57: objective:: output_var;
array [1..20] of var int: s:: output_array([1..20]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19];
array [1..10] of var int: X_INTRODUCED_36 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_3,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_16,X_INTRODUCED_18];
array [1..16] of var int: X_INTRODUCED_39 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_16,X_INTRODUCED_18,X_INTRODUCED_19];
array [1..10] of var int: X_INTRODUCED_42 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_9,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_16,X_INTRODUCED_18,X_INTRODUCED_19];
array [1..21] of var int: X_INTRODUCED_53 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,objective];
constraint int_lin_le(X_INTRODUCED_22,[X_INTRODUCED_1,X_INTRODUCED_19],-5);
constraint int_lin_le(X_INTRODUCED_22,[X_INTRODUCED_2,X_INTRODUCED_9],-3);
constraint int_lin_le(X_INTRODUCED_22,[X_INTRODUCED_2,X_INTRODUCED_12],-3);
constraint int_lin_le(X_INTRODUCED_22,[X_INTRODUCED_5,X_INTRODUCED_12],-5);
constraint int_lin_le(X_INTRODUCED_22,[X_INTRODUCED_5,X_INTRODUCED_16],-5);
constraint int_lin_le(X_INTRODUCED_22,[X_INTRODUCED_6,X_INTRODUCED_10],-4);
constraint int_lin_le(X_INTRODUCED_22,[X_INTRODUCED_7,X_INTRODUCED_10],-1);
constraint int_lin_le(X_INTRODUCED_22,[X_INTRODUCED_7,X_INTRODUCED_19],-1);
constraint int_lin_le(X_INTRODUCED_22,[X_INTRODUCED_9,X_INTRODUCED_19],-1);
constraint int_lin_le(X_INTRODUCED_22,[X_INTRODUCED_10,X_INTRODUCED_12],-4);
constraint int_lin_le(X_INTRODUCED_22,[X_INTRODUCED_10,X_INTRODUCED_14],-4);
constraint int_lin_le(X_INTRODUCED_22,[X_INTRODUCED_10,X_INTRODUCED_17],-4);
constraint int_lin_le(X_INTRODUCED_22,[X_INTRODUCED_11,X_INTRODUCED_13],-5);
constraint int_lin_le(X_INTRODUCED_22,[X_INTRODUCED_12,X_INTRODUCED_16],-3);
constraint int_lin_le(X_INTRODUCED_22,[X_INTRODUCED_15,X_INTRODUCED_16],-4);
constraint jacop_cumulative(X_INTRODUCED_36,X_INTRODUCED_35,X_INTRODUCED_34,4);
constraint jacop_cumulative(X_INTRODUCED_39,X_INTRODUCED_38,X_INTRODUCED_37,6);
constraint jacop_cumulative(X_INTRODUCED_42,X_INTRODUCED_41,X_INTRODUCED_40,6);
constraint int_lin_le(X_INTRODUCED_22,[X_INTRODUCED_0,objective],-2);
constraint int_lin_le(X_INTRODUCED_22,[X_INTRODUCED_3,objective],-1);
constraint int_lin_le(X_INTRODUCED_22,[X_INTRODUCED_4,objective],-3);
constraint int_lin_le(X_INTRODUCED_22,[X_INTRODUCED_8,objective],-2);
constraint int_lin_le(X_INTRODUCED_22,[X_INTRODUCED_13,objective],-4);
constraint int_lin_le(X_INTRODUCED_22,[X_INTRODUCED_14,objective],-3);
constraint int_lin_le(X_INTRODUCED_22,[X_INTRODUCED_16,objective],-3);
constraint int_lin_le(X_INTRODUCED_22,[X_INTRODUCED_17,objective],-1);
constraint int_lin_le(X_INTRODUCED_22,[X_INTRODUCED_18,objective],-1);
constraint int_lin_le(X_INTRODUCED_22,[X_INTRODUCED_19,objective],-2);
solve :: int_search(X_INTRODUCED_53,smallest,indomain_min,complete) minimize objective;
