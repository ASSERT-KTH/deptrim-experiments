array [1..2] of int: X_INTRODUCED_23 = [1,1];
array [1..3] of int: X_INTRODUCED_25 = [1,1,1];
array [1..5] of int: X_INTRODUCED_27 = [1,-1,-1,-1,-1];
array [1..4] of int: X_INTRODUCED_32 = [1,1,1,1];
array [1..16] of int: X_INTRODUCED_39 = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];
var 0..1: X_INTRODUCED_0;
var 0..1: X_INTRODUCED_1;
var 0..1: X_INTRODUCED_2;
var 0..1: X_INTRODUCED_3;
var 0..1: X_INTRODUCED_4;
var 0..1: X_INTRODUCED_5;
var 0..1: X_INTRODUCED_6;
var 0..1: X_INTRODUCED_7;
var 0..1: X_INTRODUCED_8;
var 0..1: X_INTRODUCED_9;
var 0..1: X_INTRODUCED_10;
var 0..1: X_INTRODUCED_11;
var 0..1: X_INTRODUCED_12;
var 0..1: X_INTRODUCED_13;
var 0..1: X_INTRODUCED_14;
var 0..1: X_INTRODUCED_15;
var {0,2,3,4}: X_INTRODUCED_16:: is_defined_var;
var 0..4: X_INTRODUCED_17:: is_defined_var;
var 0..4: X_INTRODUCED_18:: is_defined_var;
var 0..4: X_INTRODUCED_19:: is_defined_var;
array [1..16] of var int: x:: output_array([1..4,1..4]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15];
array [1..4] of var int: sum_rows:: output_array([1..4]) = [X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19];
array [1..20] of var int: X_INTRODUCED_21 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19];
array [1..16] of var int: X_INTRODUCED_38 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15];
constraint int_lin_ne(X_INTRODUCED_23,[X_INTRODUCED_16,X_INTRODUCED_17],2);
constraint int_lin_ne(X_INTRODUCED_25,[X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18],3);
constraint int_lin_eq(X_INTRODUCED_27,[X_INTRODUCED_16,X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3],0):: defines_var(X_INTRODUCED_16);
constraint int_lin_eq(X_INTRODUCED_27,[X_INTRODUCED_17,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7],0):: defines_var(X_INTRODUCED_17);
constraint int_lin_eq(X_INTRODUCED_27,[X_INTRODUCED_18,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11],0):: defines_var(X_INTRODUCED_18);
constraint int_lin_eq(X_INTRODUCED_27,[X_INTRODUCED_19,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15],0):: defines_var(X_INTRODUCED_19);
constraint int_lin_eq(X_INTRODUCED_32,[X_INTRODUCED_0,X_INTRODUCED_4,X_INTRODUCED_8,X_INTRODUCED_12],1);
constraint int_lin_eq(X_INTRODUCED_32,[X_INTRODUCED_1,X_INTRODUCED_5,X_INTRODUCED_9,X_INTRODUCED_13],1);
constraint int_lin_eq(X_INTRODUCED_32,[X_INTRODUCED_2,X_INTRODUCED_6,X_INTRODUCED_10,X_INTRODUCED_14],1);
constraint int_lin_eq(X_INTRODUCED_32,[X_INTRODUCED_3,X_INTRODUCED_7,X_INTRODUCED_11,X_INTRODUCED_15],1);
constraint int_lin_eq(X_INTRODUCED_39,X_INTRODUCED_38,4);
solve :: int_search(X_INTRODUCED_21,first_fail,indomain_min,complete) satisfy;
