array [1..16] of int: X_INTRODUCED_43 = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];
var 0..1: X_INTRODUCED_0;
var 0..1: X_INTRODUCED_1;
var 0..1: X_INTRODUCED_2;
var 0..1: X_INTRODUCED_3;
var 0..1: X_INTRODUCED_4;
var 0..1: X_INTRODUCED_5;
var 0..1: X_INTRODUCED_6;
var 0..1: X_INTRODUCED_7;
var 0..1: X_INTRODUCED_8;
var 0..1: X_INTRODUCED_9;
var 0..1: X_INTRODUCED_10;
var 0..1: X_INTRODUCED_11;
var 0..1: X_INTRODUCED_12;
var 0..1: X_INTRODUCED_13;
var 0..1: X_INTRODUCED_14;
var 0..1: X_INTRODUCED_15;
var 0..4: X_INTRODUCED_16 ::var_is_introduced :: is_defined_var;
var 0..4: X_INTRODUCED_19 ::var_is_introduced :: is_defined_var;
var 0..4: X_INTRODUCED_22 ::var_is_introduced :: is_defined_var;
var 0..4: X_INTRODUCED_25 ::var_is_introduced :: is_defined_var;
var 0..4: X_INTRODUCED_28 ::var_is_introduced :: is_defined_var;
var 0..4: X_INTRODUCED_31 ::var_is_introduced :: is_defined_var;
var 0..4: X_INTRODUCED_34 ::var_is_introduced :: is_defined_var;
var 0..4: X_INTRODUCED_37 ::var_is_introduced :: is_defined_var;
array [1..16] of var int: place:: output_array([1..4,1..4]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15];
array [1..16] of var int: X_INTRODUCED_42 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15];
constraint int_mod(X_INTRODUCED_16,2,0);
constraint int_mod(X_INTRODUCED_19,2,0);
constraint int_mod(X_INTRODUCED_22,2,0);
constraint int_mod(X_INTRODUCED_25,2,0);
constraint int_mod(X_INTRODUCED_28,2,0);
constraint int_mod(X_INTRODUCED_31,2,0);
constraint int_mod(X_INTRODUCED_34,2,0);
constraint int_mod(X_INTRODUCED_37,2,0);
constraint int_lin_eq(X_INTRODUCED_43,X_INTRODUCED_42,10);
constraint int_lin_eq([1,1,1,1,-1],[X_INTRODUCED_0,X_INTRODUCED_4,X_INTRODUCED_8,X_INTRODUCED_12,X_INTRODUCED_16],0):: defines_var(X_INTRODUCED_16);
constraint int_lin_eq([1,1,1,1,-1],[X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_19],0):: defines_var(X_INTRODUCED_19);
constraint int_lin_eq([1,1,1,1,-1],[X_INTRODUCED_1,X_INTRODUCED_5,X_INTRODUCED_9,X_INTRODUCED_13,X_INTRODUCED_22],0):: defines_var(X_INTRODUCED_22);
constraint int_lin_eq([1,1,1,1,-1],[X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_25],0):: defines_var(X_INTRODUCED_25);
constraint int_lin_eq([1,1,1,1,-1],[X_INTRODUCED_2,X_INTRODUCED_6,X_INTRODUCED_10,X_INTRODUCED_14,X_INTRODUCED_28],0):: defines_var(X_INTRODUCED_28);
constraint int_lin_eq([1,1,1,1,-1],[X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_31],0):: defines_var(X_INTRODUCED_31);
constraint int_lin_eq([1,1,1,1,-1],[X_INTRODUCED_3,X_INTRODUCED_7,X_INTRODUCED_11,X_INTRODUCED_15,X_INTRODUCED_34],0):: defines_var(X_INTRODUCED_34);
constraint int_lin_eq([1,1,1,1,-1],[X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_37],0):: defines_var(X_INTRODUCED_37);
solve  satisfy;
