predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_32 = [1,-1];
array [1..21] of int: X_INTRODUCED_64 = [9,7,3,1,4,4,1,3,1,6,4,1,6,4,7,6,8,3,1,7,7];
array [1..21] of int: X_INTRODUCED_65 = [3,6,9,2,1,6,3,9,10,3,10,6,1,8,7,3,5,10,1,5,6];
array [1..23] of int: X_INTRODUCED_67 = [3,4,3,9,3,1,2,4,2,3,5,5,5,1,5,6,5,9,1,2,3,1,3];
array [1..23] of int: X_INTRODUCED_68 = [3,9,7,2,1,6,10,3,9,10,10,6,6,8,4,7,3,3,10,1,10,5,6];
array [1..20] of int: X_INTRODUCED_70 = [8,7,4,6,10,1,5,10,4,1,8,9,1,9,4,10,5,1,8,10];
array [1..20] of int: X_INTRODUCED_71 = [10,9,2,1,4,9,3,10,6,6,1,8,7,3,5,3,10,6,10,6];
array [1..27] of int: X_INTRODUCED_73 = [1,9,6,7,10,10,1,7,10,7,9,5,4,6,8,8,2,5,7,7,6,8,4,3,1,9,2];
array [1..27] of int: X_INTRODUCED_74 = [3,10,6,9,7,2,1,6,10,4,9,10,3,10,6,6,1,8,4,3,5,3,10,6,1,10,5];
var 0..173: X_INTRODUCED_0;
var 0..173: X_INTRODUCED_1;
var 0..173: X_INTRODUCED_2;
var 0..173: X_INTRODUCED_3;
var 0..173: X_INTRODUCED_4;
var 0..173: X_INTRODUCED_5;
var 0..173: X_INTRODUCED_6;
var 0..173: X_INTRODUCED_7;
var 0..173: X_INTRODUCED_8;
var 0..173: X_INTRODUCED_9;
var 0..173: X_INTRODUCED_10;
var 0..173: X_INTRODUCED_11;
var 0..173: X_INTRODUCED_12;
var 0..173: X_INTRODUCED_13;
var 0..173: X_INTRODUCED_14;
var 0..173: X_INTRODUCED_15;
var 0..173: X_INTRODUCED_16;
var 0..173: X_INTRODUCED_17;
var 0..173: X_INTRODUCED_18;
var 0..173: X_INTRODUCED_19;
var 0..173: X_INTRODUCED_20;
var 0..173: X_INTRODUCED_21;
var 0..173: X_INTRODUCED_22;
var 0..173: X_INTRODUCED_23;
var 0..173: X_INTRODUCED_24;
var 0..173: X_INTRODUCED_25;
var 0..173: X_INTRODUCED_26;
var 0..173: X_INTRODUCED_27;
var 0..173: X_INTRODUCED_28;
var 0..173: X_INTRODUCED_29;
var 0..174: objective:: output_var;
var bool: X_INTRODUCED_59 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_60 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_61 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_62 ::var_is_introduced :: is_defined_var;
array [1..30] of var int: s:: output_array([1..30]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29];
array [1..21] of var int: X_INTRODUCED_66 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_24,X_INTRODUCED_26,X_INTRODUCED_28,X_INTRODUCED_29];
array [1..23] of var int: X_INTRODUCED_69 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29];
array [1..20] of var int: X_INTRODUCED_72 ::var_is_introduced  = [X_INTRODUCED_1,X_INTRODUCED_3,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_9,X_INTRODUCED_11,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_27,X_INTRODUCED_29];
array [1..27] of var int: X_INTRODUCED_75 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28];
array [1..31] of var int: X_INTRODUCED_79 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29,objective];
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_0,X_INTRODUCED_8],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_0,X_INTRODUCED_10],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_0,X_INTRODUCED_19],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_1,X_INTRODUCED_8],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_1,X_INTRODUCED_24],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_1,X_INTRODUCED_25],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_2,X_INTRODUCED_3],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_2,X_INTRODUCED_4],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_2,X_INTRODUCED_9],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_3,X_INTRODUCED_6],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_3,X_INTRODUCED_14],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_3,X_INTRODUCED_27],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_4,X_INTRODUCED_5],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_4,X_INTRODUCED_6],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_4,X_INTRODUCED_7],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_5,X_INTRODUCED_12],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_5,X_INTRODUCED_16],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_5,X_INTRODUCED_17],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_6,X_INTRODUCED_15],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_6,X_INTRODUCED_18],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_6,X_INTRODUCED_19],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_7,X_INTRODUCED_8],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_7,X_INTRODUCED_10],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_7,X_INTRODUCED_19],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_8,X_INTRODUCED_11],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_8,X_INTRODUCED_14],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_8,X_INTRODUCED_17],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_9,X_INTRODUCED_10],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_9,X_INTRODUCED_12],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_9,X_INTRODUCED_14],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_10,X_INTRODUCED_16],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_10,X_INTRODUCED_18],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_10,X_INTRODUCED_20],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_11,X_INTRODUCED_12],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_11,X_INTRODUCED_16],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_11,X_INTRODUCED_21],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_12,X_INTRODUCED_13],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_13,X_INTRODUCED_15],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_13,X_INTRODUCED_22],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_13,X_INTRODUCED_27],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_14,X_INTRODUCED_23],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_15,X_INTRODUCED_28],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_16,X_INTRODUCED_26],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_17,X_INTRODUCED_21],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_17,X_INTRODUCED_27],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_17,X_INTRODUCED_29],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_18,X_INTRODUCED_22],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_18,X_INTRODUCED_24],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_18,X_INTRODUCED_25],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_19,X_INTRODUCED_20],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_19,X_INTRODUCED_22],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_19,X_INTRODUCED_25],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_20,X_INTRODUCED_21],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_20,X_INTRODUCED_23],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_20,X_INTRODUCED_24],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_21,X_INTRODUCED_28],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_22,X_INTRODUCED_23],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_22,X_INTRODUCED_26],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_23,X_INTRODUCED_29],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_24,X_INTRODUCED_28],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_25,X_INTRODUCED_26],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_26,X_INTRODUCED_29],-1);
constraint array_bool_or([X_INTRODUCED_59,X_INTRODUCED_60],true);
constraint array_bool_or([X_INTRODUCED_61,X_INTRODUCED_62],true);
constraint jacop_cumulative(X_INTRODUCED_66,X_INTRODUCED_65,X_INTRODUCED_64,17);
constraint jacop_cumulative(X_INTRODUCED_69,X_INTRODUCED_68,X_INTRODUCED_67,14);
constraint jacop_cumulative(X_INTRODUCED_72,X_INTRODUCED_71,X_INTRODUCED_70,20);
constraint jacop_cumulative(X_INTRODUCED_75,X_INTRODUCED_74,X_INTRODUCED_73,22);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_27,objective],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_28,objective],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_29,objective],-6);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_20,X_INTRODUCED_5],-7,X_INTRODUCED_59):: defines_var(X_INTRODUCED_59);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_5,X_INTRODUCED_20],-2,X_INTRODUCED_60):: defines_var(X_INTRODUCED_60);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_23,X_INTRODUCED_5],-3,X_INTRODUCED_61):: defines_var(X_INTRODUCED_61);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_5,X_INTRODUCED_23],-2,X_INTRODUCED_62):: defines_var(X_INTRODUCED_62);
solve :: int_search(X_INTRODUCED_79,smallest,indomain_min,complete) minimize objective;
