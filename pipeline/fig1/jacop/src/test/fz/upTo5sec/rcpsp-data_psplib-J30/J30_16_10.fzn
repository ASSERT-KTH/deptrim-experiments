predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_32 = [1,-1];
array [1..30] of int: X_INTRODUCED_59 = [8,5,8,5,1,3,1,4,8,6,2,6,2,8,6,10,6,8,6,6,2,3,10,9,2,1,8,6,10,4];
array [1..30] of int: X_INTRODUCED_60 = [8,6,4,4,10,3,1,5,2,3,7,3,4,5,1,4,8,5,7,6,7,6,5,6,7,3,10,8,9,2];
array [1..30] of int: X_INTRODUCED_62 = [7,3,4,5,3,10,7,8,8,2,8,3,10,7,5,5,6,1,10,6,6,9,6,4,6,8,7,7,4,5];
array [1..30] of int: X_INTRODUCED_64 = [5,9,8,3,2,6,10,2,2,5,5,10,9,4,5,3,4,5,7,10,5,9,8,1,9,8,7,3,6,8];
array [1..30] of int: X_INTRODUCED_66 = [2,6,8,4,6,8,5,10,4,9,2,5,4,7,4,5,2,2,3,3,2,3,5,6,8,6,6,3,7,3];
var 0..158: X_INTRODUCED_0;
var 0..158: X_INTRODUCED_1;
var 0..158: X_INTRODUCED_2;
var 0..158: X_INTRODUCED_3;
var 0..158: X_INTRODUCED_4;
var 0..158: X_INTRODUCED_5;
var 0..158: X_INTRODUCED_6;
var 0..158: X_INTRODUCED_7;
var 0..158: X_INTRODUCED_8;
var 0..158: X_INTRODUCED_9;
var 0..158: X_INTRODUCED_10;
var 0..158: X_INTRODUCED_11;
var 0..158: X_INTRODUCED_12;
var 0..158: X_INTRODUCED_13;
var 0..158: X_INTRODUCED_14;
var 0..158: X_INTRODUCED_15;
var 0..158: X_INTRODUCED_16;
var 0..158: X_INTRODUCED_17;
var 0..158: X_INTRODUCED_18;
var 0..158: X_INTRODUCED_19;
var 0..158: X_INTRODUCED_20;
var 0..158: X_INTRODUCED_21;
var 0..158: X_INTRODUCED_22;
var 0..158: X_INTRODUCED_23;
var 0..158: X_INTRODUCED_24;
var 0..158: X_INTRODUCED_25;
var 0..158: X_INTRODUCED_26;
var 0..158: X_INTRODUCED_27;
var 0..158: X_INTRODUCED_28;
var 0..158: X_INTRODUCED_29;
var 0..159: objective:: output_var;
array [1..30] of var int: s:: output_array([1..30]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29];
array [1..31] of var int: X_INTRODUCED_71 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29,objective];
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_0,X_INTRODUCED_11],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_0,X_INTRODUCED_26],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_1,X_INTRODUCED_4],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_1,X_INTRODUCED_6],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_1,X_INTRODUCED_7],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_2,X_INTRODUCED_3],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_2,X_INTRODUCED_25],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_3,X_INTRODUCED_14],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_4,X_INTRODUCED_5],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_4,X_INTRODUCED_19],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_4,X_INTRODUCED_25],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_5,X_INTRODUCED_8],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_5,X_INTRODUCED_21],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_6,X_INTRODUCED_9],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_6,X_INTRODUCED_20],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_6,X_INTRODUCED_21],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_7,X_INTRODUCED_13],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_8,X_INTRODUCED_16],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_9,X_INTRODUCED_10],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_9,X_INTRODUCED_12],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_9,X_INTRODUCED_14],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_10,X_INTRODUCED_29],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_11,X_INTRODUCED_28],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_12,X_INTRODUCED_15],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_12,X_INTRODUCED_22],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_13,X_INTRODUCED_17],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_14,X_INTRODUCED_26],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_15,X_INTRODUCED_17],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_15,X_INTRODUCED_24],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_16,X_INTRODUCED_18],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_17,X_INTRODUCED_23],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_18,X_INTRODUCED_23],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_19,X_INTRODUCED_22],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_20,X_INTRODUCED_23],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_20,X_INTRODUCED_24],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_20,X_INTRODUCED_27],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_21,X_INTRODUCED_27],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_22,X_INTRODUCED_28],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_23,X_INTRODUCED_28],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_24,X_INTRODUCED_29],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_25,X_INTRODUCED_26],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_26,X_INTRODUCED_27],-10);
constraint jacop_cumulative(s,X_INTRODUCED_60,X_INTRODUCED_59,37);
constraint jacop_cumulative(s,X_INTRODUCED_60,X_INTRODUCED_62,43);
constraint jacop_cumulative(s,X_INTRODUCED_60,X_INTRODUCED_64,44);
constraint jacop_cumulative(s,X_INTRODUCED_60,X_INTRODUCED_66,33);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_27,objective],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_28,objective],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_29,objective],-2);
solve :: int_search(X_INTRODUCED_71,smallest,indomain_min,complete) minimize objective;
