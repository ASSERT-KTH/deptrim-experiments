predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_32 = [1,-1];
array [1..27] of int: X_INTRODUCED_70 = [10,7,3,3,9,1,4,5,8,10,5,6,8,3,8,9,6,2,8,5,8,8,6,6,2,7,7];
array [1..27] of int: X_INTRODUCED_71 = [4,2,3,1,3,2,4,4,9,6,7,10,3,9,7,5,5,6,7,9,4,3,7,3,4,6,10];
array [1..21] of int: X_INTRODUCED_73 = [1,6,5,3,5,5,1,7,9,10,10,1,7,3,7,9,5,10,4,1,5];
array [1..21] of int: X_INTRODUCED_74 = [3,1,3,4,4,9,6,2,10,9,7,5,5,7,9,9,3,7,4,6,10];
array [1..24] of int: X_INTRODUCED_76 = [6,10,1,6,9,3,7,10,3,5,5,10,4,3,1,8,5,2,3,7,6,1,9,1];
array [1..24] of int: X_INTRODUCED_77 = [4,2,1,3,2,4,9,6,2,10,9,7,2,6,7,9,9,4,3,7,3,4,6,10];
array [1..19] of int: X_INTRODUCED_79 = [7,8,5,10,1,4,5,1,6,3,5,10,3,1,6,4,9,8,9];
array [1..19] of int: X_INTRODUCED_80 = [4,1,3,2,4,6,10,9,5,5,7,9,9,4,3,7,3,6,10];
var 0..155: X_INTRODUCED_0;
var 0..155: X_INTRODUCED_1;
var 0..155: X_INTRODUCED_2;
var 0..155: X_INTRODUCED_3;
var 0..155: X_INTRODUCED_4;
var 0..155: X_INTRODUCED_5;
var 0..155: X_INTRODUCED_6;
var 0..155: X_INTRODUCED_7;
var 0..155: X_INTRODUCED_8;
var 0..155: X_INTRODUCED_9;
var 0..155: X_INTRODUCED_10;
var 0..155: X_INTRODUCED_11;
var 0..155: X_INTRODUCED_12;
var 0..155: X_INTRODUCED_13;
var 0..155: X_INTRODUCED_14;
var 0..155: X_INTRODUCED_15;
var 0..155: X_INTRODUCED_16;
var 0..155: X_INTRODUCED_17;
var 0..155: X_INTRODUCED_18;
var 0..155: X_INTRODUCED_19;
var 0..155: X_INTRODUCED_20;
var 0..155: X_INTRODUCED_21;
var 0..155: X_INTRODUCED_22;
var 0..155: X_INTRODUCED_23;
var 0..155: X_INTRODUCED_24;
var 0..155: X_INTRODUCED_25;
var 0..155: X_INTRODUCED_26;
var 0..155: X_INTRODUCED_27;
var 0..155: X_INTRODUCED_28;
var 0..155: X_INTRODUCED_29;
var 0..156: objective:: output_var;
var bool: X_INTRODUCED_59 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_60 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_61 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_62 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_64 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_65 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_66 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_67 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_68 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_69 ::var_is_introduced :: is_defined_var;
array [1..30] of var int: s:: output_array([1..30]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29];
array [1..27] of var int: X_INTRODUCED_72 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29];
array [1..21] of var int: X_INTRODUCED_75 ::var_is_introduced  = [X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29];
array [1..24] of var int: X_INTRODUCED_78 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29];
array [1..19] of var int: X_INTRODUCED_81 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_7,X_INTRODUCED_9,X_INTRODUCED_12,X_INTRODUCED_14,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_28,X_INTRODUCED_29];
array [1..31] of var int: X_INTRODUCED_84 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29,objective];
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_0,X_INTRODUCED_3],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_0,X_INTRODUCED_4],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_0,X_INTRODUCED_7],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_1,X_INTRODUCED_18],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_1,X_INTRODUCED_19],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_1,X_INTRODUCED_21],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_2,X_INTRODUCED_5],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_2,X_INTRODUCED_8],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_2,X_INTRODUCED_10],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_3,X_INTRODUCED_6],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_3,X_INTRODUCED_10],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_3,X_INTRODUCED_19],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_4,X_INTRODUCED_5],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_4,X_INTRODUCED_9],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_4,X_INTRODUCED_16],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_5,X_INTRODUCED_12],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_5,X_INTRODUCED_15],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_5,X_INTRODUCED_28],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_6,X_INTRODUCED_11],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_6,X_INTRODUCED_13],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_6,X_INTRODUCED_20],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_7,X_INTRODUCED_8],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_7,X_INTRODUCED_13],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_7,X_INTRODUCED_18],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_8,X_INTRODUCED_9],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_8,X_INTRODUCED_12],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_8,X_INTRODUCED_14],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_9,X_INTRODUCED_17],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_9,X_INTRODUCED_24],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_9,X_INTRODUCED_29],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_10,X_INTRODUCED_15],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_10,X_INTRODUCED_20],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_11,X_INTRODUCED_12],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_11,X_INTRODUCED_21],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_12,X_INTRODUCED_17],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_12,X_INTRODUCED_23],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_12,X_INTRODUCED_29],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_13,X_INTRODUCED_14],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_13,X_INTRODUCED_15],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_14,X_INTRODUCED_17],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_14,X_INTRODUCED_22],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_14,X_INTRODUCED_28],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_15,X_INTRODUCED_26],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_16,X_INTRODUCED_19],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_16,X_INTRODUCED_20],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_16,X_INTRODUCED_21],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_17,X_INTRODUCED_26],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_18,X_INTRODUCED_22],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_18,X_INTRODUCED_28],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_19,X_INTRODUCED_23],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_19,X_INTRODUCED_24],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_19,X_INTRODUCED_25],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_20,X_INTRODUCED_25],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_21,X_INTRODUCED_22],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_22,X_INTRODUCED_23],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_22,X_INTRODUCED_24],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_22,X_INTRODUCED_25],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_23,X_INTRODUCED_27],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_24,X_INTRODUCED_26],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_25,X_INTRODUCED_27],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_25,X_INTRODUCED_29],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_26,X_INTRODUCED_27],-3);
constraint array_bool_or([X_INTRODUCED_59,X_INTRODUCED_60],true);
constraint array_bool_or([X_INTRODUCED_61,X_INTRODUCED_62],true);
constraint array_bool_or([X_INTRODUCED_64,X_INTRODUCED_65],true);
constraint array_bool_or([X_INTRODUCED_66,X_INTRODUCED_67],true);
constraint array_bool_or([X_INTRODUCED_68,X_INTRODUCED_69],true);
constraint jacop_cumulative(X_INTRODUCED_72,X_INTRODUCED_71,X_INTRODUCED_70,23);
constraint jacop_cumulative(X_INTRODUCED_75,X_INTRODUCED_74,X_INTRODUCED_73,25);
constraint jacop_cumulative(X_INTRODUCED_78,X_INTRODUCED_77,X_INTRODUCED_76,25);
constraint jacop_cumulative(X_INTRODUCED_81,X_INTRODUCED_80,X_INTRODUCED_79,18);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_27,objective],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_28,objective],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_29,objective],-10);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_21,X_INTRODUCED_5],-9,X_INTRODUCED_59):: defines_var(X_INTRODUCED_59);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_5,X_INTRODUCED_21],-2,X_INTRODUCED_60):: defines_var(X_INTRODUCED_60);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_26,X_INTRODUCED_5],-3,X_INTRODUCED_61):: defines_var(X_INTRODUCED_61);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_5,X_INTRODUCED_26],-2,X_INTRODUCED_62):: defines_var(X_INTRODUCED_62);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_29,X_INTRODUCED_5],-10,X_INTRODUCED_64):: defines_var(X_INTRODUCED_64);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_5,X_INTRODUCED_29],-2,X_INTRODUCED_65):: defines_var(X_INTRODUCED_65);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_26,X_INTRODUCED_21],-3,X_INTRODUCED_66):: defines_var(X_INTRODUCED_66);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_21,X_INTRODUCED_26],-9,X_INTRODUCED_67):: defines_var(X_INTRODUCED_67);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_29,X_INTRODUCED_21],-10,X_INTRODUCED_68):: defines_var(X_INTRODUCED_68);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_21,X_INTRODUCED_29],-9,X_INTRODUCED_69):: defines_var(X_INTRODUCED_69);
solve :: int_search(X_INTRODUCED_84,smallest,indomain_min,complete) minimize objective;
