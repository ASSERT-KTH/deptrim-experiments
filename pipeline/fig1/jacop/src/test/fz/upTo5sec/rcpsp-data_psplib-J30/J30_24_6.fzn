predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_32 = [1,-1];
array [1..16] of int: X_INTRODUCED_73 = [1,6,4,4,4,4,3,7,10,2,3,3,9,9,6,6];
array [1..16] of int: X_INTRODUCED_74 = [5,3,9,8,1,4,8,10,8,3,8,7,4,7,9,8];
array [1..20] of int: X_INTRODUCED_76 = [5,6,3,9,2,1,6,8,1,3,10,5,5,10,1,6,10,3,10,9];
array [1..20] of int: X_INTRODUCED_77 = [4,10,5,4,3,9,8,9,4,8,5,2,8,7,4,4,10,10,9,8];
array [1..10] of int: X_INTRODUCED_79 = [3,10,9,1,5,1,7,2,10,4];
array [1..10] of int: X_INTRODUCED_80 = [4,1,4,8,8,4,7,4,4,10];
array [1..15] of int: X_INTRODUCED_82 = [10,8,6,3,2,10,8,10,6,8,7,3,1,6,10];
array [1..15] of int: X_INTRODUCED_83 = [10,1,3,1,9,4,8,10,4,1,2,7,7,4,9];
var 0..180: X_INTRODUCED_0;
var 0..180: X_INTRODUCED_1;
var 0..180: X_INTRODUCED_2;
var 0..180: X_INTRODUCED_3;
var 0..180: X_INTRODUCED_4;
var 0..180: X_INTRODUCED_5;
var 0..180: X_INTRODUCED_6;
var 0..180: X_INTRODUCED_7;
var 0..180: X_INTRODUCED_8;
var 0..180: X_INTRODUCED_9;
var 0..180: X_INTRODUCED_10;
var 0..180: X_INTRODUCED_11;
var 0..180: X_INTRODUCED_12;
var 0..180: X_INTRODUCED_13;
var 0..180: X_INTRODUCED_14;
var 0..180: X_INTRODUCED_15;
var 0..180: X_INTRODUCED_16;
var 0..180: X_INTRODUCED_17;
var 0..180: X_INTRODUCED_18;
var 0..180: X_INTRODUCED_19;
var 0..180: X_INTRODUCED_20;
var 0..180: X_INTRODUCED_21;
var 0..180: X_INTRODUCED_22;
var 0..180: X_INTRODUCED_23;
var 0..180: X_INTRODUCED_24;
var 0..180: X_INTRODUCED_25;
var 0..180: X_INTRODUCED_26;
var 0..180: X_INTRODUCED_27;
var 0..180: X_INTRODUCED_28;
var 0..180: X_INTRODUCED_29;
var 0..181: objective:: output_var;
var bool: X_INTRODUCED_60 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_61 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_62 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_63 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_64 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_65 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_66 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_67 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_68 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_69 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_70 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_71 ::var_is_introduced :: is_defined_var;
array [1..30] of var int: s:: output_array([1..30]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29];
array [1..16] of var int: X_INTRODUCED_75 ::var_is_introduced  = [X_INTRODUCED_3,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_13,X_INTRODUCED_15,X_INTRODUCED_18,X_INTRODUCED_20,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_28,X_INTRODUCED_29];
array [1..20] of var int: X_INTRODUCED_78 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_14,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_23,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29];
array [1..10] of var int: X_INTRODUCED_81 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_2,X_INTRODUCED_4,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_16,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_25,X_INTRODUCED_26];
array [1..15] of var int: X_INTRODUCED_84 ::var_is_introduced  = [X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_5,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_19,X_INTRODUCED_22,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_28];
array [1..31] of var int: X_INTRODUCED_88 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29,objective];
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_0,X_INTRODUCED_7],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_0,X_INTRODUCED_13],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_0,X_INTRODUCED_22],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_1,X_INTRODUCED_3],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_1,X_INTRODUCED_20],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_1,X_INTRODUCED_21],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_2,X_INTRODUCED_4],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_2,X_INTRODUCED_10],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_3,X_INTRODUCED_6],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_3,X_INTRODUCED_12],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_3,X_INTRODUCED_28],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_4,X_INTRODUCED_5],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_4,X_INTRODUCED_8],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_5,X_INTRODUCED_7],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_5,X_INTRODUCED_18],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_5,X_INTRODUCED_20],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_6,X_INTRODUCED_8],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_6,X_INTRODUCED_9],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_6,X_INTRODUCED_11],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_7,X_INTRODUCED_12],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_8,X_INTRODUCED_19],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_8,X_INTRODUCED_27],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_9,X_INTRODUCED_24],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_10,X_INTRODUCED_11],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_10,X_INTRODUCED_15],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_11,X_INTRODUCED_16],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_11,X_INTRODUCED_19],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_11,X_INTRODUCED_22],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_12,X_INTRODUCED_16],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_13,X_INTRODUCED_14],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_13,X_INTRODUCED_15],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_13,X_INTRODUCED_17],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_14,X_INTRODUCED_16],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_14,X_INTRODUCED_23],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_15,X_INTRODUCED_23],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_15,X_INTRODUCED_25],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_16,X_INTRODUCED_26],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_17,X_INTRODUCED_21],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_17,X_INTRODUCED_26],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_18,X_INTRODUCED_24],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_19,X_INTRODUCED_29],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_20,X_INTRODUCED_22],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_20,X_INTRODUCED_24],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_20,X_INTRODUCED_28],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_21,X_INTRODUCED_23],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_21,X_INTRODUCED_25],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_21,X_INTRODUCED_28],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_22,X_INTRODUCED_25],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_23,X_INTRODUCED_29],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_24,X_INTRODUCED_29],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_25,X_INTRODUCED_27],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_26,X_INTRODUCED_27],-10);
constraint array_bool_or([X_INTRODUCED_60,X_INTRODUCED_61],true);
constraint array_bool_or([X_INTRODUCED_62,X_INTRODUCED_63],true);
constraint array_bool_or([X_INTRODUCED_64,X_INTRODUCED_65],true);
constraint array_bool_or([X_INTRODUCED_66,X_INTRODUCED_67],true);
constraint array_bool_or([X_INTRODUCED_68,X_INTRODUCED_69],true);
constraint array_bool_or([X_INTRODUCED_70,X_INTRODUCED_71],true);
constraint jacop_cumulative(X_INTRODUCED_75,X_INTRODUCED_74,X_INTRODUCED_73,22);
constraint jacop_cumulative(X_INTRODUCED_78,X_INTRODUCED_77,X_INTRODUCED_76,32);
constraint jacop_cumulative(X_INTRODUCED_81,X_INTRODUCED_80,X_INTRODUCED_79,14);
constraint jacop_cumulative(X_INTRODUCED_84,X_INTRODUCED_83,X_INTRODUCED_82,30);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_27,objective],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_28,objective],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_29,objective],-8);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_12,X_INTRODUCED_2],-8,X_INTRODUCED_60):: defines_var(X_INTRODUCED_60);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_2,X_INTRODUCED_12],-1,X_INTRODUCED_61):: defines_var(X_INTRODUCED_61);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_22,X_INTRODUCED_2],-7,X_INTRODUCED_62):: defines_var(X_INTRODUCED_62);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_2,X_INTRODUCED_22],-1,X_INTRODUCED_63):: defines_var(X_INTRODUCED_63);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_25,X_INTRODUCED_2],-4,X_INTRODUCED_64):: defines_var(X_INTRODUCED_64);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_2,X_INTRODUCED_25],-1,X_INTRODUCED_65):: defines_var(X_INTRODUCED_65);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_22,X_INTRODUCED_4],-7,X_INTRODUCED_66):: defines_var(X_INTRODUCED_66);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_4,X_INTRODUCED_22],-4,X_INTRODUCED_67):: defines_var(X_INTRODUCED_67);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_25,X_INTRODUCED_4],-4,X_INTRODUCED_68):: defines_var(X_INTRODUCED_68);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_4,X_INTRODUCED_25],-4,X_INTRODUCED_69):: defines_var(X_INTRODUCED_69);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_25,X_INTRODUCED_12],-4,X_INTRODUCED_70):: defines_var(X_INTRODUCED_70);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_12,X_INTRODUCED_25],-8,X_INTRODUCED_71):: defines_var(X_INTRODUCED_71);
solve :: int_search(X_INTRODUCED_88,smallest,indomain_min,complete) minimize objective;
