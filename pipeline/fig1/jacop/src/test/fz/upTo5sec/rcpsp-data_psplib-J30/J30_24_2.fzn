predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_32 = [1,-1];
array [1..18] of int: X_INTRODUCED_64 = [5,7,10,3,3,10,9,3,8,10,6,4,9,4,8,3,7,10];
array [1..18] of int: X_INTRODUCED_65 = [4,10,4,9,6,8,5,3,1,5,8,7,1,2,3,3,8,10];
array [1..10] of int: X_INTRODUCED_67 = [2,8,3,2,1,10,4,10,1,3];
array [1..10] of int: X_INTRODUCED_68 = [9,8,5,1,3,8,5,4,5,6];
array [1..16] of int: X_INTRODUCED_70 = [7,3,1,9,5,9,7,2,1,9,2,5,10,7,7,7];
array [1..16] of int: X_INTRODUCED_71 = [9,2,8,8,5,1,5,6,5,1,3,8,5,6,10,1];
array [1..17] of int: X_INTRODUCED_73 = [3,1,10,4,7,4,10,2,6,9,9,1,7,6,4,7,7];
array [1..17] of int: X_INTRODUCED_74 = [3,10,4,9,8,5,3,3,6,8,5,7,4,4,3,5,10];
var 0..144: X_INTRODUCED_0;
var 0..144: X_INTRODUCED_1;
var 0..144: X_INTRODUCED_2;
var 0..144: X_INTRODUCED_3;
var 0..144: X_INTRODUCED_4;
var 0..144: X_INTRODUCED_5;
var 0..144: X_INTRODUCED_6;
var 0..144: X_INTRODUCED_7;
var 0..144: X_INTRODUCED_8;
var 0..144: X_INTRODUCED_9;
var 0..144: X_INTRODUCED_10;
var 0..144: X_INTRODUCED_11;
var 0..144: X_INTRODUCED_12;
var 0..144: X_INTRODUCED_13;
var 0..144: X_INTRODUCED_14;
var 0..144: X_INTRODUCED_15;
var 0..144: X_INTRODUCED_16;
var 0..144: X_INTRODUCED_17;
var 0..144: X_INTRODUCED_18;
var 0..144: X_INTRODUCED_19;
var 0..144: X_INTRODUCED_20;
var 0..144: X_INTRODUCED_21;
var 0..144: X_INTRODUCED_22;
var 0..144: X_INTRODUCED_23;
var 0..144: X_INTRODUCED_24;
var 0..144: X_INTRODUCED_25;
var 0..144: X_INTRODUCED_26;
var 0..144: X_INTRODUCED_27;
var 0..144: X_INTRODUCED_28;
var 0..144: X_INTRODUCED_29;
var 0..145: objective:: output_var;
var bool: X_INTRODUCED_60 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_61 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_62 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_63 ::var_is_introduced :: is_defined_var;
array [1..30] of var int: s:: output_array([1..30]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29];
array [1..18] of var int: X_INTRODUCED_66 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_11,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_16,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_28];
array [1..10] of var int: X_INTRODUCED_69 ::var_is_introduced  = [X_INTRODUCED_4,X_INTRODUCED_6,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_12,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_23,X_INTRODUCED_26,X_INTRODUCED_27];
array [1..16] of var int: X_INTRODUCED_72 ::var_is_introduced  = [X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_17,X_INTRODUCED_19,X_INTRODUCED_22,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29];
array [1..17] of var int: X_INTRODUCED_75 ::var_is_introduced  = [X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_20,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_26,X_INTRODUCED_28];
array [1..31] of var int: X_INTRODUCED_79 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29,objective];
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_0,X_INTRODUCED_7],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_0,X_INTRODUCED_19],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_1,X_INTRODUCED_5],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_1,X_INTRODUCED_9],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_1,X_INTRODUCED_11],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_2,X_INTRODUCED_3],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_2,X_INTRODUCED_4],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_2,X_INTRODUCED_15],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_3,X_INTRODUCED_6],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_3,X_INTRODUCED_8],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_3,X_INTRODUCED_10],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_4,X_INTRODUCED_14],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_4,X_INTRODUCED_16],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_4,X_INTRODUCED_19],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_5,X_INTRODUCED_20],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_5,X_INTRODUCED_21],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_5,X_INTRODUCED_29],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_6,X_INTRODUCED_14],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_6,X_INTRODUCED_16],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_6,X_INTRODUCED_24],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_7,X_INTRODUCED_28],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_8,X_INTRODUCED_12],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_9,X_INTRODUCED_13],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_9,X_INTRODUCED_18],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_9,X_INTRODUCED_22],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_10,X_INTRODUCED_13],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_10,X_INTRODUCED_17],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_11,X_INTRODUCED_17],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_11,X_INTRODUCED_24],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_12,X_INTRODUCED_22],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_12,X_INTRODUCED_25],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_12,X_INTRODUCED_29],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_13,X_INTRODUCED_23],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_14,X_INTRODUCED_17],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_14,X_INTRODUCED_20],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_15,X_INTRODUCED_16],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_15,X_INTRODUCED_20],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_16,X_INTRODUCED_18],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_17,X_INTRODUCED_25],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_17,X_INTRODUCED_29],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_18,X_INTRODUCED_26],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_19,X_INTRODUCED_21],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_20,X_INTRODUCED_23],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_20,X_INTRODUCED_27],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_21,X_INTRODUCED_22],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_21,X_INTRODUCED_23],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_21,X_INTRODUCED_27],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_22,X_INTRODUCED_24],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_23,X_INTRODUCED_25],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_24,X_INTRODUCED_26],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_25,X_INTRODUCED_26],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_26,X_INTRODUCED_28],-5);
constraint array_bool_or([X_INTRODUCED_60,X_INTRODUCED_61],true);
constraint array_bool_or([X_INTRODUCED_62,X_INTRODUCED_63],true);
constraint jacop_cumulative(X_INTRODUCED_66,X_INTRODUCED_65,X_INTRODUCED_64,24);
constraint jacop_cumulative(X_INTRODUCED_69,X_INTRODUCED_68,X_INTRODUCED_67,17);
constraint jacop_cumulative(X_INTRODUCED_72,X_INTRODUCED_71,X_INTRODUCED_70,28);
constraint jacop_cumulative(X_INTRODUCED_75,X_INTRODUCED_74,X_INTRODUCED_73,29);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_27,objective],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_28,objective],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_29,objective],-1);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_23,X_INTRODUCED_6],-4,X_INTRODUCED_60):: defines_var(X_INTRODUCED_60);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_6,X_INTRODUCED_23],-8,X_INTRODUCED_61):: defines_var(X_INTRODUCED_61);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_23,X_INTRODUCED_16],-4,X_INTRODUCED_62):: defines_var(X_INTRODUCED_62);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_16,X_INTRODUCED_23],-8,X_INTRODUCED_63):: defines_var(X_INTRODUCED_63);
solve :: int_search(X_INTRODUCED_79,smallest,indomain_min,complete) minimize objective;
