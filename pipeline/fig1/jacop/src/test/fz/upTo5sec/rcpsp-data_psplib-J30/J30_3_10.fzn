predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_32 = [1,-1];
array [1..7] of int: X_INTRODUCED_83 = [5,3,10,5,4,6,1];
array [1..7] of int: X_INTRODUCED_84 = [2,1,8,5,4,4,8];
array [1..5] of int: X_INTRODUCED_86 = [5,6,2,1,5];
array [1..5] of int: X_INTRODUCED_87 = [4,7,2,3,7];
array [1..8] of int: X_INTRODUCED_89 = [5,7,3,1,7,6,9,2];
array [1..8] of int: X_INTRODUCED_90 = [5,10,5,8,4,9,7,5];
array [1..10] of int: X_INTRODUCED_92 = [8,8,10,2,3,5,10,7,3,9];
array [1..10] of int: X_INTRODUCED_93 = [9,10,1,3,9,9,6,6,7,9];
var 0..176: X_INTRODUCED_0;
var 0..176: X_INTRODUCED_1;
var 0..176: X_INTRODUCED_2;
var 0..176: X_INTRODUCED_3;
var 0..176: X_INTRODUCED_4;
var 0..176: X_INTRODUCED_5;
var 0..176: X_INTRODUCED_6;
var 0..176: X_INTRODUCED_7;
var 0..176: X_INTRODUCED_8;
var 0..176: X_INTRODUCED_9;
var 0..176: X_INTRODUCED_10;
var 0..176: X_INTRODUCED_11;
var 0..176: X_INTRODUCED_12;
var 0..176: X_INTRODUCED_13;
var 0..176: X_INTRODUCED_14;
var 0..176: X_INTRODUCED_15;
var 0..176: X_INTRODUCED_16;
var 0..176: X_INTRODUCED_17;
var 0..176: X_INTRODUCED_18;
var 0..176: X_INTRODUCED_19;
var 0..176: X_INTRODUCED_20;
var 0..176: X_INTRODUCED_21;
var 0..176: X_INTRODUCED_22;
var 0..176: X_INTRODUCED_23;
var 0..176: X_INTRODUCED_24;
var 0..176: X_INTRODUCED_25;
var 0..176: X_INTRODUCED_26;
var 0..176: X_INTRODUCED_27;
var 0..176: X_INTRODUCED_28;
var 0..176: X_INTRODUCED_29;
var 0..177: objective:: output_var;
var bool: X_INTRODUCED_59 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_60 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_61 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_62 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_63 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_64 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_66 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_67 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_68 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_69 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_71 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_72 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_74 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_75 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_76 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_77 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_79 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_80 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_81 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_82 ::var_is_introduced :: is_defined_var;
array [1..30] of var int: s:: output_array([1..30]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29];
array [1..7] of var int: X_INTRODUCED_85 ::var_is_introduced  = [X_INTRODUCED_2,X_INTRODUCED_5,X_INTRODUCED_7,X_INTRODUCED_11,X_INTRODUCED_13,X_INTRODUCED_16,X_INTRODUCED_21];
array [1..5] of var int: X_INTRODUCED_88 ::var_is_introduced  = [X_INTRODUCED_1,X_INTRODUCED_14,X_INTRODUCED_20,X_INTRODUCED_22,X_INTRODUCED_23];
array [1..8] of var int: X_INTRODUCED_91 ::var_is_introduced  = [X_INTRODUCED_6,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_25,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29];
array [1..10] of var int: X_INTRODUCED_94 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_12,X_INTRODUCED_15,X_INTRODUCED_24,X_INTRODUCED_26];
array [1..31] of var int: X_INTRODUCED_96 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29,objective];
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_0,X_INTRODUCED_4],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_0,X_INTRODUCED_6],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_0,X_INTRODUCED_7],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_1,X_INTRODUCED_5],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_1,X_INTRODUCED_22],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_2,X_INTRODUCED_3],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_3,X_INTRODUCED_12],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_3,X_INTRODUCED_29],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_4,X_INTRODUCED_11],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_5,X_INTRODUCED_8],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_5,X_INTRODUCED_10],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_6,X_INTRODUCED_9],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_6,X_INTRODUCED_17],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_7,X_INTRODUCED_12],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_7,X_INTRODUCED_26],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_8,X_INTRODUCED_13],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_8,X_INTRODUCED_14],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_8,X_INTRODUCED_19],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_9,X_INTRODUCED_25],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_10,X_INTRODUCED_24],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_11,X_INTRODUCED_16],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_11,X_INTRODUCED_18],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_11,X_INTRODUCED_24],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_12,X_INTRODUCED_14],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_12,X_INTRODUCED_15],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_12,X_INTRODUCED_20],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_13,X_INTRODUCED_20],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_13,X_INTRODUCED_23],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_14,X_INTRODUCED_23],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_15,X_INTRODUCED_23],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_16,X_INTRODUCED_20],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_17,X_INTRODUCED_26],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_18,X_INTRODUCED_26],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_19,X_INTRODUCED_28],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_20,X_INTRODUCED_21],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_20,X_INTRODUCED_27],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_21,X_INTRODUCED_28],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_22,X_INTRODUCED_29],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_23,X_INTRODUCED_24],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_24,X_INTRODUCED_25],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_25,X_INTRODUCED_27],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_26,X_INTRODUCED_27],-9);
constraint array_bool_or([X_INTRODUCED_59,X_INTRODUCED_60],true);
constraint array_bool_or([X_INTRODUCED_61,X_INTRODUCED_62],true);
constraint array_bool_or([X_INTRODUCED_63,X_INTRODUCED_64],true);
constraint array_bool_or([X_INTRODUCED_66,X_INTRODUCED_67],true);
constraint array_bool_or([X_INTRODUCED_68,X_INTRODUCED_69],true);
constraint array_bool_or([X_INTRODUCED_71,X_INTRODUCED_72],true);
constraint array_bool_or([X_INTRODUCED_74,X_INTRODUCED_75],true);
constraint array_bool_or([X_INTRODUCED_76,X_INTRODUCED_77],true);
constraint array_bool_or([X_INTRODUCED_79,X_INTRODUCED_80],true);
constraint array_bool_or([X_INTRODUCED_81,X_INTRODUCED_82],true);
constraint jacop_cumulative(X_INTRODUCED_85,X_INTRODUCED_84,X_INTRODUCED_83,16);
constraint jacop_cumulative(X_INTRODUCED_88,X_INTRODUCED_87,X_INTRODUCED_86,7);
constraint jacop_cumulative(X_INTRODUCED_91,X_INTRODUCED_90,X_INTRODUCED_89,12);
constraint jacop_cumulative(X_INTRODUCED_94,X_INTRODUCED_93,X_INTRODUCED_92,19);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_27,objective],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_28,objective],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_29,objective],-5);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_14,X_INTRODUCED_1],-7,X_INTRODUCED_59):: defines_var(X_INTRODUCED_59);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_1,X_INTRODUCED_14],-4,X_INTRODUCED_60):: defines_var(X_INTRODUCED_60);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_23,X_INTRODUCED_1],-7,X_INTRODUCED_61):: defines_var(X_INTRODUCED_61);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_1,X_INTRODUCED_23],-4,X_INTRODUCED_62):: defines_var(X_INTRODUCED_62);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_12,X_INTRODUCED_4],-6,X_INTRODUCED_63):: defines_var(X_INTRODUCED_63);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_4,X_INTRODUCED_12],-1,X_INTRODUCED_64):: defines_var(X_INTRODUCED_64);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_28,X_INTRODUCED_6],-7,X_INTRODUCED_66):: defines_var(X_INTRODUCED_66);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_6,X_INTRODUCED_28],-5,X_INTRODUCED_67):: defines_var(X_INTRODUCED_67);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_20,X_INTRODUCED_14],-2,X_INTRODUCED_68):: defines_var(X_INTRODUCED_68);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_14,X_INTRODUCED_20],-7,X_INTRODUCED_69):: defines_var(X_INTRODUCED_69);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_25,X_INTRODUCED_17],-4,X_INTRODUCED_71):: defines_var(X_INTRODUCED_71);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_17,X_INTRODUCED_25],-10,X_INTRODUCED_72):: defines_var(X_INTRODUCED_72);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_27,X_INTRODUCED_17],-9,X_INTRODUCED_74):: defines_var(X_INTRODUCED_74);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_17,X_INTRODUCED_27],-10,X_INTRODUCED_75):: defines_var(X_INTRODUCED_75);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_28,X_INTRODUCED_17],-7,X_INTRODUCED_76):: defines_var(X_INTRODUCED_76);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_17,X_INTRODUCED_28],-10,X_INTRODUCED_77):: defines_var(X_INTRODUCED_77);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_28,X_INTRODUCED_25],-7,X_INTRODUCED_79):: defines_var(X_INTRODUCED_79);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_25,X_INTRODUCED_28],-4,X_INTRODUCED_80):: defines_var(X_INTRODUCED_80);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_28,X_INTRODUCED_27],-7,X_INTRODUCED_81):: defines_var(X_INTRODUCED_81);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_27,X_INTRODUCED_28],-9,X_INTRODUCED_82):: defines_var(X_INTRODUCED_82);
solve :: int_search(X_INTRODUCED_96,smallest,indomain_min,complete) minimize objective;
