predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_32 = [1,-1];
array [1..24] of int: X_INTRODUCED_67 = [3,7,4,1,8,10,7,9,7,1,4,3,3,8,4,3,7,10,9,1,3,3,5,3];
array [1..24] of int: X_INTRODUCED_68 = [6,8,8,3,4,7,6,4,2,5,10,5,3,10,7,1,7,3,1,7,4,7,8,10];
array [1..25] of int: X_INTRODUCED_70 = [7,4,9,5,8,2,8,3,6,6,3,8,2,3,6,1,2,8,2,8,10,4,3,5,9];
array [1..25] of int: X_INTRODUCED_71 = [2,6,6,8,3,3,4,7,6,4,2,5,10,5,1,7,3,1,7,4,4,2,7,8,10];
array [1..22] of int: X_INTRODUCED_73 = [4,7,10,3,2,8,2,6,5,7,1,7,6,8,4,2,7,4,7,1,10,2];
array [1..22] of int: X_INTRODUCED_74 = [2,6,8,6,3,3,4,7,2,10,5,3,10,7,3,1,7,4,4,7,8,10];
array [1..20] of int: X_INTRODUCED_76 = [7,8,10,4,7,6,10,4,3,2,8,4,5,1,5,10,5,9,2,4];
array [1..20] of int: X_INTRODUCED_77 = [2,8,6,8,3,3,7,4,5,10,3,10,7,1,1,1,4,7,8,10];
var 0..153: X_INTRODUCED_0;
var 0..153: X_INTRODUCED_1;
var 0..153: X_INTRODUCED_2;
var 0..153: X_INTRODUCED_3;
var 0..153: X_INTRODUCED_4;
var 0..153: X_INTRODUCED_5;
var 0..153: X_INTRODUCED_6;
var 0..153: X_INTRODUCED_7;
var 0..153: X_INTRODUCED_8;
var 0..153: X_INTRODUCED_9;
var 0..153: X_INTRODUCED_10;
var 0..153: X_INTRODUCED_11;
var 0..153: X_INTRODUCED_12;
var 0..153: X_INTRODUCED_13;
var 0..153: X_INTRODUCED_14;
var 0..153: X_INTRODUCED_15;
var 0..153: X_INTRODUCED_16;
var 0..153: X_INTRODUCED_17;
var 0..153: X_INTRODUCED_18;
var 0..153: X_INTRODUCED_19;
var 0..153: X_INTRODUCED_20;
var 0..153: X_INTRODUCED_21;
var 0..153: X_INTRODUCED_22;
var 0..153: X_INTRODUCED_23;
var 0..153: X_INTRODUCED_24;
var 0..153: X_INTRODUCED_25;
var 0..153: X_INTRODUCED_26;
var 0..153: X_INTRODUCED_27;
var 0..153: X_INTRODUCED_28;
var 0..153: X_INTRODUCED_29;
var 0..154: objective:: output_var;
var bool: X_INTRODUCED_60 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_61 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_63 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_64 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_65 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_66 ::var_is_introduced :: is_defined_var;
array [1..30] of var int: s:: output_array([1..30]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29];
array [1..24] of var int: X_INTRODUCED_69 ::var_is_introduced  = [X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29];
array [1..25] of var int: X_INTRODUCED_72 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29];
array [1..22] of var int: X_INTRODUCED_75 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_11,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29];
array [1..20] of var int: X_INTRODUCED_78 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_8,X_INTRODUCED_10,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_24,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29];
array [1..31] of var int: X_INTRODUCED_81 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29,objective];
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_0,X_INTRODUCED_4],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_0,X_INTRODUCED_5],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_0,X_INTRODUCED_6],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_1,X_INTRODUCED_3],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_1,X_INTRODUCED_5],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_1,X_INTRODUCED_21],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_2,X_INTRODUCED_9],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_2,X_INTRODUCED_13],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_2,X_INTRODUCED_20],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_3,X_INTRODUCED_4],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_3,X_INTRODUCED_8],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_3,X_INTRODUCED_15],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_4,X_INTRODUCED_7],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_4,X_INTRODUCED_9],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_4,X_INTRODUCED_18],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_5,X_INTRODUCED_14],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_5,X_INTRODUCED_20],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_5,X_INTRODUCED_22],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_6,X_INTRODUCED_8],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_6,X_INTRODUCED_12],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_6,X_INTRODUCED_15],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_7,X_INTRODUCED_10],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_7,X_INTRODUCED_11],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_7,X_INTRODUCED_25],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_8,X_INTRODUCED_10],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_8,X_INTRODUCED_18],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_8,X_INTRODUCED_25],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_9,X_INTRODUCED_16],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_9,X_INTRODUCED_19],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_9,X_INTRODUCED_29],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_10,X_INTRODUCED_14],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_10,X_INTRODUCED_19],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_10,X_INTRODUCED_23],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_11,X_INTRODUCED_16],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_11,X_INTRODUCED_20],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_11,X_INTRODUCED_22],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_12,X_INTRODUCED_16],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_12,X_INTRODUCED_21],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_12,X_INTRODUCED_22],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_13,X_INTRODUCED_14],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_13,X_INTRODUCED_17],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_13,X_INTRODUCED_21],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_14,X_INTRODUCED_24],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_15,X_INTRODUCED_17],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_15,X_INTRODUCED_19],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_15,X_INTRODUCED_29],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_16,X_INTRODUCED_26],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_17,X_INTRODUCED_18],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_17,X_INTRODUCED_27],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_18,X_INTRODUCED_24],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_19,X_INTRODUCED_26],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_19,X_INTRODUCED_28],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_20,X_INTRODUCED_27],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_20,X_INTRODUCED_28],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_21,X_INTRODUCED_23],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_21,X_INTRODUCED_25],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_22,X_INTRODUCED_23],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_23,X_INTRODUCED_24],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_24,X_INTRODUCED_28],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_25,X_INTRODUCED_26],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_25,X_INTRODUCED_29],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_26,X_INTRODUCED_27],-2);
constraint array_bool_or([X_INTRODUCED_60,X_INTRODUCED_61],true);
constraint array_bool_or([X_INTRODUCED_63,X_INTRODUCED_64],true);
constraint array_bool_or([X_INTRODUCED_65,X_INTRODUCED_66],true);
constraint jacop_cumulative(X_INTRODUCED_69,X_INTRODUCED_68,X_INTRODUCED_67,23);
constraint jacop_cumulative(X_INTRODUCED_72,X_INTRODUCED_71,X_INTRODUCED_70,21);
constraint jacop_cumulative(X_INTRODUCED_75,X_INTRODUCED_74,X_INTRODUCED_73,18);
constraint jacop_cumulative(X_INTRODUCED_78,X_INTRODUCED_77,X_INTRODUCED_76,19);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_27,objective],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_28,objective],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_29,objective],-10);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_28,X_INTRODUCED_2],-8,X_INTRODUCED_60):: defines_var(X_INTRODUCED_60);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_2,X_INTRODUCED_28],-8,X_INTRODUCED_61):: defines_var(X_INTRODUCED_61);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_22,X_INTRODUCED_3],-1,X_INTRODUCED_63):: defines_var(X_INTRODUCED_63);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_3,X_INTRODUCED_22],-6,X_INTRODUCED_64):: defines_var(X_INTRODUCED_64);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_22,X_INTRODUCED_8],-1,X_INTRODUCED_65):: defines_var(X_INTRODUCED_65);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_8,X_INTRODUCED_22],-7,X_INTRODUCED_66):: defines_var(X_INTRODUCED_66);
solve :: int_search(X_INTRODUCED_81,smallest,indomain_min,complete) minimize objective;
