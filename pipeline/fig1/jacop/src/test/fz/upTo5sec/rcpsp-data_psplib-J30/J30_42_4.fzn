predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_32 = [1,-1];
array [1..26] of int: X_INTRODUCED_84 = [7,7,4,1,10,2,8,9,1,2,5,4,2,1,4,8,3,10,7,9,1,3,10,5,6,10];
array [1..26] of int: X_INTRODUCED_85 = [9,3,1,2,9,4,1,5,5,6,2,6,10,6,5,4,9,2,3,3,8,4,9,5,2,4];
array [1..26] of int: X_INTRODUCED_87 = [6,2,8,8,10,9,9,8,9,1,1,2,10,3,8,1,2,5,1,3,10,3,2,9,8,8];
array [1..26] of int: X_INTRODUCED_88 = [9,3,2,9,4,1,5,5,6,2,6,6,10,6,5,1,2,1,4,3,3,8,4,5,2,4];
array [1..20] of int: X_INTRODUCED_90 = [3,7,2,8,6,4,9,4,9,3,2,10,6,3,5,10,7,8,5,5];
array [1..20] of int: X_INTRODUCED_91 = [9,3,2,9,4,6,2,6,10,6,5,9,1,4,3,3,8,9,5,2];
array [1..19] of int: X_INTRODUCED_93 = [5,8,10,8,7,7,4,1,7,7,5,1,10,4,10,4,7,7,4];
array [1..19] of int: X_INTRODUCED_94 = [3,1,4,1,5,5,6,2,6,6,4,9,2,1,3,3,8,9,2];
var 0..138: X_INTRODUCED_0;
var 0..138: X_INTRODUCED_1;
var 0..138: X_INTRODUCED_2;
var 0..138: X_INTRODUCED_3;
var 0..138: X_INTRODUCED_4;
var 0..138: X_INTRODUCED_5;
var 0..138: X_INTRODUCED_6;
var 0..138: X_INTRODUCED_7;
var 0..138: X_INTRODUCED_8;
var 0..138: X_INTRODUCED_9;
var 0..138: X_INTRODUCED_10;
var 0..138: X_INTRODUCED_11;
var 0..138: X_INTRODUCED_12;
var 0..138: X_INTRODUCED_13;
var 0..138: X_INTRODUCED_14;
var 0..138: X_INTRODUCED_15;
var 0..138: X_INTRODUCED_16;
var 0..138: X_INTRODUCED_17;
var 0..138: X_INTRODUCED_18;
var 0..138: X_INTRODUCED_19;
var 0..138: X_INTRODUCED_20;
var 0..138: X_INTRODUCED_21;
var 0..138: X_INTRODUCED_22;
var 0..138: X_INTRODUCED_23;
var 0..138: X_INTRODUCED_24;
var 0..138: X_INTRODUCED_25;
var 0..138: X_INTRODUCED_26;
var 0..138: X_INTRODUCED_27;
var 0..138: X_INTRODUCED_28;
var 0..138: X_INTRODUCED_29;
var 0..139: objective:: output_var;
var bool: X_INTRODUCED_60 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_61 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_62 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_63 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_64 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_65 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_67 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_68 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_69 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_70 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_71 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_72 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_75 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_76 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_77 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_78 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_80 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_81 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_82 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_83 ::var_is_introduced :: is_defined_var;
array [1..30] of var int: s:: output_array([1..30]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29];
array [1..26] of var int: X_INTRODUCED_86 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29];
array [1..26] of var int: X_INTRODUCED_89 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_17,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29];
array [1..20] of var int: X_INTRODUCED_92 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_18,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28];
array [1..19] of var int: X_INTRODUCED_95 ::var_is_introduced  = [X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_16,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_26,X_INTRODUCED_28];
array [1..31] of var int: X_INTRODUCED_98 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29,objective];
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_0,X_INTRODUCED_3],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_0,X_INTRODUCED_10],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_0,X_INTRODUCED_12],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_1,X_INTRODUCED_4],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_1,X_INTRODUCED_8],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_1,X_INTRODUCED_21],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_2,X_INTRODUCED_6],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_2,X_INTRODUCED_8],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_2,X_INTRODUCED_17],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_3,X_INTRODUCED_6],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_3,X_INTRODUCED_14],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_3,X_INTRODUCED_22],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_4,X_INTRODUCED_5],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_4,X_INTRODUCED_7],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_4,X_INTRODUCED_9],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_5,X_INTRODUCED_13],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_5,X_INTRODUCED_15],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_5,X_INTRODUCED_18],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_6,X_INTRODUCED_23],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_6,X_INTRODUCED_25],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_6,X_INTRODUCED_29],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_7,X_INTRODUCED_16],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_7,X_INTRODUCED_24],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_7,X_INTRODUCED_29],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_8,X_INTRODUCED_9],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_8,X_INTRODUCED_10],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_8,X_INTRODUCED_11],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_9,X_INTRODUCED_14],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_9,X_INTRODUCED_15],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_9,X_INTRODUCED_16],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_10,X_INTRODUCED_13],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_10,X_INTRODUCED_22],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_10,X_INTRODUCED_23],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_11,X_INTRODUCED_13],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_11,X_INTRODUCED_16],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_11,X_INTRODUCED_18],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_12,X_INTRODUCED_15],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_12,X_INTRODUCED_17],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_12,X_INTRODUCED_18],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_13,X_INTRODUCED_14],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_14,X_INTRODUCED_20],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_14,X_INTRODUCED_24],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_15,X_INTRODUCED_20],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_15,X_INTRODUCED_29],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_16,X_INTRODUCED_19],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_17,X_INTRODUCED_19],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_17,X_INTRODUCED_21],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_17,X_INTRODUCED_22],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_18,X_INTRODUCED_25],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_18,X_INTRODUCED_27],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_19,X_INTRODUCED_20],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_19,X_INTRODUCED_23],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_19,X_INTRODUCED_28],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_20,X_INTRODUCED_27],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_21,X_INTRODUCED_25],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_21,X_INTRODUCED_26],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_22,X_INTRODUCED_24],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_22,X_INTRODUCED_26],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_23,X_INTRODUCED_26],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_24,X_INTRODUCED_28],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_25,X_INTRODUCED_28],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_26,X_INTRODUCED_27],-9);
constraint array_bool_or([X_INTRODUCED_60,X_INTRODUCED_61],true);
constraint array_bool_or([X_INTRODUCED_62,X_INTRODUCED_63],true);
constraint array_bool_or([X_INTRODUCED_64,X_INTRODUCED_65],true);
constraint array_bool_or([X_INTRODUCED_67,X_INTRODUCED_68],true);
constraint array_bool_or([X_INTRODUCED_69,X_INTRODUCED_70],true);
constraint array_bool_or([X_INTRODUCED_71,X_INTRODUCED_72],true);
constraint array_bool_or([X_INTRODUCED_75,X_INTRODUCED_76],true);
constraint array_bool_or([X_INTRODUCED_77,X_INTRODUCED_78],true);
constraint array_bool_or([X_INTRODUCED_80,X_INTRODUCED_81],true);
constraint array_bool_or([X_INTRODUCED_82,X_INTRODUCED_83],true);
constraint jacop_cumulative(X_INTRODUCED_86,X_INTRODUCED_85,X_INTRODUCED_84,18);
constraint jacop_cumulative(X_INTRODUCED_89,X_INTRODUCED_88,X_INTRODUCED_87,21);
constraint jacop_cumulative(X_INTRODUCED_92,X_INTRODUCED_91,X_INTRODUCED_90,21);
constraint jacop_cumulative(X_INTRODUCED_95,X_INTRODUCED_94,X_INTRODUCED_93,23);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_27,objective],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_28,objective],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_29,objective],-4);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_19,X_INTRODUCED_4],-2,X_INTRODUCED_60):: defines_var(X_INTRODUCED_60);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_4,X_INTRODUCED_19],-9,X_INTRODUCED_61):: defines_var(X_INTRODUCED_61);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_23,X_INTRODUCED_4],-3,X_INTRODUCED_62):: defines_var(X_INTRODUCED_62);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_4,X_INTRODUCED_23],-9,X_INTRODUCED_63):: defines_var(X_INTRODUCED_63);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_26,X_INTRODUCED_4],-9,X_INTRODUCED_64):: defines_var(X_INTRODUCED_64);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_4,X_INTRODUCED_26],-9,X_INTRODUCED_65):: defines_var(X_INTRODUCED_65);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_29,X_INTRODUCED_4],-4,X_INTRODUCED_67):: defines_var(X_INTRODUCED_67);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_4,X_INTRODUCED_29],-9,X_INTRODUCED_68):: defines_var(X_INTRODUCED_68);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_19,X_INTRODUCED_7],-2,X_INTRODUCED_69):: defines_var(X_INTRODUCED_69);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_7,X_INTRODUCED_19],-5,X_INTRODUCED_70):: defines_var(X_INTRODUCED_70);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_26,X_INTRODUCED_7],-9,X_INTRODUCED_71):: defines_var(X_INTRODUCED_71);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_7,X_INTRODUCED_26],-5,X_INTRODUCED_72):: defines_var(X_INTRODUCED_72);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_26,X_INTRODUCED_19],-9,X_INTRODUCED_75):: defines_var(X_INTRODUCED_75);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_19,X_INTRODUCED_26],-2,X_INTRODUCED_76):: defines_var(X_INTRODUCED_76);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_29,X_INTRODUCED_19],-4,X_INTRODUCED_77):: defines_var(X_INTRODUCED_77);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_19,X_INTRODUCED_29],-2,X_INTRODUCED_78):: defines_var(X_INTRODUCED_78);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_29,X_INTRODUCED_23],-4,X_INTRODUCED_80):: defines_var(X_INTRODUCED_80);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_23,X_INTRODUCED_29],-3,X_INTRODUCED_81):: defines_var(X_INTRODUCED_81);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_29,X_INTRODUCED_26],-4,X_INTRODUCED_82):: defines_var(X_INTRODUCED_82);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_26,X_INTRODUCED_29],-9,X_INTRODUCED_83):: defines_var(X_INTRODUCED_83);
solve :: int_search(X_INTRODUCED_98,smallest,indomain_min,complete) minimize objective;
