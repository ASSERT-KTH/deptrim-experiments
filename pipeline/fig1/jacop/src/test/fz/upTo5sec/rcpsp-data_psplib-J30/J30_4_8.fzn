predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_32 = [1,-1];
array [1..12] of int: X_INTRODUCED_69 = [1,1,1,10,10,7,5,7,7,10,4,9];
array [1..12] of int: X_INTRODUCED_70 = [6,6,10,3,1,8,8,3,3,9,5,9];
array [1..6] of int: X_INTRODUCED_72 = [6,9,5,8,10,4];
array [1..6] of int: X_INTRODUCED_73 = [8,2,1,5,8,1];
array [1..5] of int: X_INTRODUCED_75 = [7,3,1,1,7];
array [1..5] of int: X_INTRODUCED_76 = [6,7,9,3,7];
array [1..7] of int: X_INTRODUCED_78 = [7,6,5,4,2,4,9];
array [1..7] of int: X_INTRODUCED_79 = [6,3,2,8,8,6,10];
var 0..170: X_INTRODUCED_0;
var 0..170: X_INTRODUCED_1;
var 0..170: X_INTRODUCED_2;
var 0..170: X_INTRODUCED_3;
var 0..170: X_INTRODUCED_4;
var 0..170: X_INTRODUCED_5;
var 0..170: X_INTRODUCED_6;
var 0..170: X_INTRODUCED_7;
var 0..170: X_INTRODUCED_8;
var 0..170: X_INTRODUCED_9;
var 0..170: X_INTRODUCED_10;
var 0..170: X_INTRODUCED_11;
var 0..170: X_INTRODUCED_12;
var 0..170: X_INTRODUCED_13;
var 0..170: X_INTRODUCED_14;
var 0..170: X_INTRODUCED_15;
var 0..170: X_INTRODUCED_16;
var 0..170: X_INTRODUCED_17;
var 0..170: X_INTRODUCED_18;
var 0..170: X_INTRODUCED_19;
var 0..170: X_INTRODUCED_20;
var 0..170: X_INTRODUCED_21;
var 0..170: X_INTRODUCED_22;
var 0..170: X_INTRODUCED_23;
var 0..170: X_INTRODUCED_24;
var 0..170: X_INTRODUCED_25;
var 0..170: X_INTRODUCED_26;
var 0..170: X_INTRODUCED_27;
var 0..170: X_INTRODUCED_28;
var 0..170: X_INTRODUCED_29;
var 0..171: objective:: output_var;
var bool: X_INTRODUCED_60 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_61 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_63 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_64 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_65 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_66 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_67 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_68 ::var_is_introduced :: is_defined_var;
array [1..30] of var int: s:: output_array([1..30]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29];
array [1..12] of var int: X_INTRODUCED_71 ::var_is_introduced  = [X_INTRODUCED_1,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_8,X_INTRODUCED_10,X_INTRODUCED_13,X_INTRODUCED_16,X_INTRODUCED_19,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_27];
array [1..6] of var int: X_INTRODUCED_74 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_3,X_INTRODUCED_12,X_INTRODUCED_15,X_INTRODUCED_18,X_INTRODUCED_29];
array [1..5] of var int: X_INTRODUCED_77 ::var_is_introduced  = [X_INTRODUCED_9,X_INTRODUCED_11,X_INTRODUCED_14,X_INTRODUCED_22,X_INTRODUCED_26];
array [1..7] of var int: X_INTRODUCED_80 ::var_is_introduced  = [X_INTRODUCED_2,X_INTRODUCED_4,X_INTRODUCED_7,X_INTRODUCED_17,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_28];
array [1..31] of var int: X_INTRODUCED_83 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29,objective];
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_0,X_INTRODUCED_3],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_0,X_INTRODUCED_7],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_0,X_INTRODUCED_8],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_1,X_INTRODUCED_4],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_2,X_INTRODUCED_13],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_3,X_INTRODUCED_10],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_3,X_INTRODUCED_18],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_4,X_INTRODUCED_5],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_4,X_INTRODUCED_7],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_5,X_INTRODUCED_6],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_5,X_INTRODUCED_11],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_6,X_INTRODUCED_12],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_6,X_INTRODUCED_24],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_7,X_INTRODUCED_15],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_7,X_INTRODUCED_16],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_8,X_INTRODUCED_9],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_8,X_INTRODUCED_14],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_9,X_INTRODUCED_12],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_9,X_INTRODUCED_16],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_10,X_INTRODUCED_21],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_11,X_INTRODUCED_22],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_12,X_INTRODUCED_17],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_12,X_INTRODUCED_23],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_13,X_INTRODUCED_28],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_14,X_INTRODUCED_17],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_14,X_INTRODUCED_20],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_14,X_INTRODUCED_23],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_15,X_INTRODUCED_24],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_16,X_INTRODUCED_29],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_17,X_INTRODUCED_19],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_17,X_INTRODUCED_25],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_18,X_INTRODUCED_21],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_19,X_INTRODUCED_22],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_20,X_INTRODUCED_28],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_21,X_INTRODUCED_27],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_21,X_INTRODUCED_28],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_22,X_INTRODUCED_27],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_23,X_INTRODUCED_26],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_24,X_INTRODUCED_25],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_25,X_INTRODUCED_26],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_25,X_INTRODUCED_29],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_26,X_INTRODUCED_27],-7);
constraint array_bool_or([X_INTRODUCED_60,X_INTRODUCED_61],true);
constraint array_bool_or([X_INTRODUCED_63,X_INTRODUCED_64],true);
constraint array_bool_or([X_INTRODUCED_65,X_INTRODUCED_66],true);
constraint array_bool_or([X_INTRODUCED_67,X_INTRODUCED_68],true);
constraint jacop_cumulative(X_INTRODUCED_71,X_INTRODUCED_70,X_INTRODUCED_69,28);
constraint jacop_cumulative(X_INTRODUCED_74,X_INTRODUCED_73,X_INTRODUCED_72,18);
constraint jacop_cumulative(X_INTRODUCED_77,X_INTRODUCED_76,X_INTRODUCED_75,11);
constraint jacop_cumulative(X_INTRODUCED_80,X_INTRODUCED_79,X_INTRODUCED_78,13);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_27,objective],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_28,objective],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_29,objective],-1);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_28,X_INTRODUCED_2],-10,X_INTRODUCED_60):: defines_var(X_INTRODUCED_60);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_2,X_INTRODUCED_28],-6,X_INTRODUCED_61):: defines_var(X_INTRODUCED_61);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_28,X_INTRODUCED_4],-10,X_INTRODUCED_63):: defines_var(X_INTRODUCED_63);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_4,X_INTRODUCED_28],-3,X_INTRODUCED_64):: defines_var(X_INTRODUCED_64);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_28,X_INTRODUCED_7],-10,X_INTRODUCED_65):: defines_var(X_INTRODUCED_65);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_7,X_INTRODUCED_28],-2,X_INTRODUCED_66):: defines_var(X_INTRODUCED_66);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_26,X_INTRODUCED_9],-7,X_INTRODUCED_67):: defines_var(X_INTRODUCED_67);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_9,X_INTRODUCED_26],-6,X_INTRODUCED_68):: defines_var(X_INTRODUCED_68);
solve :: int_search(X_INTRODUCED_83,smallest,indomain_min,complete) minimize objective;
