predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_32 = [1,-1];
array [1..15] of int: X_INTRODUCED_64 = [9,4,6,10,8,5,10,9,6,9,6,9,2,7,1];
array [1..15] of int: X_INTRODUCED_65 = [10,4,8,10,5,5,7,10,8,1,6,1,3,10,9];
array [1..13] of int: X_INTRODUCED_67 = [10,6,2,4,6,1,10,3,1,6,1,4,3];
array [1..13] of int: X_INTRODUCED_68 = [10,4,3,6,1,1,10,1,6,10,6,10,9];
array [1..13] of int: X_INTRODUCED_70 = [2,1,2,9,3,6,1,4,2,4,4,2,7];
array [1..13] of int: X_INTRODUCED_71 = [4,1,3,6,1,7,4,1,1,10,3,4,9];
array [1..20] of int: X_INTRODUCED_73 = [5,6,9,3,9,2,4,5,8,10,5,1,2,5,4,1,2,6,1,4];
array [1..20] of int: X_INTRODUCED_74 = [10,3,4,1,10,6,5,7,4,4,1,10,1,10,6,1,10,6,10,4];
var 0..167: X_INTRODUCED_0;
var 0..167: X_INTRODUCED_1;
var 0..167: X_INTRODUCED_2;
var 0..167: X_INTRODUCED_3;
var 0..167: X_INTRODUCED_4;
var 0..167: X_INTRODUCED_5;
var 0..167: X_INTRODUCED_6;
var 0..167: X_INTRODUCED_7;
var 0..167: X_INTRODUCED_8;
var 0..167: X_INTRODUCED_9;
var 0..167: X_INTRODUCED_10;
var 0..167: X_INTRODUCED_11;
var 0..167: X_INTRODUCED_12;
var 0..167: X_INTRODUCED_13;
var 0..167: X_INTRODUCED_14;
var 0..167: X_INTRODUCED_15;
var 0..167: X_INTRODUCED_16;
var 0..167: X_INTRODUCED_17;
var 0..167: X_INTRODUCED_18;
var 0..167: X_INTRODUCED_19;
var 0..167: X_INTRODUCED_20;
var 0..167: X_INTRODUCED_21;
var 0..167: X_INTRODUCED_22;
var 0..167: X_INTRODUCED_23;
var 0..167: X_INTRODUCED_24;
var 0..167: X_INTRODUCED_25;
var 0..167: X_INTRODUCED_26;
var 0..167: X_INTRODUCED_27;
var 0..167: X_INTRODUCED_28;
var 0..167: X_INTRODUCED_29;
var 0..168: objective:: output_var;
var bool: X_INTRODUCED_59 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_60 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_62 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_63 ::var_is_introduced :: is_defined_var;
array [1..30] of var int: s:: output_array([1..30]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29];
array [1..15] of var int: X_INTRODUCED_66 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_5,X_INTRODUCED_7,X_INTRODUCED_9,X_INTRODUCED_14,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_24,X_INTRODUCED_26,X_INTRODUCED_29];
array [1..13] of var int: X_INTRODUCED_69 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_2,X_INTRODUCED_6,X_INTRODUCED_8,X_INTRODUCED_10,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_23,X_INTRODUCED_25,X_INTRODUCED_28,X_INTRODUCED_29];
array [1..13] of var int: X_INTRODUCED_72 ::var_is_introduced  = [X_INTRODUCED_2,X_INTRODUCED_4,X_INTRODUCED_6,X_INTRODUCED_8,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_13,X_INTRODUCED_15,X_INTRODUCED_20,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_27,X_INTRODUCED_29];
array [1..20] of var int: X_INTRODUCED_75 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27];
array [1..31] of var int: X_INTRODUCED_78 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29,objective];
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_0,X_INTRODUCED_15],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_0,X_INTRODUCED_23],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_1,X_INTRODUCED_4],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_1,X_INTRODUCED_6],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_1,X_INTRODUCED_13],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_2,X_INTRODUCED_3],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_2,X_INTRODUCED_10],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_2,X_INTRODUCED_11],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_3,X_INTRODUCED_7],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_3,X_INTRODUCED_13],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_3,X_INTRODUCED_28],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_4,X_INTRODUCED_5],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_4,X_INTRODUCED_8],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_4,X_INTRODUCED_11],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_5,X_INTRODUCED_14],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_5,X_INTRODUCED_15],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_6,X_INTRODUCED_7],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_6,X_INTRODUCED_17],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_6,X_INTRODUCED_19],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_7,X_INTRODUCED_9],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_7,X_INTRODUCED_16],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_7,X_INTRODUCED_18],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_8,X_INTRODUCED_12],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_8,X_INTRODUCED_21],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_8,X_INTRODUCED_23],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_9,X_INTRODUCED_20],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_9,X_INTRODUCED_25],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_10,X_INTRODUCED_21],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_11,X_INTRODUCED_12],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_11,X_INTRODUCED_20],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_12,X_INTRODUCED_26],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_13,X_INTRODUCED_27],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_14,X_INTRODUCED_29],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_15,X_INTRODUCED_16],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_15,X_INTRODUCED_17],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_15,X_INTRODUCED_28],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_16,X_INTRODUCED_22],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_16,X_INTRODUCED_27],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_17,X_INTRODUCED_24],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_18,X_INTRODUCED_22],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_18,X_INTRODUCED_25],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_19,X_INTRODUCED_21],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_19,X_INTRODUCED_26],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_20,X_INTRODUCED_29],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_21,X_INTRODUCED_22],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_21,X_INTRODUCED_24],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_22,X_INTRODUCED_29],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_23,X_INTRODUCED_24],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_23,X_INTRODUCED_26],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_24,X_INTRODUCED_25],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_25,X_INTRODUCED_27],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_26,X_INTRODUCED_28],-10);
constraint array_bool_or([X_INTRODUCED_59,X_INTRODUCED_60],true);
constraint array_bool_or([X_INTRODUCED_62,X_INTRODUCED_63],true);
constraint jacop_cumulative(X_INTRODUCED_66,X_INTRODUCED_65,X_INTRODUCED_64,27);
constraint jacop_cumulative(X_INTRODUCED_69,X_INTRODUCED_68,X_INTRODUCED_67,16);
constraint jacop_cumulative(X_INTRODUCED_72,X_INTRODUCED_71,X_INTRODUCED_70,15);
constraint jacop_cumulative(X_INTRODUCED_75,X_INTRODUCED_74,X_INTRODUCED_73,22);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_27,objective],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_28,objective],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_29,objective],-9);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_16,X_INTRODUCED_0],-10,X_INTRODUCED_59):: defines_var(X_INTRODUCED_59);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_0,X_INTRODUCED_16],-10,X_INTRODUCED_60):: defines_var(X_INTRODUCED_60);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_29,X_INTRODUCED_8],-9,X_INTRODUCED_62):: defines_var(X_INTRODUCED_62);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_8,X_INTRODUCED_29],-6,X_INTRODUCED_63):: defines_var(X_INTRODUCED_63);
solve :: int_search(X_INTRODUCED_78,smallest,indomain_min,complete) minimize objective;
