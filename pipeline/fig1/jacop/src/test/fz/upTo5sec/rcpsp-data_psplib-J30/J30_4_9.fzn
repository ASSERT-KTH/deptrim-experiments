predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_32 = [1,-1];
array [1..10] of int: X_INTRODUCED_85 = [9,2,6,9,10,10,3,2,5,9];
array [1..10] of int: X_INTRODUCED_86 = [9,2,8,1,4,1,5,6,1,6];
array [1..7] of int: X_INTRODUCED_88 = [10,4,2,7,3,6,10];
array [1..7] of int: X_INTRODUCED_89 = [4,10,3,4,10,6,3];
array [1..9] of int: X_INTRODUCED_91 = [3,2,9,8,2,10,7,10,1];
array [1..9] of int: X_INTRODUCED_92 = [8,4,2,2,9,10,3,8,3];
array [1..4] of int: X_INTRODUCED_94 = [5,6,3,7];
array [1..4] of int: X_INTRODUCED_95 = [8,3,2,4];
var 0..148: X_INTRODUCED_0;
var 0..148: X_INTRODUCED_1;
var 0..148: X_INTRODUCED_2;
var 0..148: X_INTRODUCED_3;
var 0..148: X_INTRODUCED_4;
var 0..148: X_INTRODUCED_5;
var 0..148: X_INTRODUCED_6;
var 0..148: X_INTRODUCED_7;
var 0..148: X_INTRODUCED_8;
var 0..148: X_INTRODUCED_9;
var 0..148: X_INTRODUCED_10;
var 0..148: X_INTRODUCED_11;
var 0..148: X_INTRODUCED_12;
var 0..148: X_INTRODUCED_13;
var 0..148: X_INTRODUCED_14;
var 0..148: X_INTRODUCED_15;
var 0..148: X_INTRODUCED_16;
var 0..148: X_INTRODUCED_17;
var 0..148: X_INTRODUCED_18;
var 0..148: X_INTRODUCED_19;
var 0..148: X_INTRODUCED_20;
var 0..148: X_INTRODUCED_21;
var 0..148: X_INTRODUCED_22;
var 0..148: X_INTRODUCED_23;
var 0..148: X_INTRODUCED_24;
var 0..148: X_INTRODUCED_25;
var 0..148: X_INTRODUCED_26;
var 0..148: X_INTRODUCED_27;
var 0..148: X_INTRODUCED_28;
var 0..148: X_INTRODUCED_29;
var 0..149: objective:: output_var;
var bool: X_INTRODUCED_59 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_60 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_61 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_62 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_63 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_64 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_66 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_67 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_68 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_69 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_71 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_72 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_73 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_74 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_75 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_76 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_77 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_78 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_79 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_80 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_81 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_82 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_83 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_84 ::var_is_introduced :: is_defined_var;
array [1..30] of var int: s:: output_array([1..30]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29];
array [1..10] of var int: X_INTRODUCED_87 ::var_is_introduced  = [X_INTRODUCED_5,X_INTRODUCED_7,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_18,X_INTRODUCED_20,X_INTRODUCED_22,X_INTRODUCED_25];
array [1..7] of var int: X_INTRODUCED_90 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_2,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_26];
array [1..9] of var int: X_INTRODUCED_93 ::var_is_introduced  = [X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_6,X_INTRODUCED_8,X_INTRODUCED_15,X_INTRODUCED_21,X_INTRODUCED_24,X_INTRODUCED_28,X_INTRODUCED_29];
array [1..4] of var int: X_INTRODUCED_96 ::var_is_introduced  = [X_INTRODUCED_1,X_INTRODUCED_19,X_INTRODUCED_23,X_INTRODUCED_27];
array [1..31] of var int: X_INTRODUCED_98 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29,objective];
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_0,X_INTRODUCED_3],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_0,X_INTRODUCED_4],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_0,X_INTRODUCED_6],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_1,X_INTRODUCED_8],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_1,X_INTRODUCED_13],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_1,X_INTRODUCED_20],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_2,X_INTRODUCED_5],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_2,X_INTRODUCED_21],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_3,X_INTRODUCED_9],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_4,X_INTRODUCED_7],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_4,X_INTRODUCED_9],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_4,X_INTRODUCED_10],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_5,X_INTRODUCED_24],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_6,X_INTRODUCED_14],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_6,X_INTRODUCED_16],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_6,X_INTRODUCED_22],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_7,X_INTRODUCED_26],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_8,X_INTRODUCED_17],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_9,X_INTRODUCED_24],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_10,X_INTRODUCED_11],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_10,X_INTRODUCED_12],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_11,X_INTRODUCED_15],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_11,X_INTRODUCED_28],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_12,X_INTRODUCED_17],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_13,X_INTRODUCED_26],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_14,X_INTRODUCED_19],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_14,X_INTRODUCED_27],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_15,X_INTRODUCED_20],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_16,X_INTRODUCED_18],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_16,X_INTRODUCED_25],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_17,X_INTRODUCED_23],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_18,X_INTRODUCED_26],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_19,X_INTRODUCED_24],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_20,X_INTRODUCED_29],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_21,X_INTRODUCED_29],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_22,X_INTRODUCED_23],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_22,X_INTRODUCED_29],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_23,X_INTRODUCED_25],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_23,X_INTRODUCED_27],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_24,X_INTRODUCED_25],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_25,X_INTRODUCED_28],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_26,X_INTRODUCED_27],-3);
constraint array_bool_or([X_INTRODUCED_59,X_INTRODUCED_60],true);
constraint array_bool_or([X_INTRODUCED_61,X_INTRODUCED_62],true);
constraint array_bool_or([X_INTRODUCED_63,X_INTRODUCED_64],true);
constraint array_bool_or([X_INTRODUCED_66,X_INTRODUCED_67],true);
constraint array_bool_or([X_INTRODUCED_68,X_INTRODUCED_69],true);
constraint array_bool_or([X_INTRODUCED_71,X_INTRODUCED_72],true);
constraint array_bool_or([X_INTRODUCED_73,X_INTRODUCED_74],true);
constraint array_bool_or([X_INTRODUCED_75,X_INTRODUCED_76],true);
constraint array_bool_or([X_INTRODUCED_77,X_INTRODUCED_78],true);
constraint array_bool_or([X_INTRODUCED_79,X_INTRODUCED_80],true);
constraint array_bool_or([X_INTRODUCED_81,X_INTRODUCED_82],true);
constraint array_bool_or([X_INTRODUCED_83,X_INTRODUCED_84],true);
constraint jacop_cumulative(X_INTRODUCED_87,X_INTRODUCED_86,X_INTRODUCED_85,24);
constraint jacop_cumulative(X_INTRODUCED_90,X_INTRODUCED_89,X_INTRODUCED_88,14);
constraint jacop_cumulative(X_INTRODUCED_93,X_INTRODUCED_92,X_INTRODUCED_91,17);
constraint jacop_cumulative(X_INTRODUCED_96,X_INTRODUCED_95,X_INTRODUCED_94,11);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_27,objective],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_28,objective],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_29,objective],-3);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_10,X_INTRODUCED_0],-4,X_INTRODUCED_59):: defines_var(X_INTRODUCED_59);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_0,X_INTRODUCED_10],-4,X_INTRODUCED_60):: defines_var(X_INTRODUCED_60);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_17,X_INTRODUCED_0],-6,X_INTRODUCED_61):: defines_var(X_INTRODUCED_61);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_0,X_INTRODUCED_17],-4,X_INTRODUCED_62):: defines_var(X_INTRODUCED_62);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_26,X_INTRODUCED_0],-3,X_INTRODUCED_63):: defines_var(X_INTRODUCED_63);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_0,X_INTRODUCED_26],-4,X_INTRODUCED_64):: defines_var(X_INTRODUCED_64);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_27,X_INTRODUCED_1],-4,X_INTRODUCED_66):: defines_var(X_INTRODUCED_66);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_1,X_INTRODUCED_27],-8,X_INTRODUCED_67):: defines_var(X_INTRODUCED_67);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_21,X_INTRODUCED_6],-10,X_INTRODUCED_68):: defines_var(X_INTRODUCED_68);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_6,X_INTRODUCED_21],-2,X_INTRODUCED_69):: defines_var(X_INTRODUCED_69);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_28,X_INTRODUCED_6],-8,X_INTRODUCED_71):: defines_var(X_INTRODUCED_71);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_6,X_INTRODUCED_28],-2,X_INTRODUCED_72):: defines_var(X_INTRODUCED_72);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_21,X_INTRODUCED_8],-10,X_INTRODUCED_73):: defines_var(X_INTRODUCED_73);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_8,X_INTRODUCED_21],-2,X_INTRODUCED_74):: defines_var(X_INTRODUCED_74);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_28,X_INTRODUCED_8],-8,X_INTRODUCED_75):: defines_var(X_INTRODUCED_75);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_8,X_INTRODUCED_28],-2,X_INTRODUCED_76):: defines_var(X_INTRODUCED_76);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_26,X_INTRODUCED_10],-3,X_INTRODUCED_77):: defines_var(X_INTRODUCED_77);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_10,X_INTRODUCED_26],-4,X_INTRODUCED_78):: defines_var(X_INTRODUCED_78);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_26,X_INTRODUCED_17],-3,X_INTRODUCED_79):: defines_var(X_INTRODUCED_79);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_17,X_INTRODUCED_26],-6,X_INTRODUCED_80):: defines_var(X_INTRODUCED_80);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_27,X_INTRODUCED_19],-4,X_INTRODUCED_81):: defines_var(X_INTRODUCED_81);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_19,X_INTRODUCED_27],-3,X_INTRODUCED_82):: defines_var(X_INTRODUCED_82);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_28,X_INTRODUCED_21],-8,X_INTRODUCED_83):: defines_var(X_INTRODUCED_83);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_21,X_INTRODUCED_28],-10,X_INTRODUCED_84):: defines_var(X_INTRODUCED_84);
solve :: int_search(X_INTRODUCED_98,smallest,indomain_min,complete) minimize objective;
