predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_32 = [1,-1];
array [1..17] of int: X_INTRODUCED_77 = [3,1,10,4,3,10,1,4,3,4,5,8,10,8,8,10,2];
array [1..17] of int: X_INTRODUCED_78 = [3,4,5,1,10,10,9,10,4,9,7,1,1,1,7,3,8];
array [1..16] of int: X_INTRODUCED_80 = [3,9,6,10,3,9,5,7,2,6,10,8,8,10,3,5];
array [1..16] of int: X_INTRODUCED_81 = [1,3,8,1,10,9,10,6,4,6,9,7,9,1,7,8];
array [1..14] of int: X_INTRODUCED_83 = [5,9,7,9,8,5,3,4,8,3,9,4,3,2];
array [1..14] of int: X_INTRODUCED_84 = [7,5,4,10,6,6,9,7,6,2,9,1,4,8];
array [1..14] of int: X_INTRODUCED_86 = [4,2,9,10,2,9,7,8,2,6,1,2,9,5];
array [1..14] of int: X_INTRODUCED_87 = [7,3,5,10,10,6,7,4,6,1,2,1,7,8];
var 0..163: X_INTRODUCED_0;
var 0..163: X_INTRODUCED_1;
var 0..163: X_INTRODUCED_2;
var 0..163: X_INTRODUCED_3;
var 0..163: X_INTRODUCED_4;
var 0..163: X_INTRODUCED_5;
var 0..163: X_INTRODUCED_6;
var 0..163: X_INTRODUCED_7;
var 0..163: X_INTRODUCED_8;
var 0..163: X_INTRODUCED_9;
var 0..163: X_INTRODUCED_10;
var 0..163: X_INTRODUCED_11;
var 0..163: X_INTRODUCED_12;
var 0..163: X_INTRODUCED_13;
var 0..163: X_INTRODUCED_14;
var 0..163: X_INTRODUCED_15;
var 0..163: X_INTRODUCED_16;
var 0..163: X_INTRODUCED_17;
var 0..163: X_INTRODUCED_18;
var 0..163: X_INTRODUCED_19;
var 0..163: X_INTRODUCED_20;
var 0..163: X_INTRODUCED_21;
var 0..163: X_INTRODUCED_22;
var 0..163: X_INTRODUCED_23;
var 0..163: X_INTRODUCED_24;
var 0..163: X_INTRODUCED_25;
var 0..163: X_INTRODUCED_26;
var 0..163: X_INTRODUCED_27;
var 0..163: X_INTRODUCED_28;
var 0..163: X_INTRODUCED_29;
var 0..164: objective:: output_var;
var bool: X_INTRODUCED_59 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_60 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_61 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_62 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_63 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_64 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_66 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_67 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_68 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_69 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_71 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_72 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_74 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_75 ::var_is_introduced :: is_defined_var;
array [1..30] of var int: s:: output_array([1..30]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29];
array [1..17] of var int: X_INTRODUCED_79 ::var_is_introduced  = [X_INTRODUCED_2,X_INTRODUCED_5,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_14,X_INTRODUCED_16,X_INTRODUCED_18,X_INTRODUCED_21,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29];
array [1..16] of var int: X_INTRODUCED_82 ::var_is_introduced  = [X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_4,X_INTRODUCED_8,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_27,X_INTRODUCED_29];
array [1..14] of var int: X_INTRODUCED_85 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_3,X_INTRODUCED_6,X_INTRODUCED_9,X_INTRODUCED_13,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_18,X_INTRODUCED_20,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_29];
array [1..14] of var int: X_INTRODUCED_88 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_13,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_24,X_INTRODUCED_27,X_INTRODUCED_29];
array [1..31] of var int: X_INTRODUCED_90 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29,objective];
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_0,X_INTRODUCED_5],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_0,X_INTRODUCED_6],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_0,X_INTRODUCED_7],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_1,X_INTRODUCED_3],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_1,X_INTRODUCED_4],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_1,X_INTRODUCED_8],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_2,X_INTRODUCED_6],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_2,X_INTRODUCED_11],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_2,X_INTRODUCED_26],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_3,X_INTRODUCED_5],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_3,X_INTRODUCED_13],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_3,X_INTRODUCED_21],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_4,X_INTRODUCED_6],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_4,X_INTRODUCED_11],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_4,X_INTRODUCED_19],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_5,X_INTRODUCED_9],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_5,X_INTRODUCED_12],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_6,X_INTRODUCED_13],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_6,X_INTRODUCED_15],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_6,X_INTRODUCED_27],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_7,X_INTRODUCED_14],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_7,X_INTRODUCED_17],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_7,X_INTRODUCED_20],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_8,X_INTRODUCED_12],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_8,X_INTRODUCED_16],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_8,X_INTRODUCED_18],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_9,X_INTRODUCED_10],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_9,X_INTRODUCED_14],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_9,X_INTRODUCED_20],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_10,X_INTRODUCED_16],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_10,X_INTRODUCED_24],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_11,X_INTRODUCED_13],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_11,X_INTRODUCED_15],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_11,X_INTRODUCED_23],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_12,X_INTRODUCED_20],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_13,X_INTRODUCED_17],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_13,X_INTRODUCED_24],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_14,X_INTRODUCED_16],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_14,X_INTRODUCED_23],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_14,X_INTRODUCED_26],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_15,X_INTRODUCED_17],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_15,X_INTRODUCED_21],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_16,X_INTRODUCED_19],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_16,X_INTRODUCED_27],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_17,X_INTRODUCED_22],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_17,X_INTRODUCED_28],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_18,X_INTRODUCED_19],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_18,X_INTRODUCED_21],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_19,X_INTRODUCED_22],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_19,X_INTRODUCED_25],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_20,X_INTRODUCED_23],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_20,X_INTRODUCED_26],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_20,X_INTRODUCED_27],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_21,X_INTRODUCED_22],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_21,X_INTRODUCED_24],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_21,X_INTRODUCED_25],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_22,X_INTRODUCED_29],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_23,X_INTRODUCED_25],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_23,X_INTRODUCED_28],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_24,X_INTRODUCED_28],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_25,X_INTRODUCED_29],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_26,X_INTRODUCED_29],-4);
constraint array_bool_or([X_INTRODUCED_59,X_INTRODUCED_60],true);
constraint array_bool_or([X_INTRODUCED_61,X_INTRODUCED_62],true);
constraint array_bool_or([X_INTRODUCED_63,X_INTRODUCED_64],true);
constraint array_bool_or([X_INTRODUCED_66,X_INTRODUCED_67],true);
constraint array_bool_or([X_INTRODUCED_68,X_INTRODUCED_69],true);
constraint array_bool_or([X_INTRODUCED_71,X_INTRODUCED_72],true);
constraint array_bool_or([X_INTRODUCED_74,X_INTRODUCED_75],true);
constraint jacop_cumulative(X_INTRODUCED_79,X_INTRODUCED_78,X_INTRODUCED_77,18);
constraint jacop_cumulative(X_INTRODUCED_82,X_INTRODUCED_81,X_INTRODUCED_80,23);
constraint jacop_cumulative(X_INTRODUCED_85,X_INTRODUCED_84,X_INTRODUCED_83,18);
constraint jacop_cumulative(X_INTRODUCED_88,X_INTRODUCED_87,X_INTRODUCED_86,18);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_27,objective],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_28,objective],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_29,objective],-8);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_9,X_INTRODUCED_3],-10,X_INTRODUCED_59):: defines_var(X_INTRODUCED_59);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_3,X_INTRODUCED_9],-5,X_INTRODUCED_60):: defines_var(X_INTRODUCED_60);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_10,X_INTRODUCED_7],-10,X_INTRODUCED_61):: defines_var(X_INTRODUCED_61);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_7,X_INTRODUCED_10],-5,X_INTRODUCED_62):: defines_var(X_INTRODUCED_62);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_24,X_INTRODUCED_7],-1,X_INTRODUCED_63):: defines_var(X_INTRODUCED_63);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_7,X_INTRODUCED_24],-5,X_INTRODUCED_64):: defines_var(X_INTRODUCED_64);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_28,X_INTRODUCED_7],-3,X_INTRODUCED_66):: defines_var(X_INTRODUCED_66);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_7,X_INTRODUCED_28],-5,X_INTRODUCED_67):: defines_var(X_INTRODUCED_67);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_13,X_INTRODUCED_9],-6,X_INTRODUCED_68):: defines_var(X_INTRODUCED_68);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_9,X_INTRODUCED_13],-10,X_INTRODUCED_69):: defines_var(X_INTRODUCED_69);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_27,X_INTRODUCED_9],-7,X_INTRODUCED_71):: defines_var(X_INTRODUCED_71);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_9,X_INTRODUCED_27],-10,X_INTRODUCED_72):: defines_var(X_INTRODUCED_72);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_28,X_INTRODUCED_10],-3,X_INTRODUCED_74):: defines_var(X_INTRODUCED_74);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_10,X_INTRODUCED_28],-10,X_INTRODUCED_75):: defines_var(X_INTRODUCED_75);
solve :: int_search(X_INTRODUCED_90,smallest,indomain_min,complete) minimize objective;
