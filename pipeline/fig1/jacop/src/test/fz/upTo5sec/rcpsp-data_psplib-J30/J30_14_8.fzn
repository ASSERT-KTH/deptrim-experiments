predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_32 = [1,-1];
array [1..30] of int: X_INTRODUCED_59 = [3,10,5,5,9,1,6,8,3,4,7,10,6,6,6,6,7,4,9,3,8,3,6,9,7,4,10,10,1,4];
array [1..30] of int: X_INTRODUCED_60 = [7,9,7,4,9,7,5,7,5,4,9,3,2,5,8,2,9,1,10,5,2,2,10,8,1,9,4,8,4,1];
array [1..30] of int: X_INTRODUCED_62 = [9,5,5,4,8,9,8,5,7,9,9,2,2,5,8,5,8,7,6,1,1,4,3,4,2,1,5,4,3,2];
array [1..30] of int: X_INTRODUCED_64 = [6,8,9,8,10,5,6,7,2,8,7,5,4,5,7,2,6,4,5,8,2,9,4,8,9,4,7,5,1,3];
array [1..30] of int: X_INTRODUCED_66 = [5,10,2,8,4,5,8,2,6,5,4,3,9,10,4,3,1,2,3,4,2,10,3,8,5,2,6,7,5,8];
var 0..166: X_INTRODUCED_0;
var 0..166: X_INTRODUCED_1;
var 0..166: X_INTRODUCED_2;
var 0..166: X_INTRODUCED_3;
var 0..166: X_INTRODUCED_4;
var 0..166: X_INTRODUCED_5;
var 0..166: X_INTRODUCED_6;
var 0..166: X_INTRODUCED_7;
var 0..166: X_INTRODUCED_8;
var 0..166: X_INTRODUCED_9;
var 0..166: X_INTRODUCED_10;
var 0..166: X_INTRODUCED_11;
var 0..166: X_INTRODUCED_12;
var 0..166: X_INTRODUCED_13;
var 0..166: X_INTRODUCED_14;
var 0..166: X_INTRODUCED_15;
var 0..166: X_INTRODUCED_16;
var 0..166: X_INTRODUCED_17;
var 0..166: X_INTRODUCED_18;
var 0..166: X_INTRODUCED_19;
var 0..166: X_INTRODUCED_20;
var 0..166: X_INTRODUCED_21;
var 0..166: X_INTRODUCED_22;
var 0..166: X_INTRODUCED_23;
var 0..166: X_INTRODUCED_24;
var 0..166: X_INTRODUCED_25;
var 0..166: X_INTRODUCED_26;
var 0..166: X_INTRODUCED_27;
var 0..166: X_INTRODUCED_28;
var 0..166: X_INTRODUCED_29;
var 0..167: objective:: output_var;
array [1..30] of var int: s:: output_array([1..30]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29];
array [1..31] of var int: X_INTRODUCED_71 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29,objective];
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_0,X_INTRODUCED_5],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_0,X_INTRODUCED_6],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_0,X_INTRODUCED_10],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_1,X_INTRODUCED_3],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_1,X_INTRODUCED_10],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_2,X_INTRODUCED_4],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_3,X_INTRODUCED_28],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_4,X_INTRODUCED_7],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_4,X_INTRODUCED_12],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_4,X_INTRODUCED_14],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_5,X_INTRODUCED_27],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_6,X_INTRODUCED_11],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_6,X_INTRODUCED_21],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_6,X_INTRODUCED_23],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_7,X_INTRODUCED_8],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_7,X_INTRODUCED_9],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_7,X_INTRODUCED_16],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_8,X_INTRODUCED_18],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_9,X_INTRODUCED_20],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_9,X_INTRODUCED_25],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_9,X_INTRODUCED_26],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_10,X_INTRODUCED_12],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_11,X_INTRODUCED_13],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_11,X_INTRODUCED_17],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_11,X_INTRODUCED_19],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_12,X_INTRODUCED_15],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_13,X_INTRODUCED_27],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_14,X_INTRODUCED_15],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_15,X_INTRODUCED_22],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_16,X_INTRODUCED_25],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_17,X_INTRODUCED_18],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_18,X_INTRODUCED_20],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_19,X_INTRODUCED_24],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_20,X_INTRODUCED_22],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_20,X_INTRODUCED_24],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_21,X_INTRODUCED_26],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_22,X_INTRODUCED_28],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_23,X_INTRODUCED_24],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_23,X_INTRODUCED_29],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_24,X_INTRODUCED_27],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_25,X_INTRODUCED_29],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_26,X_INTRODUCED_29],-4);
constraint jacop_cumulative(s,X_INTRODUCED_60,X_INTRODUCED_59,27);
constraint jacop_cumulative(s,X_INTRODUCED_60,X_INTRODUCED_62,25);
constraint jacop_cumulative(s,X_INTRODUCED_60,X_INTRODUCED_64,31);
constraint jacop_cumulative(s,X_INTRODUCED_60,X_INTRODUCED_66,26);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_27,objective],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_28,objective],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_29,objective],-1);
solve :: int_search(X_INTRODUCED_71,smallest,indomain_min,complete) minimize objective;
