var 1..2: X_INTRODUCED_1;
var 1..2: X_INTRODUCED_2;
var 1..2: X_INTRODUCED_3;
var 1..2: X_INTRODUCED_4;
var 1..2: X_INTRODUCED_5;
var 1..2: X_INTRODUCED_6;
var 1..2: X_INTRODUCED_7;
var 1..2: X_INTRODUCED_8;
var bool: X_INTRODUCED_13 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_14 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_15 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_16 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_17 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_18 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_21 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_22 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_24 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_25 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_26 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_27 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_30 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_31 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_33 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_34 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_41 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_42 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_43 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_44 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_45 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_46 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_48 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_49 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_51 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_52 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_53 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_54 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_56 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_57 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_59 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_60 ::var_is_introduced :: is_defined_var;
array [1..9] of var int: x:: output_array([1..9]) = [1,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8];
constraint int_lin_eq([1,1,2,2,1,5,2,7,-1,-1,-2,-2,-1,-5,-2,-7],[X_INTRODUCED_14,X_INTRODUCED_16,X_INTRODUCED_18,X_INTRODUCED_22,X_INTRODUCED_25,X_INTRODUCED_27,X_INTRODUCED_31,X_INTRODUCED_34,X_INTRODUCED_42,X_INTRODUCED_44,X_INTRODUCED_46,X_INTRODUCED_49,X_INTRODUCED_52,X_INTRODUCED_54,X_INTRODUCED_57,X_INTRODUCED_60],-3);
constraint int_eq_reif(X_INTRODUCED_1,1,X_INTRODUCED_13):: defines_var(X_INTRODUCED_13);
constraint bool2int(X_INTRODUCED_13,X_INTRODUCED_14):: defines_var(X_INTRODUCED_14);
constraint int_eq_reif(X_INTRODUCED_2,1,X_INTRODUCED_15):: defines_var(X_INTRODUCED_15);
constraint bool2int(X_INTRODUCED_15,X_INTRODUCED_16):: defines_var(X_INTRODUCED_16);
constraint int_eq_reif(X_INTRODUCED_3,1,X_INTRODUCED_17):: defines_var(X_INTRODUCED_17);
constraint bool2int(X_INTRODUCED_17,X_INTRODUCED_18):: defines_var(X_INTRODUCED_18);
constraint int_eq_reif(X_INTRODUCED_4,1,X_INTRODUCED_21):: defines_var(X_INTRODUCED_21);
constraint bool2int(X_INTRODUCED_21,X_INTRODUCED_22):: defines_var(X_INTRODUCED_22);
constraint int_eq_reif(X_INTRODUCED_5,1,X_INTRODUCED_24):: defines_var(X_INTRODUCED_24);
constraint bool2int(X_INTRODUCED_24,X_INTRODUCED_25):: defines_var(X_INTRODUCED_25);
constraint int_eq_reif(X_INTRODUCED_6,1,X_INTRODUCED_26):: defines_var(X_INTRODUCED_26);
constraint bool2int(X_INTRODUCED_26,X_INTRODUCED_27):: defines_var(X_INTRODUCED_27);
constraint int_eq_reif(X_INTRODUCED_7,1,X_INTRODUCED_30):: defines_var(X_INTRODUCED_30);
constraint bool2int(X_INTRODUCED_30,X_INTRODUCED_31):: defines_var(X_INTRODUCED_31);
constraint int_eq_reif(X_INTRODUCED_8,1,X_INTRODUCED_33):: defines_var(X_INTRODUCED_33);
constraint bool2int(X_INTRODUCED_33,X_INTRODUCED_34):: defines_var(X_INTRODUCED_34);
constraint int_eq_reif(X_INTRODUCED_1,2,X_INTRODUCED_41):: defines_var(X_INTRODUCED_41);
constraint bool2int(X_INTRODUCED_41,X_INTRODUCED_42):: defines_var(X_INTRODUCED_42);
constraint int_eq_reif(X_INTRODUCED_2,2,X_INTRODUCED_43):: defines_var(X_INTRODUCED_43);
constraint bool2int(X_INTRODUCED_43,X_INTRODUCED_44):: defines_var(X_INTRODUCED_44);
constraint int_eq_reif(X_INTRODUCED_3,2,X_INTRODUCED_45):: defines_var(X_INTRODUCED_45);
constraint bool2int(X_INTRODUCED_45,X_INTRODUCED_46):: defines_var(X_INTRODUCED_46);
constraint int_eq_reif(X_INTRODUCED_4,2,X_INTRODUCED_48):: defines_var(X_INTRODUCED_48);
constraint bool2int(X_INTRODUCED_48,X_INTRODUCED_49):: defines_var(X_INTRODUCED_49);
constraint int_eq_reif(X_INTRODUCED_5,2,X_INTRODUCED_51):: defines_var(X_INTRODUCED_51);
constraint bool2int(X_INTRODUCED_51,X_INTRODUCED_52):: defines_var(X_INTRODUCED_52);
constraint int_eq_reif(X_INTRODUCED_6,2,X_INTRODUCED_53):: defines_var(X_INTRODUCED_53);
constraint bool2int(X_INTRODUCED_53,X_INTRODUCED_54):: defines_var(X_INTRODUCED_54);
constraint int_eq_reif(X_INTRODUCED_7,2,X_INTRODUCED_56):: defines_var(X_INTRODUCED_56);
constraint bool2int(X_INTRODUCED_56,X_INTRODUCED_57):: defines_var(X_INTRODUCED_57);
constraint int_eq_reif(X_INTRODUCED_8,2,X_INTRODUCED_59):: defines_var(X_INTRODUCED_59);
constraint bool2int(X_INTRODUCED_59,X_INTRODUCED_60):: defines_var(X_INTRODUCED_60);
solve  satisfy;
