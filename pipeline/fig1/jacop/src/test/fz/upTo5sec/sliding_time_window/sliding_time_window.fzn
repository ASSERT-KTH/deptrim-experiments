array [1..10] of int: X_INTRODUCED_51 = [1,-1,-1,-1,-1,-1,-1,-1,-1,-1];
var 0..6: X_INTRODUCED_10:: is_defined_var;
var 0..6: X_INTRODUCED_11:: is_defined_var;
var 0..6: X_INTRODUCED_12:: is_defined_var;
var 0..6: X_INTRODUCED_13:: is_defined_var;
var 0..6: X_INTRODUCED_14:: is_defined_var;
var 0..6: X_INTRODUCED_15:: is_defined_var;
var 0..6: X_INTRODUCED_16:: is_defined_var;
var 0..6: X_INTRODUCED_17:: is_defined_var;
var 0..6: X_INTRODUCED_18:: is_defined_var;
var 0..6: X_INTRODUCED_19:: is_defined_var;
var 0..6: X_INTRODUCED_20:: is_defined_var;
var 6..6: limitx:: output_var;
var bool: X_INTRODUCED_76 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_77 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_78 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_80 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_81 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_82 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_84 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_85 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_86 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_88 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_89 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_90 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_92 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_93 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_94 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_96 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_97 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_98 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_100 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_101 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_102 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_104 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_105 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_106 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_108 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_109 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_110 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_112 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_113 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_114 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_116 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_117 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_118 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_120 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_121 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_122 ::var_is_introduced :: is_defined_var;
var 0..0: X_INTRODUCED_136 ::var_is_introduced  = 0;
array [1..10] of var int: tasks:: output_array([1..5,1..2]) = [10,3,5,1,6,2,14,2,2,2];
array [1..16] of var int: sums:: output_array([1..16]) = [X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_122,0,0,0,0];
constraint int_lin_eq(X_INTRODUCED_51,[X_INTRODUCED_10,X_INTRODUCED_78,X_INTRODUCED_82,X_INTRODUCED_86,X_INTRODUCED_90,X_INTRODUCED_94,X_INTRODUCED_98,X_INTRODUCED_102,X_INTRODUCED_106,X_INTRODUCED_110],0):: defines_var(X_INTRODUCED_10);
constraint int_lin_eq(X_INTRODUCED_51,[X_INTRODUCED_11,X_INTRODUCED_82,X_INTRODUCED_86,X_INTRODUCED_90,X_INTRODUCED_94,X_INTRODUCED_98,X_INTRODUCED_102,X_INTRODUCED_106,X_INTRODUCED_110,X_INTRODUCED_114],0):: defines_var(X_INTRODUCED_11);
constraint int_lin_eq(X_INTRODUCED_51,[X_INTRODUCED_12,X_INTRODUCED_86,X_INTRODUCED_90,X_INTRODUCED_94,X_INTRODUCED_98,X_INTRODUCED_102,X_INTRODUCED_106,X_INTRODUCED_110,X_INTRODUCED_114,X_INTRODUCED_118],0):: defines_var(X_INTRODUCED_12);
constraint int_lin_eq(X_INTRODUCED_51,[X_INTRODUCED_13,X_INTRODUCED_90,X_INTRODUCED_94,X_INTRODUCED_98,X_INTRODUCED_102,X_INTRODUCED_106,X_INTRODUCED_110,X_INTRODUCED_114,X_INTRODUCED_118,X_INTRODUCED_122],0):: defines_var(X_INTRODUCED_13);
constraint int_lin_eq([1,-1,-1,-1,-1,-1,-1,-1,-1],[X_INTRODUCED_14,X_INTRODUCED_94,X_INTRODUCED_98,X_INTRODUCED_102,X_INTRODUCED_106,X_INTRODUCED_110,X_INTRODUCED_114,X_INTRODUCED_118,X_INTRODUCED_122],0):: defines_var(X_INTRODUCED_14);
constraint int_lin_eq([1,-1,-1,-1,-1,-1,-1,-1],[X_INTRODUCED_15,X_INTRODUCED_98,X_INTRODUCED_102,X_INTRODUCED_106,X_INTRODUCED_110,X_INTRODUCED_114,X_INTRODUCED_118,X_INTRODUCED_122],0):: defines_var(X_INTRODUCED_15);
constraint int_lin_eq([1,-1,-1,-1,-1,-1,-1],[X_INTRODUCED_16,X_INTRODUCED_102,X_INTRODUCED_106,X_INTRODUCED_110,X_INTRODUCED_114,X_INTRODUCED_118,X_INTRODUCED_122],0):: defines_var(X_INTRODUCED_16);
constraint int_lin_eq([1,-1,-1,-1,-1,-1],[X_INTRODUCED_17,X_INTRODUCED_106,X_INTRODUCED_110,X_INTRODUCED_114,X_INTRODUCED_118,X_INTRODUCED_122],0):: defines_var(X_INTRODUCED_17);
constraint int_lin_eq([1,-1,-1,-1,-1],[X_INTRODUCED_18,X_INTRODUCED_110,X_INTRODUCED_114,X_INTRODUCED_118,X_INTRODUCED_122],0):: defines_var(X_INTRODUCED_18);
constraint int_lin_eq([1,-1,-1,-1],[X_INTRODUCED_19,X_INTRODUCED_114,X_INTRODUCED_118,X_INTRODUCED_122],0):: defines_var(X_INTRODUCED_19);
constraint int_lin_eq([1,-1,-1],[X_INTRODUCED_20,X_INTRODUCED_118,X_INTRODUCED_122],0):: defines_var(X_INTRODUCED_20);
constraint int_le_reif(10,1,X_INTRODUCED_76):: defines_var(X_INTRODUCED_76);
constraint array_bool_and([X_INTRODUCED_76],X_INTRODUCED_77):: defines_var(X_INTRODUCED_77);
constraint bool2int(X_INTRODUCED_77,X_INTRODUCED_78):: defines_var(X_INTRODUCED_78);
constraint int_le_reif(10,2,X_INTRODUCED_80):: defines_var(X_INTRODUCED_80);
constraint array_bool_and([X_INTRODUCED_80],X_INTRODUCED_81):: defines_var(X_INTRODUCED_81);
constraint bool2int(X_INTRODUCED_81,X_INTRODUCED_82):: defines_var(X_INTRODUCED_82);
constraint int_le_reif(10,3,X_INTRODUCED_84):: defines_var(X_INTRODUCED_84);
constraint array_bool_and([X_INTRODUCED_84],X_INTRODUCED_85):: defines_var(X_INTRODUCED_85);
constraint bool2int(X_INTRODUCED_85,X_INTRODUCED_86):: defines_var(X_INTRODUCED_86);
constraint int_le_reif(10,4,X_INTRODUCED_88):: defines_var(X_INTRODUCED_88);
constraint array_bool_and([X_INTRODUCED_88],X_INTRODUCED_89):: defines_var(X_INTRODUCED_89);
constraint bool2int(X_INTRODUCED_89,X_INTRODUCED_90):: defines_var(X_INTRODUCED_90);
constraint int_le_reif(10,5,X_INTRODUCED_92):: defines_var(X_INTRODUCED_92);
constraint array_bool_and([X_INTRODUCED_92],X_INTRODUCED_93):: defines_var(X_INTRODUCED_93);
constraint bool2int(X_INTRODUCED_93,X_INTRODUCED_94):: defines_var(X_INTRODUCED_94);
constraint int_le_reif(10,6,X_INTRODUCED_96):: defines_var(X_INTRODUCED_96);
constraint array_bool_and([X_INTRODUCED_96],X_INTRODUCED_97):: defines_var(X_INTRODUCED_97);
constraint bool2int(X_INTRODUCED_97,X_INTRODUCED_98):: defines_var(X_INTRODUCED_98);
constraint int_le_reif(10,7,X_INTRODUCED_100):: defines_var(X_INTRODUCED_100);
constraint array_bool_and([X_INTRODUCED_100],X_INTRODUCED_101):: defines_var(X_INTRODUCED_101);
constraint bool2int(X_INTRODUCED_101,X_INTRODUCED_102):: defines_var(X_INTRODUCED_102);
constraint int_le_reif(10,8,X_INTRODUCED_104):: defines_var(X_INTRODUCED_104);
constraint array_bool_and([X_INTRODUCED_104],X_INTRODUCED_105):: defines_var(X_INTRODUCED_105);
constraint bool2int(X_INTRODUCED_105,X_INTRODUCED_106):: defines_var(X_INTRODUCED_106);
constraint int_le_reif(10,9,X_INTRODUCED_108):: defines_var(X_INTRODUCED_108);
constraint array_bool_and([X_INTRODUCED_108],X_INTRODUCED_109):: defines_var(X_INTRODUCED_109);
constraint bool2int(X_INTRODUCED_109,X_INTRODUCED_110):: defines_var(X_INTRODUCED_110);
constraint int_le_reif(10,10,X_INTRODUCED_112):: defines_var(X_INTRODUCED_112);
constraint array_bool_and([X_INTRODUCED_112],X_INTRODUCED_113):: defines_var(X_INTRODUCED_113);
constraint bool2int(X_INTRODUCED_113,X_INTRODUCED_114):: defines_var(X_INTRODUCED_114);
constraint int_le_reif(10,11,X_INTRODUCED_116):: defines_var(X_INTRODUCED_116);
constraint array_bool_and([X_INTRODUCED_116],X_INTRODUCED_117):: defines_var(X_INTRODUCED_117);
constraint bool2int(X_INTRODUCED_117,X_INTRODUCED_118):: defines_var(X_INTRODUCED_118);
constraint int_le_reif(10,12,X_INTRODUCED_120):: defines_var(X_INTRODUCED_120);
constraint array_bool_and([X_INTRODUCED_120],X_INTRODUCED_121):: defines_var(X_INTRODUCED_121);
constraint bool2int(X_INTRODUCED_121,X_INTRODUCED_122):: defines_var(X_INTRODUCED_122);
solve  satisfy;
