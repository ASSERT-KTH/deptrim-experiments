array [1..2] of int: X_INTRODUCED_10 = [1,-1];
var 1..1: X_INTRODUCED_0;
var 1..1: X_INTRODUCED_1;
var 1..1: X_INTRODUCED_2;
var 1..1: X_INTRODUCED_3;
var 1..4: X_INTRODUCED_5;
var 1..4: X_INTRODUCED_6;
var 1..4: X_INTRODUCED_7;
var bool: X_INTRODUCED_11 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_13 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_15 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_17 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_18 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_20 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_21 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_23 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_25 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_27 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_29 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_31 ::var_is_introduced :: is_defined_var;
array [1..4] of var int: grid:: output_array([1..2,1..2]) = [1,1,1,1];
constraint array_bool_or([X_INTRODUCED_13,X_INTRODUCED_17],true);
constraint array_bool_or([X_INTRODUCED_20,X_INTRODUCED_23],true);
constraint array_bool_or([X_INTRODUCED_27,X_INTRODUCED_31],true);
constraint int_lin_eq_reif([1],[X_INTRODUCED_5],2,X_INTRODUCED_11):: defines_var(X_INTRODUCED_11);
constraint array_bool_and([X_INTRODUCED_11],X_INTRODUCED_13):: defines_var(X_INTRODUCED_13);
constraint int_lin_eq_reif(X_INTRODUCED_10,[X_INTRODUCED_5,X_INTRODUCED_7],1,X_INTRODUCED_15):: defines_var(X_INTRODUCED_15);
constraint array_bool_and([X_INTRODUCED_15],X_INTRODUCED_17):: defines_var(X_INTRODUCED_17);
constraint int_lin_eq_reif([1],[X_INTRODUCED_6],2,X_INTRODUCED_18):: defines_var(X_INTRODUCED_18);
constraint array_bool_and([X_INTRODUCED_18],X_INTRODUCED_20):: defines_var(X_INTRODUCED_20);
constraint int_lin_eq_reif(X_INTRODUCED_10,[X_INTRODUCED_6,X_INTRODUCED_7],1,X_INTRODUCED_21):: defines_var(X_INTRODUCED_21);
constraint array_bool_and([X_INTRODUCED_21],X_INTRODUCED_23):: defines_var(X_INTRODUCED_23);
constraint int_lin_eq_reif(X_INTRODUCED_10,[X_INTRODUCED_7,X_INTRODUCED_5],1,X_INTRODUCED_25):: defines_var(X_INTRODUCED_25);
constraint array_bool_and([X_INTRODUCED_25],X_INTRODUCED_27):: defines_var(X_INTRODUCED_27);
constraint int_lin_eq_reif(X_INTRODUCED_10,[X_INTRODUCED_7,X_INTRODUCED_6],1,X_INTRODUCED_29):: defines_var(X_INTRODUCED_29);
constraint array_bool_and([X_INTRODUCED_29],X_INTRODUCED_31):: defines_var(X_INTRODUCED_31);
solve :: int_search([X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3],first_fail,indomain_split,complete) satisfy;
