var 1..1: X_INTRODUCED_0;
var 1..3: X_INTRODUCED_1;
var 2..2: X_INTRODUCED_2;
var {1,3,4}: X_INTRODUCED_3;
var 3..3: X_INTRODUCED_4;
var 2..3: X_INTRODUCED_5;
var 4..4: X_INTRODUCED_6;
var 3..4: X_INTRODUCED_7;
var 5..5: X_INTRODUCED_8;
var 1..2: X_INTRODUCED_10;
var 1..2: X_INTRODUCED_12;
var 1..2: X_INTRODUCED_14;
var 1..2: X_INTRODUCED_16;
var bool: X_INTRODUCED_21 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_22 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_23 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_25 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_26 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_27 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_29 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_30 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_31 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_32 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_33 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_34 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_35 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_36 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_37 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_39 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_40 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_41 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_42 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_43 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_44 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_45 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_46 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_47 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_49 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_50 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_51 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_52 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_53 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_54 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_55 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_56 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_57 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_58 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_59 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_60 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_77 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_78 ::var_is_introduced :: is_defined_var;
var 1..1: X_INTRODUCED_84 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_94 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_95 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_65 ::var_is_introduced :: is_defined_var = false;
var bool: X_INTRODUCED_66 ::var_is_introduced :: is_defined_var = false;
var bool: X_INTRODUCED_68 ::var_is_introduced :: is_defined_var = false;
var bool: X_INTRODUCED_69 ::var_is_introduced :: is_defined_var = false;
var bool: X_INTRODUCED_70 ::var_is_introduced  = true;
var bool: X_INTRODUCED_73 ::var_is_introduced :: is_defined_var = false;
var bool: X_INTRODUCED_75 ::var_is_introduced :: is_defined_var = false;
var bool: X_INTRODUCED_80 ::var_is_introduced :: is_defined_var = false;
var bool: X_INTRODUCED_82 ::var_is_introduced  = true;
array [1..9] of var int: grid:: output_array([1..3,1..3]) = [1,X_INTRODUCED_1,2,X_INTRODUCED_3,3,X_INTRODUCED_5,4,X_INTRODUCED_7,5];
constraint array_bool_or([X_INTRODUCED_23,X_INTRODUCED_27,X_INTRODUCED_31],true);
constraint array_bool_or([X_INTRODUCED_34,X_INTRODUCED_37,X_INTRODUCED_41],true);
constraint array_bool_or([X_INTRODUCED_44,X_INTRODUCED_47,X_INTRODUCED_51],true);
constraint array_bool_or([X_INTRODUCED_54,X_INTRODUCED_57,X_INTRODUCED_60],true);
constraint int_lin_eq([1,1],[X_INTRODUCED_94,X_INTRODUCED_95],1);
constraint int_ne(X_INTRODUCED_1,2);
constraint int_ne(X_INTRODUCED_3,2);
constraint int_ne(X_INTRODUCED_5,2);
constraint int_ne(X_INTRODUCED_1,3);
constraint int_ne(X_INTRODUCED_3,3);
constraint int_ne(X_INTRODUCED_5,3);
constraint int_ne(X_INTRODUCED_7,3);
constraint int_ne(X_INTRODUCED_3,4);
constraint int_ne(X_INTRODUCED_7,4);
constraint int_lin_eq_reif([1],[X_INTRODUCED_10],2,X_INTRODUCED_21):: defines_var(X_INTRODUCED_21);
constraint int_eq_reif(X_INTRODUCED_1,2,X_INTRODUCED_22):: defines_var(X_INTRODUCED_22);
constraint array_bool_and([X_INTRODUCED_21,X_INTRODUCED_22],X_INTRODUCED_23):: defines_var(X_INTRODUCED_23);
constraint int_lin_eq_reif([1],[X_INTRODUCED_10],2,X_INTRODUCED_25):: defines_var(X_INTRODUCED_25);
constraint int_eq_reif(X_INTRODUCED_1,1,X_INTRODUCED_26):: defines_var(X_INTRODUCED_26);
constraint array_bool_and([X_INTRODUCED_25,X_INTRODUCED_26],X_INTRODUCED_27):: defines_var(X_INTRODUCED_27);
constraint int_lin_eq_reif([1],[X_INTRODUCED_10],2,X_INTRODUCED_29):: defines_var(X_INTRODUCED_29);
constraint int_eq_reif(X_INTRODUCED_1,3,X_INTRODUCED_30):: defines_var(X_INTRODUCED_30);
constraint array_bool_and([X_INTRODUCED_29,X_INTRODUCED_30],X_INTRODUCED_31):: defines_var(X_INTRODUCED_31);
constraint int_lin_eq_reif([1],[X_INTRODUCED_12],2,X_INTRODUCED_32):: defines_var(X_INTRODUCED_32);
constraint int_eq_reif(X_INTRODUCED_3,1,X_INTRODUCED_33):: defines_var(X_INTRODUCED_33);
constraint array_bool_and([X_INTRODUCED_32,X_INTRODUCED_33],X_INTRODUCED_34):: defines_var(X_INTRODUCED_34);
constraint int_lin_eq_reif([1],[X_INTRODUCED_12],2,X_INTRODUCED_35):: defines_var(X_INTRODUCED_35);
constraint int_eq_reif(X_INTRODUCED_3,3,X_INTRODUCED_36):: defines_var(X_INTRODUCED_36);
constraint array_bool_and([X_INTRODUCED_35,X_INTRODUCED_36],X_INTRODUCED_37):: defines_var(X_INTRODUCED_37);
constraint int_lin_eq_reif([1],[X_INTRODUCED_12],2,X_INTRODUCED_39):: defines_var(X_INTRODUCED_39);
constraint int_eq_reif(X_INTRODUCED_3,4,X_INTRODUCED_40):: defines_var(X_INTRODUCED_40);
constraint array_bool_and([X_INTRODUCED_39,X_INTRODUCED_40],X_INTRODUCED_41):: defines_var(X_INTRODUCED_41);
constraint int_lin_eq_reif([1],[X_INTRODUCED_14],2,X_INTRODUCED_42):: defines_var(X_INTRODUCED_42);
constraint int_eq_reif(X_INTRODUCED_5,2,X_INTRODUCED_43):: defines_var(X_INTRODUCED_43);
constraint array_bool_and([X_INTRODUCED_42,X_INTRODUCED_43],X_INTRODUCED_44):: defines_var(X_INTRODUCED_44);
constraint int_lin_eq_reif([1],[X_INTRODUCED_14],2,X_INTRODUCED_45):: defines_var(X_INTRODUCED_45);
constraint int_eq_reif(X_INTRODUCED_5,3,X_INTRODUCED_46):: defines_var(X_INTRODUCED_46);
constraint array_bool_and([X_INTRODUCED_45,X_INTRODUCED_46],X_INTRODUCED_47):: defines_var(X_INTRODUCED_47);
constraint int_lin_eq_reif([1],[X_INTRODUCED_14],2,X_INTRODUCED_49):: defines_var(X_INTRODUCED_49);
constraint int_eq_reif(X_INTRODUCED_5,5,X_INTRODUCED_50):: defines_var(X_INTRODUCED_50);
constraint array_bool_and([X_INTRODUCED_49,X_INTRODUCED_50],X_INTRODUCED_51):: defines_var(X_INTRODUCED_51);
constraint int_lin_eq_reif([1],[X_INTRODUCED_16],2,X_INTRODUCED_52):: defines_var(X_INTRODUCED_52);
constraint int_eq_reif(X_INTRODUCED_7,3,X_INTRODUCED_53):: defines_var(X_INTRODUCED_53);
constraint array_bool_and([X_INTRODUCED_52,X_INTRODUCED_53],X_INTRODUCED_54):: defines_var(X_INTRODUCED_54);
constraint int_lin_eq_reif([1],[X_INTRODUCED_16],2,X_INTRODUCED_55):: defines_var(X_INTRODUCED_55);
constraint int_eq_reif(X_INTRODUCED_7,5,X_INTRODUCED_56):: defines_var(X_INTRODUCED_56);
constraint array_bool_and([X_INTRODUCED_55,X_INTRODUCED_56],X_INTRODUCED_57):: defines_var(X_INTRODUCED_57);
constraint int_lin_eq_reif([1],[X_INTRODUCED_16],2,X_INTRODUCED_58):: defines_var(X_INTRODUCED_58);
constraint int_eq_reif(X_INTRODUCED_7,4,X_INTRODUCED_59):: defines_var(X_INTRODUCED_59);
constraint array_bool_and([X_INTRODUCED_58,X_INTRODUCED_59],X_INTRODUCED_60):: defines_var(X_INTRODUCED_60);
constraint int_eq_reif(X_INTRODUCED_1,2,X_INTRODUCED_65):: defines_var(X_INTRODUCED_65);
constraint int_eq_reif(X_INTRODUCED_1,1,X_INTRODUCED_66):: defines_var(X_INTRODUCED_66);
constraint int_eq_reif(X_INTRODUCED_3,2,X_INTRODUCED_68):: defines_var(X_INTRODUCED_68);
constraint int_eq_reif(X_INTRODUCED_3,1,X_INTRODUCED_69):: defines_var(X_INTRODUCED_69);
constraint int_eq(X_INTRODUCED_5,2);
constraint int_eq_reif(X_INTRODUCED_1,3,X_INTRODUCED_73):: defines_var(X_INTRODUCED_73);
constraint int_eq_reif(X_INTRODUCED_3,3,X_INTRODUCED_75):: defines_var(X_INTRODUCED_75);
constraint int_eq_reif(X_INTRODUCED_5,3,X_INTRODUCED_77):: defines_var(X_INTRODUCED_77);
constraint int_eq_reif(X_INTRODUCED_7,3,X_INTRODUCED_78):: defines_var(X_INTRODUCED_78);
constraint int_eq_reif(X_INTRODUCED_3,4,X_INTRODUCED_80):: defines_var(X_INTRODUCED_80);
constraint int_eq(X_INTRODUCED_7,4);
constraint bool2int(false,X_INTRODUCED_84):: defines_var(X_INTRODUCED_84);
constraint bool2int(X_INTRODUCED_77,X_INTRODUCED_94):: defines_var(X_INTRODUCED_94);
constraint bool2int(X_INTRODUCED_78,X_INTRODUCED_95):: defines_var(X_INTRODUCED_95);
solve :: int_search([X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8],first_fail,indomain_split,complete) satisfy;
