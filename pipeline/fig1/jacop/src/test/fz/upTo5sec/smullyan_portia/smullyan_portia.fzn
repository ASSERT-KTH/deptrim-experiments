array [1..3] of int: X_INTRODUCED_14 = [-1,-1,-1];
array [1..3] of int: X_INTRODUCED_22 = [1,1,1];
var bool: X_INTRODUCED_0;
var bool: X_INTRODUCED_1;
var bool: X_INTRODUCED_3:: is_defined_var;
var bool: X_INTRODUCED_5;
var bool: X_INTRODUCED_7 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_8 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_9 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_10 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_11 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_12 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_15 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_16 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_17 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_19 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_20 ::var_is_introduced :: is_defined_var;
array [1..3] of var bool: portrait:: output_array([1..3]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_5];
array [1..3] of var bool: inscriptions:: output_array([1..3]) = [X_INTRODUCED_3,X_INTRODUCED_3,X_INTRODUCED_5];
constraint int_lin_le(X_INTRODUCED_14,[X_INTRODUCED_8,X_INTRODUCED_10,X_INTRODUCED_12],-1);
constraint int_lin_le(X_INTRODUCED_14,[X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17],-1);
constraint int_lin_eq(X_INTRODUCED_22,[X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_17],1);
constraint bool_eq_reif(X_INTRODUCED_1,false,X_INTRODUCED_3):: defines_var(X_INTRODUCED_3);
constraint bool_eq_reif(X_INTRODUCED_3,false,X_INTRODUCED_7):: defines_var(X_INTRODUCED_7);
constraint bool2int(X_INTRODUCED_7,X_INTRODUCED_8):: defines_var(X_INTRODUCED_8);
constraint bool_eq_reif(X_INTRODUCED_3,false,X_INTRODUCED_9):: defines_var(X_INTRODUCED_9);
constraint bool2int(X_INTRODUCED_9,X_INTRODUCED_10):: defines_var(X_INTRODUCED_10);
constraint bool_eq_reif(X_INTRODUCED_5,false,X_INTRODUCED_11):: defines_var(X_INTRODUCED_11);
constraint bool2int(X_INTRODUCED_11,X_INTRODUCED_12):: defines_var(X_INTRODUCED_12);
constraint bool2int(X_INTRODUCED_3,X_INTRODUCED_15):: defines_var(X_INTRODUCED_15);
constraint bool2int(X_INTRODUCED_3,X_INTRODUCED_16):: defines_var(X_INTRODUCED_16);
constraint bool2int(X_INTRODUCED_5,X_INTRODUCED_17):: defines_var(X_INTRODUCED_17);
constraint bool2int(X_INTRODUCED_0,X_INTRODUCED_19):: defines_var(X_INTRODUCED_19);
constraint bool2int(X_INTRODUCED_1,X_INTRODUCED_20):: defines_var(X_INTRODUCED_20);
solve  satisfy;
