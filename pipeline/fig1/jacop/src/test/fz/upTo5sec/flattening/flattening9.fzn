array [1..3] of int: X_INTRODUCED_6 = [-1,-1,1];
var -2..2: x:: output_var;
var -1..2: y:: output_var;
var -2..2: z:: output_var;
var -1..2: u:: output_var;
var 0..3: t:: output_var;
var bool: X_INTRODUCED_0 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_1 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_2 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_3 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_7 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_8 ::var_is_introduced :: is_defined_var;
constraint array_bool_or([X_INTRODUCED_7,X_INTRODUCED_8],true);
constraint int_le_reif(1,z,X_INTRODUCED_0):: defines_var(X_INTRODUCED_0);
constraint int_le_reif(1,y,X_INTRODUCED_1):: defines_var(X_INTRODUCED_1);
constraint array_bool_and([X_INTRODUCED_0,X_INTRODUCED_1],X_INTRODUCED_2):: defines_var(X_INTRODUCED_2);
constraint bool2int(X_INTRODUCED_2,X_INTRODUCED_3):: defines_var(X_INTRODUCED_3);
constraint int_lin_le_reif(X_INTRODUCED_6,[X_INTRODUCED_3,t,u],0,X_INTRODUCED_7):: defines_var(X_INTRODUCED_7);
constraint int_le_reif(x,0,X_INTRODUCED_8):: defines_var(X_INTRODUCED_8);
solve  satisfy;
