predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_13 = [-1,1];
array [1..2] of int: X_INTRODUCED_68 = [1,-1];
array [1..4] of int: X_INTRODUCED_69 = [1,2,3,4];
array [1..2] of int: X_INTRODUCED_81 = [2,-1];
var 0..7: X_INTRODUCED_0;
var 0..7: X_INTRODUCED_1;
var 0..7: X_INTRODUCED_2;
var 0..7: X_INTRODUCED_3;
var 0..4: X_INTRODUCED_4;
var 0..3: X_INTRODUCED_5;
var 0..2: X_INTRODUCED_6;
var 0..0: X_INTRODUCED_7;
var 6..7: Width:: output_var;
var 5..5: Height:: output_var;
var 30..35: Area:: output_var:: is_defined_var;
var bool: X_INTRODUCED_14 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_18 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_20 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_22 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_25 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_28 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_30 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_32 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_35 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_38 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_40 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_42 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_44 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_46 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_48 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_50 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_52 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_54 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_56 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_58 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_60 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_62 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_64 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_66 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_84 ::var_is_introduced ;
var bool: X_INTRODUCED_85 ::var_is_introduced ;
var bool: X_INTRODUCED_88 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_89 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_91 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_92 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_93 ::var_is_introduced ;
var bool: X_INTRODUCED_96 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_97 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_98 ::var_is_introduced ;
var bool: X_INTRODUCED_101 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_102 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_103 ::var_is_introduced ;
var bool: X_INTRODUCED_105 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_106 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_107 ::var_is_introduced ;
var bool: X_INTRODUCED_108 ::var_is_introduced ;
var bool: X_INTRODUCED_111 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_112 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_114 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_115 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_116 ::var_is_introduced ;
var bool: X_INTRODUCED_119 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_120 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_121 ::var_is_introduced ;
var bool: X_INTRODUCED_124 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_125 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_129 ::var_is_introduced  = true;
array [1..4] of var int: X:: output_array([1..4]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3];
array [1..4] of var int: Y:: output_array([1..4]) = [X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,0];
constraint array_bool_or([X_INTRODUCED_14,X_INTRODUCED_18,X_INTRODUCED_20,X_INTRODUCED_22],true);
constraint array_bool_or([X_INTRODUCED_25,X_INTRODUCED_28,X_INTRODUCED_30,X_INTRODUCED_32],true);
constraint array_bool_or([X_INTRODUCED_35,X_INTRODUCED_38,X_INTRODUCED_40,X_INTRODUCED_42],true);
constraint array_bool_or([X_INTRODUCED_44,X_INTRODUCED_46,X_INTRODUCED_48,X_INTRODUCED_50],true);
constraint array_bool_or([X_INTRODUCED_52,X_INTRODUCED_54,X_INTRODUCED_56,X_INTRODUCED_58],true);
constraint array_bool_or([X_INTRODUCED_60,X_INTRODUCED_62,X_INTRODUCED_64,X_INTRODUCED_66],true);
constraint jacop_cumulative(X,X_INTRODUCED_69,X_INTRODUCED_69,5);
constraint int_lin_le(X_INTRODUCED_68,[X_INTRODUCED_0,Width],-1);
constraint int_lin_le(X_INTRODUCED_68,[X_INTRODUCED_1,Width],-2);
constraint int_lin_le(X_INTRODUCED_68,[X_INTRODUCED_2,Width],-3);
constraint int_lin_le(X_INTRODUCED_68,[X_INTRODUCED_3,Width],-4);
constraint jacop_cumulative(Y,X_INTRODUCED_69,X_INTRODUCED_69,Width);
constraint int_lin_le(X_INTRODUCED_81,[X_INTRODUCED_3,Width],-4);
constraint bool_clause([],[X_INTRODUCED_84,X_INTRODUCED_85]);
constraint array_bool_or([X_INTRODUCED_85,X_INTRODUCED_88],true);
constraint bool_clause([X_INTRODUCED_89],[X_INTRODUCED_85]);
constraint array_bool_or([X_INTRODUCED_84,X_INTRODUCED_91],true);
constraint bool_clause([X_INTRODUCED_92],[X_INTRODUCED_84]);
constraint array_bool_or([X_INTRODUCED_93,X_INTRODUCED_96],true);
constraint bool_clause([X_INTRODUCED_97],[X_INTRODUCED_93]);
constraint array_bool_or([X_INTRODUCED_98,X_INTRODUCED_101],true);
constraint bool_clause([X_INTRODUCED_102],[X_INTRODUCED_98]);
constraint array_bool_or([X_INTRODUCED_103,X_INTRODUCED_105],true);
constraint bool_clause([X_INTRODUCED_106],[X_INTRODUCED_103]);
constraint bool_clause([],[X_INTRODUCED_107,X_INTRODUCED_108]);
constraint array_bool_or([X_INTRODUCED_108,X_INTRODUCED_111],true);
constraint bool_clause([X_INTRODUCED_112],[X_INTRODUCED_108]);
constraint array_bool_or([X_INTRODUCED_107,X_INTRODUCED_114],true);
constraint bool_clause([X_INTRODUCED_115],[X_INTRODUCED_107]);
constraint array_bool_or([X_INTRODUCED_116,X_INTRODUCED_119],true);
constraint bool_clause([X_INTRODUCED_120],[X_INTRODUCED_116]);
constraint array_bool_or([X_INTRODUCED_121,X_INTRODUCED_124],true);
constraint bool_clause([X_INTRODUCED_125],[X_INTRODUCED_121]);
constraint int_times(Height,Width,Area):: defines_var(Area);
constraint int_lin_le_reif(X_INTRODUCED_13,[X_INTRODUCED_1,X_INTRODUCED_0],-1,X_INTRODUCED_14):: defines_var(X_INTRODUCED_14);
constraint int_lin_le_reif(X_INTRODUCED_13,[X_INTRODUCED_4,X_INTRODUCED_5],-2,X_INTRODUCED_18):: defines_var(X_INTRODUCED_18);
constraint int_lin_le_reif(X_INTRODUCED_13,[X_INTRODUCED_5,X_INTRODUCED_4],-1,X_INTRODUCED_20):: defines_var(X_INTRODUCED_20);
constraint int_lin_le_reif(X_INTRODUCED_13,[X_INTRODUCED_0,X_INTRODUCED_1],-2,X_INTRODUCED_22):: defines_var(X_INTRODUCED_22);
constraint int_lin_le_reif(X_INTRODUCED_13,[X_INTRODUCED_2,X_INTRODUCED_0],-1,X_INTRODUCED_25):: defines_var(X_INTRODUCED_25);
constraint int_lin_le_reif(X_INTRODUCED_13,[X_INTRODUCED_4,X_INTRODUCED_6],-3,X_INTRODUCED_28):: defines_var(X_INTRODUCED_28);
constraint int_lin_le_reif(X_INTRODUCED_13,[X_INTRODUCED_6,X_INTRODUCED_4],-1,X_INTRODUCED_30):: defines_var(X_INTRODUCED_30);
constraint int_lin_le_reif(X_INTRODUCED_13,[X_INTRODUCED_0,X_INTRODUCED_2],-3,X_INTRODUCED_32):: defines_var(X_INTRODUCED_32);
constraint int_lin_le_reif(X_INTRODUCED_13,[X_INTRODUCED_3,X_INTRODUCED_0],-1,X_INTRODUCED_35):: defines_var(X_INTRODUCED_35);
constraint int_lin_le_reif([-1],[X_INTRODUCED_4],-4,X_INTRODUCED_38):: defines_var(X_INTRODUCED_38);
constraint int_lin_le_reif([1],[X_INTRODUCED_4],-1,X_INTRODUCED_40):: defines_var(X_INTRODUCED_40);
constraint int_lin_le_reif(X_INTRODUCED_13,[X_INTRODUCED_0,X_INTRODUCED_3],-4,X_INTRODUCED_42):: defines_var(X_INTRODUCED_42);
constraint int_lin_le_reif(X_INTRODUCED_13,[X_INTRODUCED_2,X_INTRODUCED_1],-2,X_INTRODUCED_44):: defines_var(X_INTRODUCED_44);
constraint int_lin_le_reif(X_INTRODUCED_13,[X_INTRODUCED_5,X_INTRODUCED_6],-3,X_INTRODUCED_46):: defines_var(X_INTRODUCED_46);
constraint int_lin_le_reif(X_INTRODUCED_13,[X_INTRODUCED_6,X_INTRODUCED_5],-2,X_INTRODUCED_48):: defines_var(X_INTRODUCED_48);
constraint int_lin_le_reif(X_INTRODUCED_13,[X_INTRODUCED_1,X_INTRODUCED_2],-3,X_INTRODUCED_50):: defines_var(X_INTRODUCED_50);
constraint int_lin_le_reif(X_INTRODUCED_13,[X_INTRODUCED_3,X_INTRODUCED_1],-2,X_INTRODUCED_52):: defines_var(X_INTRODUCED_52);
constraint int_lin_le_reif([-1],[X_INTRODUCED_5],-4,X_INTRODUCED_54):: defines_var(X_INTRODUCED_54);
constraint int_lin_le_reif([1],[X_INTRODUCED_5],-2,X_INTRODUCED_56):: defines_var(X_INTRODUCED_56);
constraint int_lin_le_reif(X_INTRODUCED_13,[X_INTRODUCED_1,X_INTRODUCED_3],-4,X_INTRODUCED_58):: defines_var(X_INTRODUCED_58);
constraint int_lin_le_reif(X_INTRODUCED_13,[X_INTRODUCED_3,X_INTRODUCED_2],-3,X_INTRODUCED_60):: defines_var(X_INTRODUCED_60);
constraint int_lin_le_reif([-1],[X_INTRODUCED_6],-4,X_INTRODUCED_62):: defines_var(X_INTRODUCED_62);
constraint int_lin_le_reif([1],[X_INTRODUCED_6],-3,X_INTRODUCED_64):: defines_var(X_INTRODUCED_64);
constraint int_lin_le_reif(X_INTRODUCED_13,[X_INTRODUCED_2,X_INTRODUCED_3],-4,X_INTRODUCED_66):: defines_var(X_INTRODUCED_66);
constraint int_lin_le_reif(X_INTRODUCED_68,[X_INTRODUCED_0,Width],-2,X_INTRODUCED_88):: defines_var(X_INTRODUCED_88);
constraint int_lin_le_reif(X_INTRODUCED_13,[X_INTRODUCED_0,Width],1,X_INTRODUCED_89):: defines_var(X_INTRODUCED_89);
constraint int_le_reif(1,X_INTRODUCED_0,X_INTRODUCED_91):: defines_var(X_INTRODUCED_91);
constraint int_le_reif(X_INTRODUCED_0,0,X_INTRODUCED_92):: defines_var(X_INTRODUCED_92);
constraint int_lin_le_reif(X_INTRODUCED_13,[X_INTRODUCED_1,Width],2,X_INTRODUCED_96):: defines_var(X_INTRODUCED_96);
constraint int_le_reif(X_INTRODUCED_1,0,X_INTRODUCED_97):: defines_var(X_INTRODUCED_97);
constraint int_lin_le_reif(X_INTRODUCED_13,[X_INTRODUCED_2,Width],3,X_INTRODUCED_101):: defines_var(X_INTRODUCED_101);
constraint int_le_reif(X_INTRODUCED_2,0,X_INTRODUCED_102):: defines_var(X_INTRODUCED_102);
constraint int_lin_le_reif(X_INTRODUCED_13,[X_INTRODUCED_3,Width],4,X_INTRODUCED_105):: defines_var(X_INTRODUCED_105);
constraint int_le_reif(X_INTRODUCED_3,0,X_INTRODUCED_106):: defines_var(X_INTRODUCED_106);
constraint int_lin_le_reif([1],[X_INTRODUCED_4],3,X_INTRODUCED_111):: defines_var(X_INTRODUCED_111);
constraint int_lin_le_reif([-1],[X_INTRODUCED_4],-4,X_INTRODUCED_112):: defines_var(X_INTRODUCED_112);
constraint int_le_reif(1,X_INTRODUCED_4,X_INTRODUCED_114):: defines_var(X_INTRODUCED_114);
constraint int_le_reif(X_INTRODUCED_4,0,X_INTRODUCED_115):: defines_var(X_INTRODUCED_115);
constraint int_lin_le_reif([-1],[X_INTRODUCED_5],-3,X_INTRODUCED_119):: defines_var(X_INTRODUCED_119);
constraint int_le_reif(X_INTRODUCED_5,0,X_INTRODUCED_120):: defines_var(X_INTRODUCED_120);
constraint int_lin_le_reif([-1],[X_INTRODUCED_6],-2,X_INTRODUCED_124):: defines_var(X_INTRODUCED_124);
constraint int_le_reif(X_INTRODUCED_6,0,X_INTRODUCED_125):: defines_var(X_INTRODUCED_125);
constraint int_le(0,0);
solve :: int_search([Area,Height,X_INTRODUCED_7,X_INTRODUCED_6,X_INTRODUCED_5,X_INTRODUCED_4,X_INTRODUCED_3,X_INTRODUCED_2,X_INTRODUCED_1,X_INTRODUCED_0],input_order,indomain_min,complete) satisfy;
