var set of 1..4: s:: output_var;
var 1..3: X_INTRODUCED_4 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_6 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_7 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_8 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_10 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_11 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_12 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_18 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_48 ::var_is_introduced :: is_defined_var;
var 1..1: X_INTRODUCED_49 ::var_is_introduced :: is_defined_var;
array [1..4] of var int: variables:: output_array([1..4]) = [3,3,8,6];
constraint int_lin_eq([1,-1,-1],[X_INTRODUCED_4,X_INTRODUCED_8,X_INTRODUCED_12],0):: defines_var(X_INTRODUCED_4);
constraint set_eq(s,2..4);
constraint set_in_reif(1,s,X_INTRODUCED_6):: defines_var(X_INTRODUCED_6);
constraint array_bool_and([X_INTRODUCED_6],X_INTRODUCED_7):: defines_var(X_INTRODUCED_7);
constraint bool2int(X_INTRODUCED_7,X_INTRODUCED_8):: defines_var(X_INTRODUCED_8);
constraint set_in_reif(2,s,X_INTRODUCED_10):: defines_var(X_INTRODUCED_10);
constraint array_bool_and([X_INTRODUCED_10],X_INTRODUCED_11):: defines_var(X_INTRODUCED_11);
constraint bool2int(X_INTRODUCED_11,X_INTRODUCED_12):: defines_var(X_INTRODUCED_12);
constraint set_in_reif(4,s,X_INTRODUCED_18):: defines_var(X_INTRODUCED_18);
constraint array_bool_and([X_INTRODUCED_18],X_INTRODUCED_48):: defines_var(X_INTRODUCED_48);
constraint bool2int(X_INTRODUCED_48,X_INTRODUCED_49):: defines_var(X_INTRODUCED_49);
solve  satisfy;
