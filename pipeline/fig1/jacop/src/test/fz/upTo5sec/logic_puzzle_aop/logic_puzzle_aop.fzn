array [1..2] of int: X_INTRODUCED_7 = [1,-1];
var 1..3: X_INTRODUCED_0;
var 1..3: X_INTRODUCED_1;
var 1..3: X_INTRODUCED_2;
var 1..1: basketball:: output_var;
var 1..3: tennis:: output_var;
var 1..3: cricket:: output_var;
var 1..3: america:: output_var;
var 2..2: israel:: output_var;
var 1..3: australia:: output_var;
var 1..3: X_INTRODUCED_6 ::var_is_introduced :: is_defined_var;
var 1..3: X_INTRODUCED_9 ::var_is_introduced :: is_defined_var;
array [1..3] of var int: place:: output_array([1..3]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2];
array [1..3] of var int: sport = [1,tennis,cricket];
array [1..3] of var int: country = [america,2,australia];
constraint array_var_int_element(cricket,place,1);
constraint array_var_int_element(tennis,place,X_INTRODUCED_6):: defines_var(X_INTRODUCED_6);
constraint int_lin_le(X_INTRODUCED_7,[X_INTRODUCED_1,X_INTRODUCED_6],-1);
constraint array_var_int_element(america,place,X_INTRODUCED_9):: defines_var(X_INTRODUCED_9);
constraint int_lin_le(X_INTRODUCED_7,[X_INTRODUCED_0,X_INTRODUCED_9],-1);
constraint int_lin_ne(X_INTRODUCED_7,[X_INTRODUCED_0,X_INTRODUCED_1],0);
constraint int_lin_ne(X_INTRODUCED_7,[X_INTRODUCED_0,X_INTRODUCED_2],0);
constraint int_lin_ne(X_INTRODUCED_7,[X_INTRODUCED_1,X_INTRODUCED_2],0);
constraint int_lin_ne([1],[america],2);
constraint int_lin_ne(X_INTRODUCED_7,[america,australia],0);
constraint int_lin_ne([-1],[australia],-2);
constraint int_lin_ne([-1],[tennis],-1);
constraint int_lin_ne([-1],[cricket],-1);
constraint int_lin_ne(X_INTRODUCED_7,[tennis,cricket],0);
solve  satisfy;
