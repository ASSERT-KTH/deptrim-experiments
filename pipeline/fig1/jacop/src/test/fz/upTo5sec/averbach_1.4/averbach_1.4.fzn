array [1..2] of int: X_INTRODUCED_13 = [1,-1];
var 1..1: Baker:: output_var;
var 0..4: Dyer:: output_var;
var 0..4: Farmer:: output_var;
var 0..4: Glover:: output_var;
var 0..4: Hosier:: output_var;
var 0..4: baker:: output_var;
var 0..4: dyer:: output_var;
var 0..4: farmer:: output_var;
var 0..4: glover:: output_var;
var 0..4: hosier:: output_var;
var 1..5: X_INTRODUCED_1 ::var_is_introduced :: is_defined_var;
var -1..3: X_INTRODUCED_4 ::var_is_introduced :: is_defined_var;
var -2..2: X_INTRODUCED_10 ::var_is_introduced :: is_defined_var;
var 2..6: X_INTRODUCED_7 ::var_is_introduced  = 3;
constraint int_mod(X_INTRODUCED_1,5,Dyer);
constraint int_mod(X_INTRODUCED_4,5,farmer);
constraint int_mod(X_INTRODUCED_7,5,baker);
constraint int_mod(X_INTRODUCED_10,5,dyer);
constraint int_lin_ne(X_INTRODUCED_13,[hosier,Hosier],0);
constraint int_lin_ne(X_INTRODUCED_13,[glover,Glover],0);
constraint int_lin_ne(X_INTRODUCED_13,[farmer,Farmer],0);
constraint int_lin_ne(X_INTRODUCED_13,[dyer,Dyer],0);
constraint int_lin_ne([1],[baker],1);
constraint int_lin_ne([-1],[Dyer],-1);
constraint int_lin_ne([-1],[Farmer],-1);
constraint int_lin_ne([-1],[Glover],-1);
constraint int_lin_ne([-1],[Hosier],-1);
constraint int_lin_ne(X_INTRODUCED_13,[Dyer,Farmer],0);
constraint int_lin_ne(X_INTRODUCED_13,[Dyer,Glover],0);
constraint int_lin_ne(X_INTRODUCED_13,[Dyer,Hosier],0);
constraint int_lin_ne(X_INTRODUCED_13,[Farmer,Glover],0);
constraint int_lin_ne(X_INTRODUCED_13,[Farmer,Hosier],0);
constraint int_lin_ne(X_INTRODUCED_13,[Glover,Hosier],0);
constraint int_lin_ne(X_INTRODUCED_13,[baker,dyer],0);
constraint int_lin_ne(X_INTRODUCED_13,[baker,farmer],0);
constraint int_lin_ne(X_INTRODUCED_13,[baker,glover],0);
constraint int_lin_ne(X_INTRODUCED_13,[baker,hosier],0);
constraint int_lin_ne(X_INTRODUCED_13,[dyer,farmer],0);
constraint int_lin_ne(X_INTRODUCED_13,[dyer,glover],0);
constraint int_lin_ne(X_INTRODUCED_13,[dyer,hosier],0);
constraint int_lin_ne(X_INTRODUCED_13,[farmer,glover],0);
constraint int_lin_ne(X_INTRODUCED_13,[farmer,hosier],0);
constraint int_lin_ne(X_INTRODUCED_13,[glover,hosier],0);
constraint int_lin_eq([1,-1],[glover,X_INTRODUCED_1],-1):: defines_var(X_INTRODUCED_1);
constraint int_lin_eq([1,-1],[Farmer,X_INTRODUCED_4],1):: defines_var(X_INTRODUCED_4);
constraint int_lin_eq([1,-1],[Hosier,X_INTRODUCED_10],2):: defines_var(X_INTRODUCED_10);
solve  satisfy;
