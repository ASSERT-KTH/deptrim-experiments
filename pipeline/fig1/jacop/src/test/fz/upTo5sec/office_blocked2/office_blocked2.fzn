array [1..2] of int: X_INTRODUCED_12 = [1,-1];
array [1..4] of int: X_INTRODUCED_26 = [3,1,-3,-1];
var 1..1: X_INTRODUCED_3;
var 1..2: X_INTRODUCED_4;
var 1..2: X_INTRODUCED_5;
var 1..3: X_INTRODUCED_7;
var 1..3: X_INTRODUCED_8;
var 1..3: X_INTRODUCED_9;
var 1..3: X_INTRODUCED_10;
var 1..3: X_INTRODUCED_11;
var -2..2: X_INTRODUCED_13 ::var_is_introduced :: is_defined_var;
var -2..2: X_INTRODUCED_15 ::var_is_introduced :: is_defined_var;
array [1..6] of var int: floor:: output_array([1..6]) = [2,1,X_INTRODUCED_5,1,X_INTRODUCED_4,X_INTRODUCED_5];
array [1..6] of var int: room:: output_array([1..6]) = [X_INTRODUCED_7,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11];
constraint int_abs(X_INTRODUCED_13,1);
constraint int_lin_le(X_INTRODUCED_12,[X_INTRODUCED_10,X_INTRODUCED_11],-1);
constraint int_abs(X_INTRODUCED_15,1);
constraint int_lin_ne([1,-3,-1],[X_INTRODUCED_7,X_INTRODUCED_5,X_INTRODUCED_8],-6);
constraint int_lin_ne([1,-1],[X_INTRODUCED_7,X_INTRODUCED_9],-3);
constraint int_lin_ne([1,-3,-1],[X_INTRODUCED_7,X_INTRODUCED_4,X_INTRODUCED_10],-6);
constraint int_lin_ne([1,-3,-1],[X_INTRODUCED_7,X_INTRODUCED_5,X_INTRODUCED_11],-6);
constraint int_lin_ne([1,-3,-1],[X_INTRODUCED_7,X_INTRODUCED_5,X_INTRODUCED_8],-3);
constraint int_lin_ne(X_INTRODUCED_12,[X_INTRODUCED_7,X_INTRODUCED_9],0);
constraint int_lin_ne([1,-3,-1],[X_INTRODUCED_7,X_INTRODUCED_4,X_INTRODUCED_10],-3);
constraint int_lin_ne([1,-3,-1],[X_INTRODUCED_7,X_INTRODUCED_5,X_INTRODUCED_11],-3);
constraint int_lin_ne([3,1,-1],[X_INTRODUCED_5,X_INTRODUCED_8,X_INTRODUCED_9],3);
constraint int_lin_ne(X_INTRODUCED_26,[X_INTRODUCED_5,X_INTRODUCED_8,X_INTRODUCED_4,X_INTRODUCED_10],0);
constraint int_lin_ne(X_INTRODUCED_12,[X_INTRODUCED_8,X_INTRODUCED_11],0);
constraint int_lin_ne([1,-3,-1],[X_INTRODUCED_9,X_INTRODUCED_4,X_INTRODUCED_10],-3);
constraint int_lin_ne([1,-3,-1],[X_INTRODUCED_9,X_INTRODUCED_5,X_INTRODUCED_11],-3);
constraint int_lin_ne(X_INTRODUCED_26,[X_INTRODUCED_4,X_INTRODUCED_10,X_INTRODUCED_5,X_INTRODUCED_11],0);
constraint int_lin_eq([1,-1,-1],[X_INTRODUCED_8,X_INTRODUCED_11,X_INTRODUCED_13],0):: defines_var(X_INTRODUCED_13);
constraint int_lin_eq([1,-1,-1],[X_INTRODUCED_7,X_INTRODUCED_9,X_INTRODUCED_15],0):: defines_var(X_INTRODUCED_15);
solve  satisfy;
