predicate jacop_alldiff(array [int] of var int: x);
var 1..7: X_INTRODUCED_0;
var 1..7: X_INTRODUCED_1;
var 1..7: X_INTRODUCED_2;
var 1..7: X_INTRODUCED_3;
var 1..7: X_INTRODUCED_4;
var 1..7: X_INTRODUCED_5;
var 1..7: X_INTRODUCED_6;
var 1..7: X_INTRODUCED_7;
var 1..7: X_INTRODUCED_8;
var 1..7: X_INTRODUCED_9;
var 1..7: X_INTRODUCED_10;
var 1..7: X_INTRODUCED_11;
var 1..7: X_INTRODUCED_12;
var 1..7: X_INTRODUCED_13;
var 1..7: X_INTRODUCED_14;
var 1..7: X_INTRODUCED_15;
var 1..7: X_INTRODUCED_16;
var 1..7: X_INTRODUCED_17;
var 1..7: X_INTRODUCED_18;
var 1..7: X_INTRODUCED_19;
var 1..7: X_INTRODUCED_20;
var 1..7: X_INTRODUCED_21;
var 1..7: X_INTRODUCED_22;
var 1..7: X_INTRODUCED_23;
var 1..7: X_INTRODUCED_24;
var 1..7: X_INTRODUCED_25;
var 1..7: X_INTRODUCED_26;
var 1..7: X_INTRODUCED_27;
var 1..7: X_INTRODUCED_28;
var 1..7: X_INTRODUCED_29;
var 1..7: X_INTRODUCED_30;
var 1..7: X_INTRODUCED_31;
var 1..7: X_INTRODUCED_32;
var 1..7: X_INTRODUCED_33;
var 1..7: X_INTRODUCED_34;
var 1..7: X_INTRODUCED_35;
var 1..7: X_INTRODUCED_36;
var 1..7: X_INTRODUCED_37;
var 1..7: X_INTRODUCED_38;
var 1..7: X_INTRODUCED_39;
var 1..7: X_INTRODUCED_40;
var 1..7: X_INTRODUCED_41;
var 1..7: X_INTRODUCED_42;
var 1..7: X_INTRODUCED_43;
var 1..7: X_INTRODUCED_44;
var 1..7: X_INTRODUCED_45;
var 1..7: X_INTRODUCED_46;
var 1..7: X_INTRODUCED_47;
var 1..7: X_INTRODUCED_48;
array [1..49] of var int: x:: output_array([1..7,1..7]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29,X_INTRODUCED_30,X_INTRODUCED_31,X_INTRODUCED_32,X_INTRODUCED_33,X_INTRODUCED_34,X_INTRODUCED_35,X_INTRODUCED_36,X_INTRODUCED_37,X_INTRODUCED_38,X_INTRODUCED_39,X_INTRODUCED_40,X_INTRODUCED_41,X_INTRODUCED_42,X_INTRODUCED_43,X_INTRODUCED_44,X_INTRODUCED_45,X_INTRODUCED_46,X_INTRODUCED_47,X_INTRODUCED_48];
array [1..7] of var int: X_INTRODUCED_49 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6];
array [1..7] of var int: X_INTRODUCED_50 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_7,X_INTRODUCED_14,X_INTRODUCED_21,X_INTRODUCED_28,X_INTRODUCED_35,X_INTRODUCED_42];
array [1..49] of var int: X_INTRODUCED_51 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29,X_INTRODUCED_30,X_INTRODUCED_31,X_INTRODUCED_32,X_INTRODUCED_33,X_INTRODUCED_34,X_INTRODUCED_35,X_INTRODUCED_36,X_INTRODUCED_37,X_INTRODUCED_38,X_INTRODUCED_39,X_INTRODUCED_40,X_INTRODUCED_41,X_INTRODUCED_42,X_INTRODUCED_43,X_INTRODUCED_44,X_INTRODUCED_45,X_INTRODUCED_46,X_INTRODUCED_47,X_INTRODUCED_48];
constraint jacop_alldiff(X_INTRODUCED_49);
constraint jacop_alldiff([X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13]);
constraint jacop_alldiff([X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20]);
constraint jacop_alldiff([X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27]);
constraint jacop_alldiff([X_INTRODUCED_28,X_INTRODUCED_29,X_INTRODUCED_30,X_INTRODUCED_31,X_INTRODUCED_32,X_INTRODUCED_33,X_INTRODUCED_34]);
constraint jacop_alldiff([X_INTRODUCED_35,X_INTRODUCED_36,X_INTRODUCED_37,X_INTRODUCED_38,X_INTRODUCED_39,X_INTRODUCED_40,X_INTRODUCED_41]);
constraint jacop_alldiff([X_INTRODUCED_42,X_INTRODUCED_43,X_INTRODUCED_44,X_INTRODUCED_45,X_INTRODUCED_46,X_INTRODUCED_47,X_INTRODUCED_48]);
constraint jacop_alldiff(X_INTRODUCED_50);
constraint jacop_alldiff([X_INTRODUCED_1,X_INTRODUCED_8,X_INTRODUCED_15,X_INTRODUCED_22,X_INTRODUCED_29,X_INTRODUCED_36,X_INTRODUCED_43]);
constraint jacop_alldiff([X_INTRODUCED_2,X_INTRODUCED_9,X_INTRODUCED_16,X_INTRODUCED_23,X_INTRODUCED_30,X_INTRODUCED_37,X_INTRODUCED_44]);
constraint jacop_alldiff([X_INTRODUCED_3,X_INTRODUCED_10,X_INTRODUCED_17,X_INTRODUCED_24,X_INTRODUCED_31,X_INTRODUCED_38,X_INTRODUCED_45]);
constraint jacop_alldiff([X_INTRODUCED_4,X_INTRODUCED_11,X_INTRODUCED_18,X_INTRODUCED_25,X_INTRODUCED_32,X_INTRODUCED_39,X_INTRODUCED_46]);
constraint jacop_alldiff([X_INTRODUCED_5,X_INTRODUCED_12,X_INTRODUCED_19,X_INTRODUCED_26,X_INTRODUCED_33,X_INTRODUCED_40,X_INTRODUCED_47]);
constraint jacop_alldiff([X_INTRODUCED_6,X_INTRODUCED_13,X_INTRODUCED_20,X_INTRODUCED_27,X_INTRODUCED_34,X_INTRODUCED_41,X_INTRODUCED_48]);
solve :: int_search(X_INTRODUCED_51,input_order,indomain_max,complete) satisfy;
