array [1..6] of int: X_INTRODUCED_18 = [1,1,1,1,1,1];
array [1..3] of int: X_INTRODUCED_24 = [1,-1,-1];
array [1..4] of int: X_INTRODUCED_28 = [1,-1,-1,-1];
array [1..5] of int: X_INTRODUCED_32 = [1,-1,-1,-1,-1];
array [1..6] of int: X_INTRODUCED_36 = [1,-1,-1,-1,-1,-1];
array [1..7] of int: X_INTRODUCED_39 = [1,-1,-1,-1,-1,-1,-1];
var 0..2: X_INTRODUCED_0;
var 0..2: X_INTRODUCED_1;
var 0..2: X_INTRODUCED_2;
var 0..2: X_INTRODUCED_3;
var 0..2: X_INTRODUCED_4;
var 0..2: X_INTRODUCED_5;
var 0..2: X_INTRODUCED_6;
var 0..2: X_INTRODUCED_7;
var 0..2: X_INTRODUCED_8;
var 0..2: X_INTRODUCED_9;
var 0..2: X_INTRODUCED_10;
var 0..2: X_INTRODUCED_11;
var 0..4: X_INTRODUCED_13:: is_defined_var;
var 0..6: X_INTRODUCED_14:: is_defined_var;
var 0..6: X_INTRODUCED_15:: is_defined_var;
var 0..6: X_INTRODUCED_16:: is_defined_var;
var 0..6: X_INTRODUCED_17:: is_defined_var;
var 0..6: z:: is_defined_var;
var bool: X_INTRODUCED_19 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_20 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_21 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_22 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_25 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_26 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_29 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_30 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_33 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_34 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_37 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_38 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_40 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_41 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_42 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_43 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_44 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_45 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_46 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_47 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_48 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_49 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_50 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_51 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_52 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_53 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_54 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_55 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_56 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_57 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_58 ::var_is_introduced :: is_defined_var;
array [1..6] of var int: x:: output_array([1..6]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5];
array [1..6] of var int: winner:: output_array([1..6]) = [X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11];
array [1..6] of var int: z_cumsum:: output_array([1..6]) = [X_INTRODUCED_0,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17];
constraint int_lin_le(X_INTRODUCED_18,[X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5],6);
constraint int_eq_reif(X_INTRODUCED_6,0,X_INTRODUCED_19):: defines_var(X_INTRODUCED_19);
constraint int_eq_reif(X_INTRODUCED_6,1,X_INTRODUCED_20):: defines_var(X_INTRODUCED_20);
constraint int_eq_reif(X_INTRODUCED_7,0,X_INTRODUCED_21):: defines_var(X_INTRODUCED_21);
constraint int_eq_reif(X_INTRODUCED_7,2,X_INTRODUCED_22):: defines_var(X_INTRODUCED_22);
constraint int_lin_eq(X_INTRODUCED_24,[X_INTRODUCED_13,X_INTRODUCED_0,X_INTRODUCED_1],0):: defines_var(X_INTRODUCED_13);
constraint int_eq_reif(X_INTRODUCED_8,0,X_INTRODUCED_25):: defines_var(X_INTRODUCED_25);
constraint int_eq_reif(X_INTRODUCED_8,1,X_INTRODUCED_26):: defines_var(X_INTRODUCED_26);
constraint int_lin_eq(X_INTRODUCED_28,[X_INTRODUCED_14,X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2],0):: defines_var(X_INTRODUCED_14);
constraint int_eq_reif(X_INTRODUCED_9,0,X_INTRODUCED_29):: defines_var(X_INTRODUCED_29);
constraint int_eq_reif(X_INTRODUCED_9,2,X_INTRODUCED_30):: defines_var(X_INTRODUCED_30);
constraint int_lin_eq(X_INTRODUCED_32,[X_INTRODUCED_15,X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3],0):: defines_var(X_INTRODUCED_15);
constraint int_eq_reif(X_INTRODUCED_10,0,X_INTRODUCED_33):: defines_var(X_INTRODUCED_33);
constraint int_eq_reif(X_INTRODUCED_10,1,X_INTRODUCED_34):: defines_var(X_INTRODUCED_34);
constraint int_lin_eq(X_INTRODUCED_36,[X_INTRODUCED_16,X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4],0):: defines_var(X_INTRODUCED_16);
constraint int_eq_reif(X_INTRODUCED_11,0,X_INTRODUCED_37):: defines_var(X_INTRODUCED_37);
constraint int_eq_reif(X_INTRODUCED_11,2,X_INTRODUCED_38):: defines_var(X_INTRODUCED_38);
constraint int_lin_eq(X_INTRODUCED_39,[X_INTRODUCED_17,X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5],0):: defines_var(X_INTRODUCED_17);
constraint bool_eq(X_INTRODUCED_40,X_INTRODUCED_41);
constraint array_bool_and([X_INTRODUCED_41,X_INTRODUCED_43],X_INTRODUCED_42):: defines_var(X_INTRODUCED_42);
constraint array_bool_and([X_INTRODUCED_41,X_INTRODUCED_43,X_INTRODUCED_45],X_INTRODUCED_44):: defines_var(X_INTRODUCED_44);
constraint array_bool_and([X_INTRODUCED_41,X_INTRODUCED_43,X_INTRODUCED_45,X_INTRODUCED_47],X_INTRODUCED_46):: defines_var(X_INTRODUCED_46);
constraint array_bool_and([X_INTRODUCED_41,X_INTRODUCED_43,X_INTRODUCED_45,X_INTRODUCED_47,X_INTRODUCED_49],X_INTRODUCED_48):: defines_var(X_INTRODUCED_48);
constraint array_bool_and([X_INTRODUCED_41,X_INTRODUCED_43,X_INTRODUCED_45,X_INTRODUCED_47,X_INTRODUCED_49,X_INTRODUCED_51],X_INTRODUCED_50):: defines_var(X_INTRODUCED_50);
constraint bool_clause([X_INTRODUCED_53],[X_INTRODUCED_52]);
constraint bool_clause([X_INTRODUCED_54],[X_INTRODUCED_52]);
constraint bool_clause([X_INTRODUCED_55],[X_INTRODUCED_52]);
constraint bool_clause([X_INTRODUCED_56],[X_INTRODUCED_52]);
constraint bool_clause([X_INTRODUCED_57],[X_INTRODUCED_52]);
constraint bool_clause([X_INTRODUCED_58],[X_INTRODUCED_52]);
constraint int_lin_eq([1,1,1,1,1,1,-1],[X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,z],0):: defines_var(z);
constraint int_ne_reif(X_INTRODUCED_0,6,X_INTRODUCED_19):: defines_var(X_INTRODUCED_19);
constraint int_eq_reif(X_INTRODUCED_0,6,X_INTRODUCED_20):: defines_var(X_INTRODUCED_20);
constraint int_ne_reif(X_INTRODUCED_13,6,X_INTRODUCED_21):: defines_var(X_INTRODUCED_21);
constraint int_eq_reif(X_INTRODUCED_13,6,X_INTRODUCED_22):: defines_var(X_INTRODUCED_22);
constraint int_ne_reif(X_INTRODUCED_14,6,X_INTRODUCED_25):: defines_var(X_INTRODUCED_25);
constraint int_eq_reif(X_INTRODUCED_14,6,X_INTRODUCED_26):: defines_var(X_INTRODUCED_26);
constraint int_ne_reif(X_INTRODUCED_15,6,X_INTRODUCED_29):: defines_var(X_INTRODUCED_29);
constraint int_eq_reif(X_INTRODUCED_15,6,X_INTRODUCED_30):: defines_var(X_INTRODUCED_30);
constraint int_ne_reif(X_INTRODUCED_16,6,X_INTRODUCED_33):: defines_var(X_INTRODUCED_33);
constraint int_eq_reif(X_INTRODUCED_16,6,X_INTRODUCED_34):: defines_var(X_INTRODUCED_34);
constraint int_ne_reif(X_INTRODUCED_17,6,X_INTRODUCED_37):: defines_var(X_INTRODUCED_37);
constraint int_eq_reif(X_INTRODUCED_17,6,X_INTRODUCED_38):: defines_var(X_INTRODUCED_38);
constraint int_le_reif(1,X_INTRODUCED_0,X_INTRODUCED_40):: defines_var(X_INTRODUCED_40);
constraint int_ne_reif(X_INTRODUCED_0,0,X_INTRODUCED_41):: defines_var(X_INTRODUCED_41);
constraint int_le_reif(1,X_INTRODUCED_1,X_INTRODUCED_42):: defines_var(X_INTRODUCED_42);
constraint int_ne_reif(X_INTRODUCED_1,0,X_INTRODUCED_43):: defines_var(X_INTRODUCED_43);
constraint int_le_reif(1,X_INTRODUCED_2,X_INTRODUCED_44):: defines_var(X_INTRODUCED_44);
constraint int_ne_reif(X_INTRODUCED_2,0,X_INTRODUCED_45):: defines_var(X_INTRODUCED_45);
constraint int_le_reif(1,X_INTRODUCED_3,X_INTRODUCED_46):: defines_var(X_INTRODUCED_46);
constraint int_ne_reif(X_INTRODUCED_3,0,X_INTRODUCED_47):: defines_var(X_INTRODUCED_47);
constraint int_le_reif(1,X_INTRODUCED_4,X_INTRODUCED_48):: defines_var(X_INTRODUCED_48);
constraint int_ne_reif(X_INTRODUCED_4,0,X_INTRODUCED_49):: defines_var(X_INTRODUCED_49);
constraint int_le_reif(1,X_INTRODUCED_5,X_INTRODUCED_50):: defines_var(X_INTRODUCED_50);
constraint int_ne_reif(X_INTRODUCED_5,0,X_INTRODUCED_51):: defines_var(X_INTRODUCED_51);
constraint int_lin_le_reif(X_INTRODUCED_18,[X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5],5,X_INTRODUCED_52):: defines_var(X_INTRODUCED_52);
constraint set_in_reif(X_INTRODUCED_0,1..2,X_INTRODUCED_53):: defines_var(X_INTRODUCED_53);
constraint set_in_reif(X_INTRODUCED_1,1..2,X_INTRODUCED_54):: defines_var(X_INTRODUCED_54);
constraint set_in_reif(X_INTRODUCED_2,1..2,X_INTRODUCED_55):: defines_var(X_INTRODUCED_55);
constraint set_in_reif(X_INTRODUCED_3,1..2,X_INTRODUCED_56):: defines_var(X_INTRODUCED_56);
constraint set_in_reif(X_INTRODUCED_4,1..2,X_INTRODUCED_57):: defines_var(X_INTRODUCED_57);
constraint set_in_reif(X_INTRODUCED_5,1..2,X_INTRODUCED_58):: defines_var(X_INTRODUCED_58);
solve :: int_search(x,first_fail,indomain_min,complete) satisfy;
