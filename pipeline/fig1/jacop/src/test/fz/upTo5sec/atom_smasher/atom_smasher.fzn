array [1..2] of int: X_INTRODUCED_3 = [1,-1];
array [1..5] of int: X_INTRODUCED_6 = [1,-1,-10,-1,-1];
var 0..9: A:: output_var;
var 0..9: T:: output_var;
var 0..9: O:: output_var;
var 0..9: M:: output_var;
var 0..9999: ATOM:: is_defined_var;
var 0..117: X_INTRODUCED_1 ::var_is_introduced :: is_defined_var;
var 0..13689: X_INTRODUCED_7 ::var_is_introduced :: is_defined_var;
constraint int_lin_ne(X_INTRODUCED_3,[A,T],0);
constraint int_lin_ne(X_INTRODUCED_3,[A,O],0);
constraint int_lin_ne(X_INTRODUCED_3,[A,M],0);
constraint int_lin_ne(X_INTRODUCED_3,[T,O],0);
constraint int_lin_ne(X_INTRODUCED_3,[T,M],0);
constraint int_lin_ne(X_INTRODUCED_3,[O,M],0);
constraint int_lin_eq(X_INTRODUCED_6,[X_INTRODUCED_1,O,T,A,M],0):: defines_var(X_INTRODUCED_1);
constraint int_eq(X_INTRODUCED_7,ATOM);
constraint int_lin_eq([10,100,1000,1,-1],[O,T,A,M,ATOM],0):: defines_var(ATOM);
constraint int_times(X_INTRODUCED_1,X_INTRODUCED_1,X_INTRODUCED_7):: defines_var(X_INTRODUCED_7);
solve  satisfy;
