array [1..6] of int: X_INTRODUCED_26 = [1,-10,-1100,-10000,-100000,-1];
array [1..3] of int: X_INTRODUCED_29 = [1,-11,-100];
array [1..2] of int: X_INTRODUCED_30 = [1,-1];
var 0..9: O;
var 0..9: D;
var 0..9: P;
var 0..9: U;
var 0..9: Z;
var 0..9: L;
var 0..9: E;
var 100..999: num1;
var 100..999: num2;
var 100..999: num3:: is_defined_var;
var 100..999: num4:: is_defined_var;
var 100..999: ODD:: is_defined_var;
var 100000..998001: PUZZLE:: output_var:: is_defined_var;
var 1..9: X_INTRODUCED_9 ::var_is_introduced :: is_defined_var;
var 10..99: X_INTRODUCED_12 ::var_is_introduced :: is_defined_var;
var -10..10: X_INTRODUCED_14 ::var_is_introduced ;
var -10..10: X_INTRODUCED_17 ::var_is_introduced ;
var 11100..110889: X_INTRODUCED_23 ::var_is_introduced :: is_defined_var;
array [1..7] of var int: x:: output_array([1..7]) = [O,D,P,U,Z,L,E];
array [1..13] of var int: X_INTRODUCED_7 ::var_is_introduced  = [O,D,P,U,Z,L,E,num1,num2,num3,num4,ODD,PUZZLE];
constraint int_div(num2,100,X_INTRODUCED_9):: defines_var(X_INTRODUCED_9);
constraint int_div(num2,10,X_INTRODUCED_12):: defines_var(X_INTRODUCED_12);
constraint int_mod(X_INTRODUCED_12,10,X_INTRODUCED_14);
constraint int_mod(num2,10,X_INTRODUCED_17);
constraint int_mod(PUZZLE,2,1);
constraint int_eq(PUZZLE,X_INTRODUCED_23);
constraint int_lin_eq(X_INTRODUCED_26,[PUZZLE,L,Z,U,P,E],0):: defines_var(PUZZLE);
constraint int_lin_eq(X_INTRODUCED_29,[ODD,D,O],0):: defines_var(ODD);
constraint int_lin_ne(X_INTRODUCED_30,[O,D],0);
constraint int_lin_ne(X_INTRODUCED_30,[O,P],0);
constraint int_lin_ne(X_INTRODUCED_30,[O,U],0);
constraint int_lin_ne(X_INTRODUCED_30,[O,Z],0);
constraint int_lin_ne(X_INTRODUCED_30,[O,L],0);
constraint int_lin_ne(X_INTRODUCED_30,[O,E],0);
constraint int_lin_ne(X_INTRODUCED_30,[D,P],0);
constraint int_lin_ne(X_INTRODUCED_30,[D,U],0);
constraint int_lin_ne(X_INTRODUCED_30,[D,Z],0);
constraint int_lin_ne(X_INTRODUCED_30,[D,L],0);
constraint int_lin_ne(X_INTRODUCED_30,[D,E],0);
constraint int_lin_ne(X_INTRODUCED_30,[P,U],0);
constraint int_lin_ne(X_INTRODUCED_30,[P,Z],0);
constraint int_lin_ne(X_INTRODUCED_30,[P,L],0);
constraint int_lin_ne(X_INTRODUCED_30,[P,E],0);
constraint int_lin_ne(X_INTRODUCED_30,[U,Z],0);
constraint int_lin_ne(X_INTRODUCED_30,[U,L],0);
constraint int_lin_ne(X_INTRODUCED_30,[U,E],0);
constraint int_lin_ne(X_INTRODUCED_30,[Z,L],0);
constraint int_lin_ne(X_INTRODUCED_30,[Z,E],0);
constraint int_lin_ne(X_INTRODUCED_30,[L,E],0);
constraint int_times(num1,X_INTRODUCED_17,num3):: defines_var(num3);
constraint int_times(num1,X_INTRODUCED_14,num4):: defines_var(num4);
constraint int_times(num1,X_INTRODUCED_9,ODD):: defines_var(ODD);
constraint int_times(num1,num2,PUZZLE):: defines_var(PUZZLE);
constraint int_lin_eq([10,1,100,-1],[num4,num3,ODD,X_INTRODUCED_23],0):: defines_var(X_INTRODUCED_23);
solve :: int_search(X_INTRODUCED_7,first_fail,indomain_min,complete) satisfy;
