array [1..8] of int: X_INTRODUCED_23 = [2,9,3,8,10,6,4,10];
var 0..1: X_INTRODUCED_0;
var 0..1: X_INTRODUCED_1;
var 0..1: X_INTRODUCED_2;
var 0..1: X_INTRODUCED_3;
var 0..1: X_INTRODUCED_4;
var 0..1: X_INTRODUCED_5;
var 0..1: X_INTRODUCED_6;
var 0..1: X_INTRODUCED_7;
var int: profit:: is_defined_var;
array [1..8] of var int: take:: output_array([1..8]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7];
constraint int_lin_le(X_INTRODUCED_23,[X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7],15);
constraint int_le(X_INTRODUCED_0,1);
constraint int_le(X_INTRODUCED_1,1);
constraint int_le(X_INTRODUCED_2,1);
constraint int_le(X_INTRODUCED_3,1);
constraint int_le(X_INTRODUCED_4,1);
constraint int_le(X_INTRODUCED_5,1);
constraint int_le(X_INTRODUCED_6,1);
constraint int_le(X_INTRODUCED_7,1);
constraint int_lin_eq([2,9,3,8,10,6,4,10,-1],[X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,profit],0):: defines_var(profit);
solve  maximize profit;
