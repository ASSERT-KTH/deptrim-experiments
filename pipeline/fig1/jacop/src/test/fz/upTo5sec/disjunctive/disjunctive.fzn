var 0..1: X_INTRODUCED_8;
var 0..1: X_INTRODUCED_9;
var 0..1: X_INTRODUCED_10;
var 0..1: X_INTRODUCED_11;
var 0..10: X_INTRODUCED_12;
var 0..10: X_INTRODUCED_13;
var 0..10: X_INTRODUCED_14;
var 0..10: X_INTRODUCED_15;
var bool: X_INTRODUCED_17 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_18 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_19 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_23 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_25 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_27 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_28 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_29 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_30 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_31 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_32 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_33 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_34 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_36 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_38 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_39 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_40 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_42 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_43 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_44 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_45 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_46 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_47 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_48 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_50 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_52 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_53 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_54 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_56 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_57 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_58 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_59 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_60 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_62 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_63 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_64 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_66 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_67 ::var_is_introduced :: is_defined_var;
array [1..4] of var int: origin:: output_array([1..4]) = [1,2,7,4];
array [1..4] of var int: duration:: output_array([1..4]) = [3,0,2,1];
array [1..4] of var int: used:: output_array([1..4]) = [X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11];
array [1..4] of var int: end_time:: output_array([1..4]) = [X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15];
constraint array_bool_and([X_INTRODUCED_17,X_INTRODUCED_18],false);
constraint array_bool_and([X_INTRODUCED_23,X_INTRODUCED_28,X_INTRODUCED_31,X_INTRODUCED_34,X_INTRODUCED_36],X_INTRODUCED_19):: defines_var(X_INTRODUCED_19);
constraint array_bool_and([X_INTRODUCED_38,X_INTRODUCED_39],true);
constraint array_bool_and([X_INTRODUCED_42,X_INTRODUCED_45,X_INTRODUCED_48,X_INTRODUCED_50],X_INTRODUCED_40):: defines_var(X_INTRODUCED_40);
constraint array_bool_and([X_INTRODUCED_52,X_INTRODUCED_53],false);
constraint array_bool_and([X_INTRODUCED_56,X_INTRODUCED_59,X_INTRODUCED_60],X_INTRODUCED_54):: defines_var(X_INTRODUCED_54);
constraint array_bool_and([X_INTRODUCED_62,X_INTRODUCED_63],false);
constraint array_bool_and([X_INTRODUCED_66,X_INTRODUCED_67],X_INTRODUCED_64):: defines_var(X_INTRODUCED_64);
constraint int_eq_reif(X_INTRODUCED_12,0,X_INTRODUCED_17):: defines_var(X_INTRODUCED_17);
constraint int_eq_reif(X_INTRODUCED_8,0,X_INTRODUCED_18):: defines_var(X_INTRODUCED_18);
constraint int_le_reif(1,3,X_INTRODUCED_19):: defines_var(X_INTRODUCED_19);
constraint int_lin_eq_reif([1],[X_INTRODUCED_12],4,X_INTRODUCED_23):: defines_var(X_INTRODUCED_23);
constraint int_lin_le_reif([1],[X_INTRODUCED_13],1,X_INTRODUCED_25):: defines_var(X_INTRODUCED_25);
constraint int_lin_le_reif([1],[X_INTRODUCED_12],2,X_INTRODUCED_27):: defines_var(X_INTRODUCED_27);
constraint array_bool_or([X_INTRODUCED_25,X_INTRODUCED_27],X_INTRODUCED_28):: defines_var(X_INTRODUCED_28);
constraint int_lin_le_reif([1],[X_INTRODUCED_14],1,X_INTRODUCED_29):: defines_var(X_INTRODUCED_29);
constraint int_lin_le_reif([1],[X_INTRODUCED_12],7,X_INTRODUCED_30):: defines_var(X_INTRODUCED_30);
constraint array_bool_or([X_INTRODUCED_29,X_INTRODUCED_30],X_INTRODUCED_31):: defines_var(X_INTRODUCED_31);
constraint int_lin_le_reif([1],[X_INTRODUCED_15],1,X_INTRODUCED_32):: defines_var(X_INTRODUCED_32);
constraint int_lin_le_reif([1],[X_INTRODUCED_12],4,X_INTRODUCED_33):: defines_var(X_INTRODUCED_33);
constraint array_bool_or([X_INTRODUCED_32,X_INTRODUCED_33],X_INTRODUCED_34):: defines_var(X_INTRODUCED_34);
constraint int_eq_reif(X_INTRODUCED_8,1,X_INTRODUCED_36):: defines_var(X_INTRODUCED_36);
constraint int_eq_reif(X_INTRODUCED_13,0,X_INTRODUCED_38):: defines_var(X_INTRODUCED_38);
constraint int_eq_reif(X_INTRODUCED_9,0,X_INTRODUCED_39):: defines_var(X_INTRODUCED_39);
constraint int_le_reif(1,0,X_INTRODUCED_40):: defines_var(X_INTRODUCED_40);
constraint int_lin_eq_reif([1],[X_INTRODUCED_13],2,X_INTRODUCED_42):: defines_var(X_INTRODUCED_42);
constraint int_lin_le_reif([1],[X_INTRODUCED_14],2,X_INTRODUCED_43):: defines_var(X_INTRODUCED_43);
constraint int_lin_le_reif([1],[X_INTRODUCED_13],7,X_INTRODUCED_44):: defines_var(X_INTRODUCED_44);
constraint array_bool_or([X_INTRODUCED_43,X_INTRODUCED_44],X_INTRODUCED_45):: defines_var(X_INTRODUCED_45);
constraint int_lin_le_reif([1],[X_INTRODUCED_15],2,X_INTRODUCED_46):: defines_var(X_INTRODUCED_46);
constraint int_lin_le_reif([1],[X_INTRODUCED_13],4,X_INTRODUCED_47):: defines_var(X_INTRODUCED_47);
constraint array_bool_or([X_INTRODUCED_46,X_INTRODUCED_47],X_INTRODUCED_48):: defines_var(X_INTRODUCED_48);
constraint int_eq_reif(X_INTRODUCED_9,1,X_INTRODUCED_50):: defines_var(X_INTRODUCED_50);
constraint int_eq_reif(X_INTRODUCED_14,0,X_INTRODUCED_52):: defines_var(X_INTRODUCED_52);
constraint int_eq_reif(X_INTRODUCED_10,0,X_INTRODUCED_53):: defines_var(X_INTRODUCED_53);
constraint int_le_reif(1,2,X_INTRODUCED_54):: defines_var(X_INTRODUCED_54);
constraint int_lin_eq_reif([1],[X_INTRODUCED_14],9,X_INTRODUCED_56):: defines_var(X_INTRODUCED_56);
constraint int_lin_le_reif([1],[X_INTRODUCED_15],7,X_INTRODUCED_57):: defines_var(X_INTRODUCED_57);
constraint int_lin_le_reif([1],[X_INTRODUCED_14],4,X_INTRODUCED_58):: defines_var(X_INTRODUCED_58);
constraint array_bool_or([X_INTRODUCED_57,X_INTRODUCED_58],X_INTRODUCED_59):: defines_var(X_INTRODUCED_59);
constraint int_eq_reif(X_INTRODUCED_10,1,X_INTRODUCED_60):: defines_var(X_INTRODUCED_60);
constraint int_eq_reif(X_INTRODUCED_15,0,X_INTRODUCED_62):: defines_var(X_INTRODUCED_62);
constraint int_eq_reif(X_INTRODUCED_11,0,X_INTRODUCED_63):: defines_var(X_INTRODUCED_63);
constraint int_le_reif(1,1,X_INTRODUCED_64):: defines_var(X_INTRODUCED_64);
constraint int_lin_eq_reif([1],[X_INTRODUCED_15],5,X_INTRODUCED_66):: defines_var(X_INTRODUCED_66);
constraint int_eq_reif(X_INTRODUCED_11,1,X_INTRODUCED_67):: defines_var(X_INTRODUCED_67);
solve  satisfy;
