array [1..4] of int: X_INTRODUCED_0 = [1,1,1,1];
array [1..5] of int: X_INTRODUCED_2 = [1,1,1,1,-1];
array [1..3] of int: X_INTRODUCED_3 = [1,2,1];
array [1..3] of int: X_INTRODUCED_5 = [2,1,1];
array [1..1] of int: X_INTRODUCED_9 = [4];
array [1..3] of int: X_INTRODUCED_20 = [1,1,2];
array [1..2] of int: X_INTRODUCED_25 = [3,1];
var 0..9: x0:: output_var;
var 0..9: x1:: output_var;
var 0..9: x2:: output_var;
var 0..9: x3:: output_var;
var 0..9: x4:: output_var;
var 0..9: x5:: output_var;
var 0..9: x6:: output_var;
var 0..9: x7:: output_var;
var 0..9: x8:: output_var;
var 0..9: x9:: output_var;
var 0..9: x:: output_var:: is_defined_var;
array [1..10] of var int: all = [x0,x1,x2,x3,x4,x5,x6,x7,x8,x9];
constraint int_lin_eq(X_INTRODUCED_2,[x8,x5,x2,x1,x],0):: defines_var(x);
constraint int_lin_eq(X_INTRODUCED_3,[x3,x5,x1],0);
constraint int_lin_eq(X_INTRODUCED_5,[x8,x9,x1],5);
constraint int_lin_eq(X_INTRODUCED_5,[x5,x8,x6],3);
constraint int_lin_eq(X_INTRODUCED_3,[x5,x7,x6],1);
constraint int_lin_eq(X_INTRODUCED_9,[x9],4);
constraint int_lin_eq(X_INTRODUCED_9,[x7],0);
constraint int_lin_eq(X_INTRODUCED_0,[x9,x0,x8,x6],5);
constraint int_lin_eq(X_INTRODUCED_0,[x9,x1,x8,x3],3);
constraint int_lin_eq(X_INTRODUCED_9,[x5],0);
constraint int_lin_eq(X_INTRODUCED_9,[x3],0);
constraint int_lin_eq(X_INTRODUCED_9,[x2],0);
constraint int_lin_eq(X_INTRODUCED_9,[x0],4);
constraint int_lin_eq(X_INTRODUCED_0,[x1,x3,x9,x2],1);
constraint int_lin_eq(X_INTRODUCED_5,[x6,x7,x2],2);
constraint int_lin_eq(X_INTRODUCED_20,[x1,x2,x3],0);
constraint int_lin_eq(X_INTRODUCED_9,[x1],0);
constraint int_lin_eq(X_INTRODUCED_9,[x6],4);
constraint int_lin_eq(X_INTRODUCED_20,[x7,x1,x2],0);
constraint int_lin_eq(X_INTRODUCED_25,[x1,x7],0);
constraint int_lin_eq(X_INTRODUCED_3,[x0,x8,x9],6);
solve  satisfy;
