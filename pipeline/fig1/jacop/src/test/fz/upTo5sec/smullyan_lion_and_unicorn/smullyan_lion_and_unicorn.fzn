array [1..7] of bool: X_INTRODUCED_7 = [false,false,false,true,true,true,true];
array [1..2] of int: X_INTRODUCED_9 = [1,-1];
var 0..6: today:: output_var;
var 1..7: X_INTRODUCED_1 ::var_is_introduced :: is_defined_var;
var -7..7: X_INTRODUCED_3 ::var_is_introduced ;
var -6..8: X_INTRODUCED_4 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_5 ::var_is_introduced :: is_defined_var;
var 1..7: X_INTRODUCED_6 ::var_is_introduced ;
var bool: X_INTRODUCED_8 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_10 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_11 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_12 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_13 ::var_is_introduced :: is_defined_var;
var -1..5: X_INTRODUCED_14 ::var_is_introduced :: is_defined_var;
var -7..7: X_INTRODUCED_16 ::var_is_introduced ;
var -6..8: X_INTRODUCED_17 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_18 ::var_is_introduced :: is_defined_var;
var 1..7: X_INTRODUCED_19 ::var_is_introduced ;
var bool: X_INTRODUCED_20 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_21 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_22 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_23 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_24 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_25 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_26 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_27 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_28 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_29 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_30 ::var_is_introduced :: is_defined_var;
constraint int_mod(X_INTRODUCED_1,7,X_INTRODUCED_3);
constraint bool_clause([X_INTRODUCED_10],[X_INTRODUCED_8]);
constraint array_bool_or([X_INTRODUCED_8,X_INTRODUCED_11],true);
constraint array_bool_element(X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_5):: defines_var(X_INTRODUCED_5);
constraint int_mod(X_INTRODUCED_14,7,X_INTRODUCED_16);
constraint bool_clause([X_INTRODUCED_21],[X_INTRODUCED_20]);
constraint array_bool_or([X_INTRODUCED_20,X_INTRODUCED_22],true);
constraint array_bool_element(X_INTRODUCED_19,X_INTRODUCED_7,X_INTRODUCED_18):: defines_var(X_INTRODUCED_18);
constraint array_bool_element(X_INTRODUCED_1,X_INTRODUCED_7,X_INTRODUCED_26):: defines_var(X_INTRODUCED_26);
constraint array_bool_or([X_INTRODUCED_29,X_INTRODUCED_30],true);
constraint int_lin_eq([1,-1],[today,X_INTRODUCED_1],-1):: defines_var(X_INTRODUCED_1);
constraint int_lin_eq([1,-1],[X_INTRODUCED_3,X_INTRODUCED_4],-1):: defines_var(X_INTRODUCED_4);
constraint set_in_reif(X_INTRODUCED_4,1..7,X_INTRODUCED_8):: defines_var(X_INTRODUCED_8);
constraint int_lin_eq_reif(X_INTRODUCED_9,[X_INTRODUCED_6,X_INTRODUCED_3],1,X_INTRODUCED_10):: defines_var(X_INTRODUCED_10);
constraint int_eq_reif(X_INTRODUCED_6,1,X_INTRODUCED_11):: defines_var(X_INTRODUCED_11);
constraint array_bool_and([X_INTRODUCED_5,X_INTRODUCED_8],X_INTRODUCED_12):: defines_var(X_INTRODUCED_12);
constraint bool_eq_reif(X_INTRODUCED_12,false,X_INTRODUCED_13):: defines_var(X_INTRODUCED_13);
constraint int_lin_eq([1,-1],[today,X_INTRODUCED_14],1):: defines_var(X_INTRODUCED_14);
constraint int_lin_eq([1,-1],[X_INTRODUCED_16,X_INTRODUCED_17],-1):: defines_var(X_INTRODUCED_17);
constraint set_in_reif(X_INTRODUCED_17,1..7,X_INTRODUCED_20):: defines_var(X_INTRODUCED_20);
constraint int_lin_eq_reif(X_INTRODUCED_9,[X_INTRODUCED_19,X_INTRODUCED_16],1,X_INTRODUCED_21):: defines_var(X_INTRODUCED_21);
constraint int_eq_reif(X_INTRODUCED_19,1,X_INTRODUCED_22):: defines_var(X_INTRODUCED_22);
constraint array_bool_and([X_INTRODUCED_18,X_INTRODUCED_20],X_INTRODUCED_23):: defines_var(X_INTRODUCED_23);
constraint bool_eq_reif(X_INTRODUCED_23,false,X_INTRODUCED_24):: defines_var(X_INTRODUCED_24);
constraint array_bool_and([X_INTRODUCED_13,X_INTRODUCED_24],X_INTRODUCED_25):: defines_var(X_INTRODUCED_25);
constraint bool_eq_reif(X_INTRODUCED_25,false,X_INTRODUCED_27):: defines_var(X_INTRODUCED_27);
constraint bool_eq_reif(X_INTRODUCED_26,false,X_INTRODUCED_28):: defines_var(X_INTRODUCED_28);
constraint array_bool_and([X_INTRODUCED_27,X_INTRODUCED_28],X_INTRODUCED_29):: defines_var(X_INTRODUCED_29);
constraint array_bool_and([X_INTRODUCED_13,X_INTRODUCED_24,X_INTRODUCED_26],X_INTRODUCED_30):: defines_var(X_INTRODUCED_30);
solve  satisfy;
