array [1..3] of int: X_INTRODUCED_12 = [1,1,1];
var 1..9: X_INTRODUCED_0;
var 1..9: X_INTRODUCED_1;
var 1..9: X_INTRODUCED_2;
var 1..9: X_INTRODUCED_3;
var 1..9: X_INTRODUCED_5;
var 1..9: X_INTRODUCED_6;
var 1..9: X_INTRODUCED_7;
var 1..9: X_INTRODUCED_8;
var 1..81: total_sum:: output_var:: is_defined_var;
array [1..9] of var int: x:: output_array([1..3,1..3]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,0,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8];
constraint int_lin_eq([1,1,1,1,1,1,1,1,-1],[X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,total_sum],0):: defines_var(total_sum);
constraint int_lin_eq(X_INTRODUCED_12,[X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8],9);
constraint int_lin_eq(X_INTRODUCED_12,[X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2],9);
constraint int_lin_eq(X_INTRODUCED_12,[X_INTRODUCED_2,X_INTRODUCED_5,X_INTRODUCED_8],9);
constraint int_lin_eq(X_INTRODUCED_12,[X_INTRODUCED_0,X_INTRODUCED_3,X_INTRODUCED_6],9);
solve  satisfy;
