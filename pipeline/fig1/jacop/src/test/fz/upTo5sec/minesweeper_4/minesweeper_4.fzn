var 0..1: X_INTRODUCED_1;
var 0..1: X_INTRODUCED_3;
var 0..1: X_INTRODUCED_5;
var 0..1: X_INTRODUCED_6;
var 0..1: X_INTRODUCED_9;
var 0..1: X_INTRODUCED_11;
var 0..1: X_INTRODUCED_13;
var 0..1: X_INTRODUCED_15;
var 0..1: X_INTRODUCED_18;
var 0..1: X_INTRODUCED_19;
var 0..1: X_INTRODUCED_20;
var 0..1: X_INTRODUCED_21;
var 0..1: X_INTRODUCED_22;
var 0..1: X_INTRODUCED_23;
var 0..1: X_INTRODUCED_24;
var 0..1: X_INTRODUCED_25;
var 0..1: X_INTRODUCED_27;
var 0..1: X_INTRODUCED_28;
var 0..1: X_INTRODUCED_30;
var 0..1: X_INTRODUCED_33;
var 0..1: X_INTRODUCED_36;
var 0..1: X_INTRODUCED_37;
var 0..1: X_INTRODUCED_38;
var 0..1: X_INTRODUCED_39;
var 0..1: X_INTRODUCED_41;
var 0..1: X_INTRODUCED_42;
var 0..1: X_INTRODUCED_43;
var 0..1: X_INTRODUCED_44;
var 0..1: X_INTRODUCED_45;
var 0..1: X_INTRODUCED_46;
var 0..1: X_INTRODUCED_48;
var 0..1: X_INTRODUCED_50;
var 0..1: X_INTRODUCED_51;
var 0..1: X_INTRODUCED_52;
var 0..1: X_INTRODUCED_55;
var 0..1: X_INTRODUCED_57;
var 0..1: X_INTRODUCED_58;
var 0..1: X_INTRODUCED_59;
var 0..1: X_INTRODUCED_60;
var 0..1: X_INTRODUCED_61;
var 0..1: X_INTRODUCED_62;
var 0..1: X_INTRODUCED_63;
var 0..1: X_INTRODUCED_64;
var 0..1: X_INTRODUCED_66;
var 0..1: X_INTRODUCED_69;
var 0..1: X_INTRODUCED_70;
var 0..1: X_INTRODUCED_72;
var 0..1: X_INTRODUCED_74;
var 0..1: X_INTRODUCED_75;
var 0..1: X_INTRODUCED_76;
var 0..1: X_INTRODUCED_78;
var 0..1: X_INTRODUCED_80;
var 0..1: X_INTRODUCED_82;
var 0..1: X_INTRODUCED_84;
var 0..1: X_INTRODUCED_85;
var 0..1: X_INTRODUCED_87;
var 0..1: X_INTRODUCED_88;
var 0..1: X_INTRODUCED_89;
var 0..1: X_INTRODUCED_90;
var 0..1: X_INTRODUCED_92;
var 0..1: X_INTRODUCED_93;
var 0..1: X_INTRODUCED_94;
var 0..1: X_INTRODUCED_97;
var 0..1: X_INTRODUCED_98;
array [1..100] of var int: mines:: output_array([1..10,1..10]) = [0,X_INTRODUCED_1,0,X_INTRODUCED_3,0,X_INTRODUCED_5,X_INTRODUCED_6,0,0,X_INTRODUCED_9,0,X_INTRODUCED_11,0,X_INTRODUCED_13,0,X_INTRODUCED_15,0,0,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,0,X_INTRODUCED_27,X_INTRODUCED_28,0,X_INTRODUCED_30,0,0,X_INTRODUCED_33,0,0,X_INTRODUCED_36,X_INTRODUCED_37,X_INTRODUCED_38,X_INTRODUCED_39,0,X_INTRODUCED_41,X_INTRODUCED_42,X_INTRODUCED_43,X_INTRODUCED_44,X_INTRODUCED_45,X_INTRODUCED_46,0,X_INTRODUCED_48,0,X_INTRODUCED_50,X_INTRODUCED_51,X_INTRODUCED_52,0,0,X_INTRODUCED_55,0,X_INTRODUCED_57,X_INTRODUCED_58,X_INTRODUCED_59,X_INTRODUCED_60,X_INTRODUCED_61,X_INTRODUCED_62,X_INTRODUCED_63,X_INTRODUCED_64,0,X_INTRODUCED_66,0,0,X_INTRODUCED_69,X_INTRODUCED_70,0,X_INTRODUCED_72,0,X_INTRODUCED_74,X_INTRODUCED_75,X_INTRODUCED_76,0,X_INTRODUCED_78,0,X_INTRODUCED_80,0,X_INTRODUCED_82,0,X_INTRODUCED_84,X_INTRODUCED_85,0,X_INTRODUCED_87,X_INTRODUCED_88,X_INTRODUCED_89,X_INTRODUCED_90,0,X_INTRODUCED_92,X_INTRODUCED_93,X_INTRODUCED_94,0,0,X_INTRODUCED_97,X_INTRODUCED_98,0];
array [1..100] of var int: X_INTRODUCED_140 ::var_is_introduced  = [0,X_INTRODUCED_1,0,X_INTRODUCED_3,0,X_INTRODUCED_5,X_INTRODUCED_6,0,0,X_INTRODUCED_9,0,X_INTRODUCED_11,0,X_INTRODUCED_13,0,X_INTRODUCED_15,0,0,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,0,X_INTRODUCED_27,X_INTRODUCED_28,0,X_INTRODUCED_30,0,0,X_INTRODUCED_33,0,0,X_INTRODUCED_36,X_INTRODUCED_37,X_INTRODUCED_38,X_INTRODUCED_39,0,X_INTRODUCED_41,X_INTRODUCED_42,X_INTRODUCED_43,X_INTRODUCED_44,X_INTRODUCED_45,X_INTRODUCED_46,0,X_INTRODUCED_48,0,X_INTRODUCED_50,X_INTRODUCED_51,X_INTRODUCED_52,0,0,X_INTRODUCED_55,0,X_INTRODUCED_57,X_INTRODUCED_58,X_INTRODUCED_59,X_INTRODUCED_60,X_INTRODUCED_61,X_INTRODUCED_62,X_INTRODUCED_63,X_INTRODUCED_64,0,X_INTRODUCED_66,0,0,X_INTRODUCED_69,X_INTRODUCED_70,0,X_INTRODUCED_72,0,X_INTRODUCED_74,X_INTRODUCED_75,X_INTRODUCED_76,0,X_INTRODUCED_78,0,X_INTRODUCED_80,0,X_INTRODUCED_82,0,X_INTRODUCED_84,X_INTRODUCED_85,0,X_INTRODUCED_87,X_INTRODUCED_88,X_INTRODUCED_89,X_INTRODUCED_90,0,X_INTRODUCED_92,X_INTRODUCED_93,X_INTRODUCED_94,0,0,X_INTRODUCED_97,X_INTRODUCED_98,0];
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_1,X_INTRODUCED_11],0);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1],[X_INTRODUCED_1,X_INTRODUCED_3,X_INTRODUCED_11,X_INTRODUCED_13],0);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1],[X_INTRODUCED_3,X_INTRODUCED_5,X_INTRODUCED_13,X_INTRODUCED_15],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_6,X_INTRODUCED_18],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1],[X_INTRODUCED_9,X_INTRODUCED_18,X_INTRODUCED_19],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1],[X_INTRODUCED_1,X_INTRODUCED_11,X_INTRODUCED_20,X_INTRODUCED_21],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1,-1],[X_INTRODUCED_1,X_INTRODUCED_3,X_INTRODUCED_11,X_INTRODUCED_13,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23],-2);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1,-1],[X_INTRODUCED_3,X_INTRODUCED_5,X_INTRODUCED_13,X_INTRODUCED_15,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25],-2);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1],[X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_15,X_INTRODUCED_25,X_INTRODUCED_27],-2);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1],[X_INTRODUCED_6,X_INTRODUCED_18,X_INTRODUCED_27,X_INTRODUCED_28],-2);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1],[X_INTRODUCED_15,X_INTRODUCED_25,X_INTRODUCED_27,X_INTRODUCED_36,X_INTRODUCED_37],-2);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1],[X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_28,X_INTRODUCED_38,X_INTRODUCED_39],-2);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1],[X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_30,X_INTRODUCED_41,X_INTRODUCED_42],-2);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1,-1],[X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_33,X_INTRODUCED_41,X_INTRODUCED_42,X_INTRODUCED_43],-3);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1,-1],[X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_33,X_INTRODUCED_43,X_INTRODUCED_44,X_INTRODUCED_45],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1],[X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_36,X_INTRODUCED_44,X_INTRODUCED_45,X_INTRODUCED_46],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1],[X_INTRODUCED_30,X_INTRODUCED_41,X_INTRODUCED_50,X_INTRODUCED_51],0);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1,-1],[X_INTRODUCED_36,X_INTRODUCED_37,X_INTRODUCED_38,X_INTRODUCED_46,X_INTRODUCED_48,X_INTRODUCED_57,X_INTRODUCED_58],-2);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1],[X_INTRODUCED_38,X_INTRODUCED_39,X_INTRODUCED_48,X_INTRODUCED_58,X_INTRODUCED_59],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1,-1],[X_INTRODUCED_42,X_INTRODUCED_43,X_INTRODUCED_44,X_INTRODUCED_52,X_INTRODUCED_62,X_INTRODUCED_63,X_INTRODUCED_64],-2);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1],[X_INTRODUCED_43,X_INTRODUCED_44,X_INTRODUCED_45,X_INTRODUCED_55,X_INTRODUCED_63,X_INTRODUCED_64],-2);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1],[X_INTRODUCED_45,X_INTRODUCED_46,X_INTRODUCED_55,X_INTRODUCED_57,X_INTRODUCED_66],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1],[X_INTRODUCED_55,X_INTRODUCED_64,X_INTRODUCED_66,X_INTRODUCED_74,X_INTRODUCED_75,X_INTRODUCED_76],-3);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1],[X_INTRODUCED_57,X_INTRODUCED_58,X_INTRODUCED_66,X_INTRODUCED_76,X_INTRODUCED_78],-3);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1],[X_INTRODUCED_57,X_INTRODUCED_58,X_INTRODUCED_59,X_INTRODUCED_69,X_INTRODUCED_78],-2);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1,-1],[X_INTRODUCED_60,X_INTRODUCED_61,X_INTRODUCED_62,X_INTRODUCED_70,X_INTRODUCED_72,X_INTRODUCED_80,X_INTRODUCED_82],-5);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1,-1],[X_INTRODUCED_62,X_INTRODUCED_63,X_INTRODUCED_64,X_INTRODUCED_72,X_INTRODUCED_74,X_INTRODUCED_82,X_INTRODUCED_84],-2);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1],[X_INTRODUCED_66,X_INTRODUCED_76,X_INTRODUCED_78,X_INTRODUCED_87,X_INTRODUCED_88],-3);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1],[X_INTRODUCED_69,X_INTRODUCED_78,X_INTRODUCED_88,X_INTRODUCED_89],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1],[X_INTRODUCED_70,X_INTRODUCED_72,X_INTRODUCED_80,X_INTRODUCED_82,X_INTRODUCED_90,X_INTRODUCED_92],-3);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1,-1],[X_INTRODUCED_72,X_INTRODUCED_74,X_INTRODUCED_82,X_INTRODUCED_84,X_INTRODUCED_92,X_INTRODUCED_93,X_INTRODUCED_94],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1],[X_INTRODUCED_75,X_INTRODUCED_76,X_INTRODUCED_85,X_INTRODUCED_87,X_INTRODUCED_97],-3);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1],[X_INTRODUCED_80,X_INTRODUCED_82,X_INTRODUCED_90,X_INTRODUCED_92],-2);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1],[X_INTRODUCED_84,X_INTRODUCED_85,X_INTRODUCED_94],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1],[X_INTRODUCED_85,X_INTRODUCED_87,X_INTRODUCED_97],-2);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1],[X_INTRODUCED_88,X_INTRODUCED_89,X_INTRODUCED_98],0);
solve :: int_search(X_INTRODUCED_140,first_fail,indomain_min,complete) satisfy;
