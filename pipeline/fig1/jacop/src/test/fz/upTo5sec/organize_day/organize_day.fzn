array [1..2] of int: X_INTRODUCED_10 = [1,-1];
var 11..17: X_INTRODUCED_0;
var 9..17: X_INTRODUCED_1;
var 9..17: X_INTRODUCED_2;
var 9..17: X_INTRODUCED_3;
var 13..17: X_INTRODUCED_4:: is_defined_var;
var 10..17: X_INTRODUCED_5:: is_defined_var;
var 11..17: X_INTRODUCED_6:: is_defined_var;
var 10..17: X_INTRODUCED_7:: is_defined_var;
var bool: X_INTRODUCED_11 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_13 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_15 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_16 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_18 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_19 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_20 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_21 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_22 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_23 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_24 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_25 ::var_is_introduced :: is_defined_var;
array [1..4] of var int: Begins:: output_array([1..4]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3];
array [1..4] of var int: Ends:: output_array([1..4]) = [X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7];
constraint array_bool_or([X_INTRODUCED_11,X_INTRODUCED_13],true);
constraint array_bool_or([X_INTRODUCED_15,X_INTRODUCED_16],true);
constraint array_bool_or([X_INTRODUCED_18,X_INTRODUCED_19],true);
constraint array_bool_or([X_INTRODUCED_20,X_INTRODUCED_21],true);
constraint array_bool_or([X_INTRODUCED_22,X_INTRODUCED_23],true);
constraint array_bool_or([X_INTRODUCED_24,X_INTRODUCED_25],true);
constraint int_lin_eq(X_INTRODUCED_10,[X_INTRODUCED_4,X_INTRODUCED_0],4):: defines_var(X_INTRODUCED_4);
constraint int_lin_eq(X_INTRODUCED_10,[X_INTRODUCED_5,X_INTRODUCED_1],1):: defines_var(X_INTRODUCED_5);
constraint int_lin_eq(X_INTRODUCED_10,[X_INTRODUCED_6,X_INTRODUCED_2],2):: defines_var(X_INTRODUCED_6);
constraint int_lin_eq(X_INTRODUCED_10,[X_INTRODUCED_7,X_INTRODUCED_3],1):: defines_var(X_INTRODUCED_7);
constraint int_lin_le(X_INTRODUCED_10,[X_INTRODUCED_7,X_INTRODUCED_2],0);
constraint int_lin_le(X_INTRODUCED_10,[X_INTRODUCED_5,X_INTRODUCED_0],0);
constraint int_lin_le_reif(X_INTRODUCED_10,[X_INTRODUCED_1,X_INTRODUCED_0],-1,X_INTRODUCED_11):: defines_var(X_INTRODUCED_11);
constraint int_lin_le_reif(X_INTRODUCED_10,[X_INTRODUCED_0,X_INTRODUCED_1],-4,X_INTRODUCED_13):: defines_var(X_INTRODUCED_13);
constraint int_lin_le_reif(X_INTRODUCED_10,[X_INTRODUCED_2,X_INTRODUCED_0],-2,X_INTRODUCED_15):: defines_var(X_INTRODUCED_15);
constraint int_lin_le_reif(X_INTRODUCED_10,[X_INTRODUCED_0,X_INTRODUCED_2],-4,X_INTRODUCED_16):: defines_var(X_INTRODUCED_16);
constraint int_lin_le_reif(X_INTRODUCED_10,[X_INTRODUCED_3,X_INTRODUCED_0],-1,X_INTRODUCED_18):: defines_var(X_INTRODUCED_18);
constraint int_lin_le_reif(X_INTRODUCED_10,[X_INTRODUCED_0,X_INTRODUCED_3],-4,X_INTRODUCED_19):: defines_var(X_INTRODUCED_19);
constraint int_lin_le_reif(X_INTRODUCED_10,[X_INTRODUCED_2,X_INTRODUCED_1],-2,X_INTRODUCED_20):: defines_var(X_INTRODUCED_20);
constraint int_lin_le_reif(X_INTRODUCED_10,[X_INTRODUCED_1,X_INTRODUCED_2],-1,X_INTRODUCED_21):: defines_var(X_INTRODUCED_21);
constraint int_lin_le_reif(X_INTRODUCED_10,[X_INTRODUCED_3,X_INTRODUCED_1],-1,X_INTRODUCED_22):: defines_var(X_INTRODUCED_22);
constraint int_lin_le_reif(X_INTRODUCED_10,[X_INTRODUCED_1,X_INTRODUCED_3],-1,X_INTRODUCED_23):: defines_var(X_INTRODUCED_23);
constraint int_lin_le_reif(X_INTRODUCED_10,[X_INTRODUCED_3,X_INTRODUCED_2],-1,X_INTRODUCED_24):: defines_var(X_INTRODUCED_24);
constraint int_lin_le_reif(X_INTRODUCED_10,[X_INTRODUCED_2,X_INTRODUCED_3],-2,X_INTRODUCED_25):: defines_var(X_INTRODUCED_25);
solve  satisfy;
