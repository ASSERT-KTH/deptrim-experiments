array [1..3] of int: X_INTRODUCED_16 = [100,90,10];
array [1..3] of int: X_INTRODUCED_18 = [-100,-90,-10];
array [1..3] of int: X_INTRODUCED_35 = [111,85,10];
array [1..3] of int: X_INTRODUCED_37 = [-111,-85,-10];
array [1..3] of int: X_INTRODUCED_55 = [9999999,2,10];
array [1..3] of int: X_INTRODUCED_57 = [-9999999,-2,-10];
array [1..3] of int: X_INTRODUCED_64 = [100,111,9999999];
array [1..3] of int: X_INTRODUCED_67 = [90,85,2];
array [1..3] of int: X_INTRODUCED_70 = [10,10,10];
var 1..3: X_INTRODUCED_0;
var 1..3: X_INTRODUCED_1;
var 1..3: X_INTRODUCED_2;
var 112..10000117: total:: output_var:: is_defined_var;
var bool: X_INTRODUCED_3 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_4 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_7 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_8 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_11 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_12 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_17 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_19 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_20 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_21 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_23 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_24 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_27 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_28 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_31 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_32 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_36 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_38 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_39 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_40 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_43 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_44 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_47 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_48 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_51 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_52 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_56 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_58 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_59 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_60 ::var_is_introduced :: is_defined_var;
var 100..9999999: X_INTRODUCED_66 ::var_is_introduced :: is_defined_var;
var 2..90: X_INTRODUCED_69 ::var_is_introduced :: is_defined_var;
array [1..3] of var int: x:: output_array([1..3]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2];
constraint array_int_element(X_INTRODUCED_0,X_INTRODUCED_64,X_INTRODUCED_66):: defines_var(X_INTRODUCED_66);
constraint array_int_element(X_INTRODUCED_1,X_INTRODUCED_67,X_INTRODUCED_69):: defines_var(X_INTRODUCED_69);
constraint array_int_element(X_INTRODUCED_2,X_INTRODUCED_70,10);
constraint int_lin_eq([1,-1,-1,-10,-5,-3],[total,X_INTRODUCED_66,X_INTRODUCED_69,X_INTRODUCED_21,X_INTRODUCED_40,X_INTRODUCED_60],10):: defines_var(total);
constraint int_eq_reif(X_INTRODUCED_0,1,X_INTRODUCED_3):: defines_var(X_INTRODUCED_3);
constraint bool2int(X_INTRODUCED_3,X_INTRODUCED_4):: defines_var(X_INTRODUCED_4);
constraint int_eq_reif(X_INTRODUCED_1,1,X_INTRODUCED_7):: defines_var(X_INTRODUCED_7);
constraint bool2int(X_INTRODUCED_7,X_INTRODUCED_8):: defines_var(X_INTRODUCED_8);
constraint int_eq_reif(X_INTRODUCED_2,1,X_INTRODUCED_11):: defines_var(X_INTRODUCED_11);
constraint bool2int(X_INTRODUCED_11,X_INTRODUCED_12):: defines_var(X_INTRODUCED_12);
constraint int_lin_le_reif(X_INTRODUCED_16,[X_INTRODUCED_4,X_INTRODUCED_8,X_INTRODUCED_12],149,X_INTRODUCED_17):: defines_var(X_INTRODUCED_17);
constraint int_lin_le_reif(X_INTRODUCED_18,[X_INTRODUCED_4,X_INTRODUCED_8,X_INTRODUCED_12],-1,X_INTRODUCED_19):: defines_var(X_INTRODUCED_19);
constraint array_bool_and([X_INTRODUCED_17,X_INTRODUCED_19],X_INTRODUCED_20):: defines_var(X_INTRODUCED_20);
constraint bool2int(X_INTRODUCED_20,X_INTRODUCED_21):: defines_var(X_INTRODUCED_21);
constraint int_eq_reif(X_INTRODUCED_0,2,X_INTRODUCED_23):: defines_var(X_INTRODUCED_23);
constraint bool2int(X_INTRODUCED_23,X_INTRODUCED_24):: defines_var(X_INTRODUCED_24);
constraint int_eq_reif(X_INTRODUCED_1,2,X_INTRODUCED_27):: defines_var(X_INTRODUCED_27);
constraint bool2int(X_INTRODUCED_27,X_INTRODUCED_28):: defines_var(X_INTRODUCED_28);
constraint int_eq_reif(X_INTRODUCED_2,2,X_INTRODUCED_31):: defines_var(X_INTRODUCED_31);
constraint bool2int(X_INTRODUCED_31,X_INTRODUCED_32):: defines_var(X_INTRODUCED_32);
constraint int_lin_le_reif(X_INTRODUCED_35,[X_INTRODUCED_24,X_INTRODUCED_28,X_INTRODUCED_32],49,X_INTRODUCED_36):: defines_var(X_INTRODUCED_36);
constraint int_lin_le_reif(X_INTRODUCED_37,[X_INTRODUCED_24,X_INTRODUCED_28,X_INTRODUCED_32],-1,X_INTRODUCED_38):: defines_var(X_INTRODUCED_38);
constraint array_bool_and([X_INTRODUCED_36,X_INTRODUCED_38],X_INTRODUCED_39):: defines_var(X_INTRODUCED_39);
constraint bool2int(X_INTRODUCED_39,X_INTRODUCED_40):: defines_var(X_INTRODUCED_40);
constraint int_eq_reif(X_INTRODUCED_0,3,X_INTRODUCED_43):: defines_var(X_INTRODUCED_43);
constraint bool2int(X_INTRODUCED_43,X_INTRODUCED_44):: defines_var(X_INTRODUCED_44);
constraint int_eq_reif(X_INTRODUCED_1,3,X_INTRODUCED_47):: defines_var(X_INTRODUCED_47);
constraint bool2int(X_INTRODUCED_47,X_INTRODUCED_48):: defines_var(X_INTRODUCED_48);
constraint int_eq_reif(X_INTRODUCED_2,3,X_INTRODUCED_51):: defines_var(X_INTRODUCED_51);
constraint bool2int(X_INTRODUCED_51,X_INTRODUCED_52):: defines_var(X_INTRODUCED_52);
constraint int_lin_le_reif(X_INTRODUCED_55,[X_INTRODUCED_44,X_INTRODUCED_48,X_INTRODUCED_52],99,X_INTRODUCED_56):: defines_var(X_INTRODUCED_56);
constraint int_lin_le_reif(X_INTRODUCED_57,[X_INTRODUCED_44,X_INTRODUCED_48,X_INTRODUCED_52],-1,X_INTRODUCED_58):: defines_var(X_INTRODUCED_58);
constraint array_bool_and([X_INTRODUCED_56,X_INTRODUCED_58],X_INTRODUCED_59):: defines_var(X_INTRODUCED_59);
constraint bool2int(X_INTRODUCED_59,X_INTRODUCED_60):: defines_var(X_INTRODUCED_60);
solve :: int_search(x,largest,indomain_max,complete) satisfy;
