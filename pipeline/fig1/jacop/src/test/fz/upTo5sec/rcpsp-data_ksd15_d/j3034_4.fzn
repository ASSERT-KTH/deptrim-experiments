predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_17 = [1,-1];
array [1..5] of int: X_INTRODUCED_47 = [9,2,2,4,2];
array [1..5] of int: X_INTRODUCED_48 = [2,75,75,250,9];
array [1..7] of int: X_INTRODUCED_50 = [6,8,6,1,9,1,9];
array [1..7] of int: X_INTRODUCED_51 = [8,3,175,175,200,10,10];
var 0..1259: X_INTRODUCED_0;
var 0..1259: X_INTRODUCED_1;
var 0..1259: X_INTRODUCED_2;
var 0..1259: X_INTRODUCED_3;
var 0..1259: X_INTRODUCED_4;
var 0..1259: X_INTRODUCED_5;
var 0..1259: X_INTRODUCED_6;
var 0..1259: X_INTRODUCED_7;
var 0..1259: X_INTRODUCED_8;
var 0..1259: X_INTRODUCED_9;
var 0..1259: X_INTRODUCED_10;
var 0..1259: X_INTRODUCED_11;
var 0..1259: X_INTRODUCED_12;
var 0..1259: X_INTRODUCED_13;
var 0..1259: X_INTRODUCED_14;
var 0..1260: objective:: output_var;
var bool: X_INTRODUCED_30 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_31 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_32 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_33 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_37 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_38 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_39 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_40 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_41 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_42 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_44 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_45 ::var_is_introduced :: is_defined_var;
array [1..15] of var int: s:: output_array([1..15]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..5] of var int: X_INTRODUCED_49 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_14];
array [1..7] of var int: X_INTRODUCED_52 ::var_is_introduced  = [X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_13];
array [1..16] of var int: X_INTRODUCED_55 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,objective];
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_8],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_10],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_11],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_7],-8);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_12],-8);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_13],-8);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_3],-3);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_4],-3);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_6],-3);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_5],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_8],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_9],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_13],-175);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_14],-175);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_10],-250);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,X_INTRODUCED_8],-75);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_11],-250);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_12],-250);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,X_INTRODUCED_14],-200);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_11,X_INTRODUCED_13],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_12,X_INTRODUCED_14],-9);
constraint array_bool_or([X_INTRODUCED_30,X_INTRODUCED_31],true);
constraint array_bool_or([X_INTRODUCED_32,X_INTRODUCED_33],true);
constraint array_bool_or([X_INTRODUCED_37,X_INTRODUCED_38],true);
constraint array_bool_or([X_INTRODUCED_39,X_INTRODUCED_40],true);
constraint array_bool_or([X_INTRODUCED_41,X_INTRODUCED_42],true);
constraint array_bool_or([X_INTRODUCED_44,X_INTRODUCED_45],true);
constraint jacop_cumulative(X_INTRODUCED_49,X_INTRODUCED_48,X_INTRODUCED_47,14);
constraint jacop_cumulative(X_INTRODUCED_52,X_INTRODUCED_51,X_INTRODUCED_50,12);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,objective],-75);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_13,objective],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_14,objective],-9);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_1],-3,X_INTRODUCED_30):: defines_var(X_INTRODUCED_30);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_2],-8,X_INTRODUCED_31):: defines_var(X_INTRODUCED_31);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_10,X_INTRODUCED_1],-200,X_INTRODUCED_32):: defines_var(X_INTRODUCED_32);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_10],-8,X_INTRODUCED_33):: defines_var(X_INTRODUCED_33);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_10,X_INTRODUCED_2],-200,X_INTRODUCED_37):: defines_var(X_INTRODUCED_37);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_10],-3,X_INTRODUCED_38):: defines_var(X_INTRODUCED_38);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_13,X_INTRODUCED_2],-10,X_INTRODUCED_39):: defines_var(X_INTRODUCED_39);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_13],-3,X_INTRODUCED_40):: defines_var(X_INTRODUCED_40);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_10,X_INTRODUCED_4],-200,X_INTRODUCED_41):: defines_var(X_INTRODUCED_41);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_10],-175,X_INTRODUCED_42):: defines_var(X_INTRODUCED_42);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_13,X_INTRODUCED_10],-10,X_INTRODUCED_44):: defines_var(X_INTRODUCED_44);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_10,X_INTRODUCED_13],-200,X_INTRODUCED_45):: defines_var(X_INTRODUCED_45);
solve :: int_search(X_INTRODUCED_55,smallest,indomain_min,complete) minimize objective;
