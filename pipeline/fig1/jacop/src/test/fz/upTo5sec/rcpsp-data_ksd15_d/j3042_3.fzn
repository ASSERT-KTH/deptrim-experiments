predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_17 = [1,-1];
array [1..13] of int: X_INTRODUCED_31 = [6,3,3,4,5,3,2,10,2,5,8,1,5];
array [1..13] of int: X_INTRODUCED_32 = [7,10,1,25,100,50,150,100,100,6,10,2,10];
array [1..11] of int: X_INTRODUCED_34 = [2,8,10,2,1,8,2,6,5,9,9];
array [1..11] of int: X_INTRODUCED_35 = [7,1,25,100,50,125,150,100,100,2,10];
array [1..11] of int: X_INTRODUCED_37 = [3,8,7,7,7,10,5,10,9,10,5];
array [1..11] of int: X_INTRODUCED_38 = [10,25,100,50,125,100,100,6,10,2,10];
array [1..12] of int: X_INTRODUCED_40 = [10,8,7,7,6,9,5,8,2,2,4,4];
array [1..12] of int: X_INTRODUCED_41 = [7,10,1,10,25,50,150,100,6,10,2,10];
var 0..705: X_INTRODUCED_0;
var 0..705: X_INTRODUCED_1;
var 0..705: X_INTRODUCED_2;
var 0..705: X_INTRODUCED_3;
var 0..705: X_INTRODUCED_4;
var 0..705: X_INTRODUCED_5;
var 0..705: X_INTRODUCED_6;
var 0..705: X_INTRODUCED_7;
var 0..705: X_INTRODUCED_8;
var 0..705: X_INTRODUCED_9;
var 0..705: X_INTRODUCED_10;
var 0..705: X_INTRODUCED_11;
var 0..705: X_INTRODUCED_12;
var 0..705: X_INTRODUCED_13;
var 0..705: X_INTRODUCED_14;
var 0..706: objective:: output_var;
array [1..15] of var int: s:: output_array([1..15]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..13] of var int: X_INTRODUCED_33 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..11] of var int: X_INTRODUCED_36 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_2,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..11] of var int: X_INTRODUCED_39 ::var_is_introduced  = [X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..12] of var int: X_INTRODUCED_42 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_6,X_INTRODUCED_8,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..16] of var int: X_INTRODUCED_47 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,objective];
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_6],-7);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_4],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_8],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_3],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_5],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_9],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_6],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_7],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_11],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_7],-25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_14],-25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_10],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_11],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_14],-50);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,X_INTRODUCED_10],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,X_INTRODUCED_13],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,X_INTRODUCED_9],-150);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,X_INTRODUCED_12],-150);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_11],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_14],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_12,X_INTRODUCED_13],-10);
constraint jacop_cumulative(X_INTRODUCED_33,X_INTRODUCED_32,X_INTRODUCED_31,19);
constraint jacop_cumulative(X_INTRODUCED_36,X_INTRODUCED_35,X_INTRODUCED_34,20);
constraint jacop_cumulative(X_INTRODUCED_39,X_INTRODUCED_38,X_INTRODUCED_37,26);
constraint jacop_cumulative(X_INTRODUCED_42,X_INTRODUCED_41,X_INTRODUCED_40,18);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,objective],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_11,objective],-6);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_13,objective],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_14,objective],-10);
solve :: int_search(X_INTRODUCED_47,smallest,indomain_min,complete) minimize objective;
