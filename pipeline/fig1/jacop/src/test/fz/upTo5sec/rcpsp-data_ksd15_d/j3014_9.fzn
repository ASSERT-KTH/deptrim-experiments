predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_17 = [1,-1];
array [1..15] of int: X_INTRODUCED_34 = [8,4,2,4,4,9,6,4,9,10,9,8,4,8,9];
array [1..15] of int: X_INTRODUCED_35 = [10,9,5,1,25,225,125,225,100,200,175,2,3,1,8];
array [1..15] of int: X_INTRODUCED_37 = [1,6,4,1,1,7,5,3,2,10,6,2,9,7,10];
array [1..15] of int: X_INTRODUCED_39 = [10,2,10,5,3,2,1,5,9,2,10,4,6,2,1];
array [1..15] of int: X_INTRODUCED_41 = [6,9,10,3,9,4,8,5,5,9,3,4,6,2,5];
var 0..1113: X_INTRODUCED_0;
var 0..1113: X_INTRODUCED_1;
var 0..1113: X_INTRODUCED_2;
var 0..1113: X_INTRODUCED_3;
var 0..1113: X_INTRODUCED_4;
var 0..1113: X_INTRODUCED_5;
var 0..1113: X_INTRODUCED_6;
var 0..1113: X_INTRODUCED_7;
var 0..1113: X_INTRODUCED_8;
var 0..1113: X_INTRODUCED_9;
var 0..1113: X_INTRODUCED_10;
var 0..1113: X_INTRODUCED_11;
var 0..1113: X_INTRODUCED_12;
var 0..1113: X_INTRODUCED_13;
var 0..1113: X_INTRODUCED_14;
var 0..1114: objective:: output_var;
var bool: X_INTRODUCED_26 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_28 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_29 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_30 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_31 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_32 ::var_is_introduced :: is_defined_var;
array [1..15] of var int: s:: output_array([1..15]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..16] of var int: X_INTRODUCED_49 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,objective];
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_7],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_8],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_3],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_5],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_6],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_4],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_13],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_12],-25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_9],-225);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_10],-225);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,X_INTRODUCED_11],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_12],-200);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,X_INTRODUCED_12],-175);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,X_INTRODUCED_14],-175);
constraint array_bool_or([X_INTRODUCED_26,X_INTRODUCED_28],true);
constraint array_bool_or([X_INTRODUCED_29,X_INTRODUCED_30],true);
constraint array_bool_or([X_INTRODUCED_31,X_INTRODUCED_32],true);
constraint jacop_cumulative(s,X_INTRODUCED_35,X_INTRODUCED_34,26);
constraint jacop_cumulative(s,X_INTRODUCED_35,X_INTRODUCED_37,23);
constraint jacop_cumulative(s,X_INTRODUCED_35,X_INTRODUCED_39,19);
constraint jacop_cumulative(s,X_INTRODUCED_35,X_INTRODUCED_41,26);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,objective],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,objective],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,objective],-225);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_11,objective],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_12,objective],-3);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_13,objective],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_14,objective],-8);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_0],-5,X_INTRODUCED_26):: defines_var(X_INTRODUCED_26);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_2],-10,X_INTRODUCED_28):: defines_var(X_INTRODUCED_28);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_10,X_INTRODUCED_0],-175,X_INTRODUCED_29):: defines_var(X_INTRODUCED_29);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_10],-10,X_INTRODUCED_30):: defines_var(X_INTRODUCED_30);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_10,X_INTRODUCED_2],-175,X_INTRODUCED_31):: defines_var(X_INTRODUCED_31);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_10],-5,X_INTRODUCED_32):: defines_var(X_INTRODUCED_32);
solve :: int_search(X_INTRODUCED_49,smallest,indomain_min,complete) minimize objective;
