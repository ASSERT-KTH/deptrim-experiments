predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_17 = [1,-1];
array [1..8] of int: X_INTRODUCED_31 = [9,3,7,5,7,2,4,10];
array [1..8] of int: X_INTRODUCED_32 = [2,2,6,50,200,225,150,1];
array [1..6] of int: X_INTRODUCED_34 = [7,8,3,3,6,2];
array [1..6] of int: X_INTRODUCED_35 = [10,50,50,100,2,4];
array [1..11] of int: X_INTRODUCED_37 = [8,3,10,8,7,7,3,1,3,9,2];
array [1..11] of int: X_INTRODUCED_38 = [2,2,10,125,50,225,150,1,2,7,4];
array [1..9] of int: X_INTRODUCED_40 = [8,2,3,2,7,7,2,1,1];
array [1..9] of int: X_INTRODUCED_41 = [2,10,6,50,125,200,225,2,7];
var 0..933: X_INTRODUCED_0;
var 0..933: X_INTRODUCED_1;
var 0..933: X_INTRODUCED_2;
var 0..933: X_INTRODUCED_3;
var 0..933: X_INTRODUCED_4;
var 0..933: X_INTRODUCED_5;
var 0..933: X_INTRODUCED_6;
var 0..933: X_INTRODUCED_7;
var 0..933: X_INTRODUCED_8;
var 0..933: X_INTRODUCED_9;
var 0..933: X_INTRODUCED_10;
var 0..933: X_INTRODUCED_11;
var 0..933: X_INTRODUCED_12;
var 0..933: X_INTRODUCED_13;
var 0..933: X_INTRODUCED_14;
var 0..934: objective:: output_var;
array [1..15] of var int: s:: output_array([1..15]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..8] of var int: X_INTRODUCED_33 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_3,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_11];
array [1..6] of var int: X_INTRODUCED_36 ::var_is_introduced  = [X_INTRODUCED_2,X_INTRODUCED_4,X_INTRODUCED_6,X_INTRODUCED_10,X_INTRODUCED_12,X_INTRODUCED_14];
array [1..11] of var int: X_INTRODUCED_39 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..9] of var int: X_INTRODUCED_42 ::var_is_introduced  = [X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_12,X_INTRODUCED_13];
array [1..16] of var int: X_INTRODUCED_46 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,objective];
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_5],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_7],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_7],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_3],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_4],-6);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_13],-50);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_6],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_8],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_9],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_11],-50);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,X_INTRODUCED_10],-200);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,X_INTRODUCED_12],-200);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_14],-150);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,X_INTRODUCED_14],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_11,X_INTRODUCED_12],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_12,X_INTRODUCED_13],-2);
constraint jacop_cumulative(X_INTRODUCED_33,X_INTRODUCED_32,X_INTRODUCED_31,21);
constraint jacop_cumulative(X_INTRODUCED_36,X_INTRODUCED_35,X_INTRODUCED_34,18);
constraint jacop_cumulative(X_INTRODUCED_39,X_INTRODUCED_38,X_INTRODUCED_37,19);
constraint jacop_cumulative(X_INTRODUCED_42,X_INTRODUCED_41,X_INTRODUCED_40,19);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,objective],-225);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_13,objective],-7);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_14,objective],-4);
solve :: int_search(X_INTRODUCED_46,smallest,indomain_min,complete) minimize objective;
