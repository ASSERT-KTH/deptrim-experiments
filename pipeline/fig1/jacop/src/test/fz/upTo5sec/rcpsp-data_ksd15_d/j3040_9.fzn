predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_17 = [1,-1];
array [1..7] of int: X_INTRODUCED_33 = [1,3,6,3,2,10,8];
array [1..7] of int: X_INTRODUCED_34 = [1,150,25,100,5,10,5];
array [1..11] of int: X_INTRODUCED_36 = [4,7,5,7,3,6,4,3,3,7,10];
array [1..11] of int: X_INTRODUCED_37 = [9,9,8,150,150,150,175,25,5,10,5];
array [1..6] of int: X_INTRODUCED_39 = [10,1,3,3,6,6];
array [1..6] of int: X_INTRODUCED_40 = [150,150,100,5,10,10];
array [1..7] of int: X_INTRODUCED_42 = [9,5,5,3,2,1,10];
array [1..7] of int: X_INTRODUCED_43 = [9,1,50,150,5,10,5];
var 0..856: X_INTRODUCED_0;
var 0..856: X_INTRODUCED_1;
var 0..856: X_INTRODUCED_2;
var 0..856: X_INTRODUCED_3;
var 0..856: X_INTRODUCED_4;
var 0..856: X_INTRODUCED_5;
var 0..856: X_INTRODUCED_6;
var 0..856: X_INTRODUCED_7;
var 0..856: X_INTRODUCED_8;
var 0..856: X_INTRODUCED_9;
var 0..856: X_INTRODUCED_10;
var 0..856: X_INTRODUCED_11;
var 0..856: X_INTRODUCED_12;
var 0..856: X_INTRODUCED_13;
var 0..856: X_INTRODUCED_14;
var 0..857: objective:: output_var;
var bool: X_INTRODUCED_30 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_31 ::var_is_introduced :: is_defined_var;
array [1..15] of var int: s:: output_array([1..15]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..7] of var int: X_INTRODUCED_35 ::var_is_introduced  = [X_INTRODUCED_3,X_INTRODUCED_5,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_14];
array [1..11] of var int: X_INTRODUCED_38 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_14];
array [1..6] of var int: X_INTRODUCED_41 ::var_is_introduced  = [X_INTRODUCED_5,X_INTRODUCED_7,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13];
array [1..7] of var int: X_INTRODUCED_44 ::var_is_introduced  = [X_INTRODUCED_1,X_INTRODUCED_3,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_11,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..16] of var int: X_INTRODUCED_48 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,objective];
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_3],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_6],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_7],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_8],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_9],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_10],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_4],-8);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_5],-8);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_8],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_9],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_14],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_11],-150);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_8],-150);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_10],-150);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_14],-150);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_9],-50);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,X_INTRODUCED_11],-150);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,X_INTRODUCED_12],-175);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_11,X_INTRODUCED_14],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_12,X_INTRODUCED_13],-10);
constraint array_bool_or([X_INTRODUCED_30,X_INTRODUCED_31],true);
constraint jacop_cumulative(X_INTRODUCED_35,X_INTRODUCED_34,X_INTRODUCED_33,25);
constraint jacop_cumulative(X_INTRODUCED_38,X_INTRODUCED_37,X_INTRODUCED_36,21);
constraint jacop_cumulative(X_INTRODUCED_41,X_INTRODUCED_40,X_INTRODUCED_39,16);
constraint jacop_cumulative(X_INTRODUCED_44,X_INTRODUCED_43,X_INTRODUCED_42,15);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,objective],-25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,objective],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_13,objective],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_14,objective],-5);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_14,X_INTRODUCED_1],-5,X_INTRODUCED_30):: defines_var(X_INTRODUCED_30);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_14],-9,X_INTRODUCED_31):: defines_var(X_INTRODUCED_31);
solve :: int_search(X_INTRODUCED_48,smallest,indomain_min,complete) minimize objective;
