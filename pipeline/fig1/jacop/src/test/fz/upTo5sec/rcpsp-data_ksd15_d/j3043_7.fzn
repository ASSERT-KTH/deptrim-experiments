predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_17 = [1,-1];
array [1..10] of int: X_INTRODUCED_30 = [2,6,3,4,10,5,6,3,7,9];
array [1..10] of int: X_INTRODUCED_31 = [10,8,50,225,225,25,100,8,7,1];
array [1..11] of int: X_INTRODUCED_33 = [9,7,9,2,5,6,10,6,5,9,5];
array [1..11] of int: X_INTRODUCED_34 = [10,8,7,250,100,50,225,25,100,8,1];
array [1..10] of int: X_INTRODUCED_36 = [8,4,2,6,7,2,8,5,1,9];
array [1..10] of int: X_INTRODUCED_37 = [1,8,7,250,100,225,25,8,1,2];
array [1..9] of int: X_INTRODUCED_39 = [6,6,10,1,1,1,10,1,8];
array [1..9] of int: X_INTRODUCED_40 = [1,8,7,100,225,225,25,8,7];
var 0..1018: X_INTRODUCED_0;
var 0..1018: X_INTRODUCED_1;
var 0..1018: X_INTRODUCED_2;
var 0..1018: X_INTRODUCED_3;
var 0..1018: X_INTRODUCED_4;
var 0..1018: X_INTRODUCED_5;
var 0..1018: X_INTRODUCED_6;
var 0..1018: X_INTRODUCED_7;
var 0..1018: X_INTRODUCED_8;
var 0..1018: X_INTRODUCED_9;
var 0..1018: X_INTRODUCED_10;
var 0..1018: X_INTRODUCED_11;
var 0..1018: X_INTRODUCED_12;
var 0..1018: X_INTRODUCED_13;
var 0..1018: X_INTRODUCED_14;
var 0..1019: objective:: output_var;
array [1..15] of var int: s:: output_array([1..15]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..10] of var int: X_INTRODUCED_32 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_2,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13];
array [1..11] of var int: X_INTRODUCED_35 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_13];
array [1..10] of var int: X_INTRODUCED_38 ::var_is_introduced  = [X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_11,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..9] of var int: X_INTRODUCED_41 ::var_is_introduced  = [X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_5,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_11,X_INTRODUCED_12];
array [1..16] of var int: X_INTRODUCED_46 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,objective];
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_8],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_13],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_4],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_5],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_3],-8);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_7],-8);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_10],-8);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_14],-7);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_6],-250);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_12],-250);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_9],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_8],-50);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_13],-50);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_14],-50);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,X_INTRODUCED_8],-225);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_10],-25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_12],-25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_13],-25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,X_INTRODUCED_11],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_11,X_INTRODUCED_14],-8);
constraint jacop_cumulative(X_INTRODUCED_32,X_INTRODUCED_31,X_INTRODUCED_30,23);
constraint jacop_cumulative(X_INTRODUCED_35,X_INTRODUCED_34,X_INTRODUCED_33,35);
constraint jacop_cumulative(X_INTRODUCED_38,X_INTRODUCED_37,X_INTRODUCED_36,22);
constraint jacop_cumulative(X_INTRODUCED_41,X_INTRODUCED_40,X_INTRODUCED_39,24);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,objective],-225);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_12,objective],-7);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_13,objective],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_14,objective],-2);
solve :: int_search(X_INTRODUCED_46,smallest,indomain_min,complete) minimize objective;
