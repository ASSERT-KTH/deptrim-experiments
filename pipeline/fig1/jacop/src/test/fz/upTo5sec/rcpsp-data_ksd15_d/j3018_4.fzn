predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_17 = [1,-1];
array [1..3] of int: X_INTRODUCED_44 = [2,10,6];
array [1..3] of int: X_INTRODUCED_45 = [7,225,6];
array [1..5] of int: X_INTRODUCED_47 = [10,7,6,3,7];
array [1..5] of int: X_INTRODUCED_48 = [3,8,225,150,200];
array [1..4] of int: X_INTRODUCED_50 = [1,10,6,1];
array [1..4] of int: X_INTRODUCED_51 = [25,75,175,4];
array [1..3] of int: X_INTRODUCED_53 = [8,3,7];
array [1..3] of int: X_INTRODUCED_54 = [5,9,8];
var 0..1124: X_INTRODUCED_0;
var 0..1124: X_INTRODUCED_1;
var 0..1124: X_INTRODUCED_2;
var 0..1124: X_INTRODUCED_3;
var 0..1124: X_INTRODUCED_4;
var 0..1124: X_INTRODUCED_5;
var 0..1124: X_INTRODUCED_6;
var 0..1124: X_INTRODUCED_7;
var 0..1124: X_INTRODUCED_8;
var 0..1124: X_INTRODUCED_9;
var 0..1124: X_INTRODUCED_10;
var 0..1124: X_INTRODUCED_11;
var 0..1124: X_INTRODUCED_12;
var 0..1124: X_INTRODUCED_13;
var 0..1124: X_INTRODUCED_14;
var 0..1125: objective:: output_var;
var bool: X_INTRODUCED_27 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_28 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_31 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_32 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_34 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_36 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_38 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_39 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_41 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_42 ::var_is_introduced :: is_defined_var;
array [1..15] of var int: s:: output_array([1..15]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..3] of var int: X_INTRODUCED_46 ::var_is_introduced  = [X_INTRODUCED_2,X_INTRODUCED_4,X_INTRODUCED_14];
array [1..5] of var int: X_INTRODUCED_49 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_9];
array [1..4] of var int: X_INTRODUCED_52 ::var_is_introduced  = [X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_10,X_INTRODUCED_11];
array [1..3] of var int: X_INTRODUCED_55 ::var_is_introduced  = [X_INTRODUCED_3,X_INTRODUCED_12,X_INTRODUCED_13];
array [1..16] of var int: X_INTRODUCED_57 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,objective];
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_4],-3);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_5],-3);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_3],-8);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_4],-8);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_3],-7);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_11],-7);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_6],-225);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_9],-225);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_8],-225);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_7],-150);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_10],-150);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,X_INTRODUCED_12],-25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,X_INTRODUCED_14],-75);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_11,X_INTRODUCED_13],-4);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_11,X_INTRODUCED_14],-4);
constraint array_bool_or([X_INTRODUCED_27,X_INTRODUCED_28],true);
constraint array_bool_or([X_INTRODUCED_31,X_INTRODUCED_32],true);
constraint array_bool_or([X_INTRODUCED_34,X_INTRODUCED_36],true);
constraint array_bool_or([X_INTRODUCED_38,X_INTRODUCED_39],true);
constraint array_bool_or([X_INTRODUCED_41,X_INTRODUCED_42],true);
constraint jacop_cumulative(X_INTRODUCED_46,X_INTRODUCED_45,X_INTRODUCED_44,13);
constraint jacop_cumulative(X_INTRODUCED_49,X_INTRODUCED_48,X_INTRODUCED_47,14);
constraint jacop_cumulative(X_INTRODUCED_52,X_INTRODUCED_51,X_INTRODUCED_50,13);
constraint jacop_cumulative(X_INTRODUCED_55,X_INTRODUCED_54,X_INTRODUCED_53,12);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,objective],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,objective],-200);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,objective],-175);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_12,objective],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_13,objective],-8);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_14,objective],-6);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_0],-8,X_INTRODUCED_27):: defines_var(X_INTRODUCED_27);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_1],-3,X_INTRODUCED_28):: defines_var(X_INTRODUCED_28);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_0],-200,X_INTRODUCED_31):: defines_var(X_INTRODUCED_31);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_9],-3,X_INTRODUCED_32):: defines_var(X_INTRODUCED_32);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_13,X_INTRODUCED_3],-8,X_INTRODUCED_34):: defines_var(X_INTRODUCED_34);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_13],-5,X_INTRODUCED_36):: defines_var(X_INTRODUCED_36);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_14,X_INTRODUCED_4],-6,X_INTRODUCED_38):: defines_var(X_INTRODUCED_38);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_14],-225,X_INTRODUCED_39):: defines_var(X_INTRODUCED_39);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_10,X_INTRODUCED_8],-175,X_INTRODUCED_41):: defines_var(X_INTRODUCED_41);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_8,X_INTRODUCED_10],-75,X_INTRODUCED_42):: defines_var(X_INTRODUCED_42);
solve :: int_search(X_INTRODUCED_57,smallest,indomain_min,complete) minimize objective;
