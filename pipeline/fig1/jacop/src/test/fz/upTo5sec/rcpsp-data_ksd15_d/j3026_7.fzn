predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_17 = [1,-1];
array [1..13] of int: X_INTRODUCED_28 = [3,6,7,9,5,5,5,7,10,4,10,3,6];
array [1..13] of int: X_INTRODUCED_29 = [2,9,8,6,50,225,225,100,125,10,8,2,9];
array [1..13] of int: X_INTRODUCED_31 = [5,9,1,3,1,1,5,8,6,2,4,5,5];
array [1..13] of int: X_INTRODUCED_32 = [9,8,6,50,75,225,100,150,125,10,8,2,9];
array [1..14] of int: X_INTRODUCED_34 = [10,6,9,2,9,10,7,3,7,10,4,3,3,2];
array [1..14] of int: X_INTRODUCED_35 = [9,8,6,50,75,225,225,100,150,125,10,8,2,9];
array [1..12] of int: X_INTRODUCED_37 = [3,1,4,8,7,3,2,6,10,9,10,8];
array [1..12] of int: X_INTRODUCED_38 = [2,9,8,6,75,225,225,100,150,125,10,8];
var 0..1003: X_INTRODUCED_0;
var 0..1003: X_INTRODUCED_1;
var 0..1003: X_INTRODUCED_2;
var 0..1003: X_INTRODUCED_3;
var 0..1003: X_INTRODUCED_4;
var 0..1003: X_INTRODUCED_5;
var 0..1003: X_INTRODUCED_6;
var 0..1003: X_INTRODUCED_7;
var 0..1003: X_INTRODUCED_8;
var 0..1003: X_INTRODUCED_9;
var 0..1003: X_INTRODUCED_10;
var 0..1003: X_INTRODUCED_11;
var 0..1003: X_INTRODUCED_12;
var 0..1003: X_INTRODUCED_13;
var 0..1003: X_INTRODUCED_14;
var 0..1004: objective:: output_var;
array [1..15] of var int: s:: output_array([1..15]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..13] of var int: X_INTRODUCED_30 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..13] of var int: X_INTRODUCED_33 ::var_is_introduced  = [X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..14] of var int: X_INTRODUCED_36 ::var_is_introduced  = [X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..12] of var int: X_INTRODUCED_39 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12];
array [1..16] of var int: X_INTRODUCED_46 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,objective];
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_7],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_3],-8);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_11],-8);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_4],-6);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_5],-6);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_8],-50);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_12],-50);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_6],-75);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_9],-225);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_10],-225);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_13],-225);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,X_INTRODUCED_8],-225);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,X_INTRODUCED_13],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_12,X_INTRODUCED_14],-8);
constraint jacop_cumulative(X_INTRODUCED_30,X_INTRODUCED_29,X_INTRODUCED_28,26);
constraint jacop_cumulative(X_INTRODUCED_33,X_INTRODUCED_32,X_INTRODUCED_31,21);
constraint jacop_cumulative(X_INTRODUCED_36,X_INTRODUCED_35,X_INTRODUCED_34,25);
constraint jacop_cumulative(X_INTRODUCED_39,X_INTRODUCED_38,X_INTRODUCED_37,21);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,objective],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,objective],-150);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,objective],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_11,objective],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_13,objective],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_14,objective],-9);
solve :: int_search(X_INTRODUCED_46,smallest,indomain_min,complete) minimize objective;
