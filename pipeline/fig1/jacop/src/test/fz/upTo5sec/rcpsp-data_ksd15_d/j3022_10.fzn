predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_17 = [1,-1];
array [1..3] of int: X_INTRODUCED_36 = [9,8,8];
array [1..3] of int: X_INTRODUCED_37 = [2,100,7];
array [1..8] of int: X_INTRODUCED_39 = [8,2,3,3,7,9,10,2];
array [1..8] of int: X_INTRODUCED_40 = [1,2,9,125,125,100,200,10];
array [1..7] of int: X_INTRODUCED_42 = [8,6,5,1,5,9,1];
array [1..7] of int: X_INTRODUCED_43 = [6,1,125,100,10,9,7];
array [1..12] of int: X_INTRODUCED_45 = [1,5,5,3,1,9,7,3,3,8,4,2];
array [1..12] of int: X_INTRODUCED_46 = [6,1,2,9,200,125,150,100,200,100,2,7];
var 0..1045: X_INTRODUCED_0;
var 0..1045: X_INTRODUCED_1;
var 0..1045: X_INTRODUCED_2;
var 0..1045: X_INTRODUCED_3;
var 0..1045: X_INTRODUCED_4;
var 0..1045: X_INTRODUCED_5;
var 0..1045: X_INTRODUCED_6;
var 0..1045: X_INTRODUCED_7;
var 0..1045: X_INTRODUCED_8;
var 0..1045: X_INTRODUCED_9;
var 0..1045: X_INTRODUCED_10;
var 0..1045: X_INTRODUCED_11;
var 0..1045: X_INTRODUCED_12;
var 0..1045: X_INTRODUCED_13;
var 0..1045: X_INTRODUCED_14;
var 0..1046: objective:: output_var;
var bool: X_INTRODUCED_28 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_29 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_31 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_32 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_33 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_34 ::var_is_introduced :: is_defined_var;
array [1..15] of var int: s:: output_array([1..15]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..3] of var int: X_INTRODUCED_38 ::var_is_introduced  = [X_INTRODUCED_2,X_INTRODUCED_8,X_INTRODUCED_14];
array [1..8] of var int: X_INTRODUCED_41 ::var_is_introduced  = [X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_11];
array [1..7] of var int: X_INTRODUCED_44 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_6,X_INTRODUCED_8,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_14];
array [1..12] of var int: X_INTRODUCED_47 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..16] of var int: X_INTRODUCED_52 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,objective];
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_3],-6);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_6],-6);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_6],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_12],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_4],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_7],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_11],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_5],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_5],-200);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_9],-200);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_12],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_8],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_10],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_14],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,X_INTRODUCED_11],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_14],-200);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,X_INTRODUCED_13],-100);
constraint array_bool_or([X_INTRODUCED_28,X_INTRODUCED_29],true);
constraint array_bool_or([X_INTRODUCED_31,X_INTRODUCED_32],true);
constraint array_bool_or([X_INTRODUCED_33,X_INTRODUCED_34],true);
constraint jacop_cumulative(X_INTRODUCED_38,X_INTRODUCED_37,X_INTRODUCED_36,15);
constraint jacop_cumulative(X_INTRODUCED_41,X_INTRODUCED_40,X_INTRODUCED_39,21);
constraint jacop_cumulative(X_INTRODUCED_44,X_INTRODUCED_43,X_INTRODUCED_42,21);
constraint jacop_cumulative(X_INTRODUCED_47,X_INTRODUCED_46,X_INTRODUCED_45,22);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,objective],-150);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_11,objective],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_12,objective],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_13,objective],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_14,objective],-7);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_8,X_INTRODUCED_2],-100,X_INTRODUCED_28):: defines_var(X_INTRODUCED_28);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_8],-2,X_INTRODUCED_29):: defines_var(X_INTRODUCED_29);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_14,X_INTRODUCED_2],-7,X_INTRODUCED_31):: defines_var(X_INTRODUCED_31);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_14],-2,X_INTRODUCED_32):: defines_var(X_INTRODUCED_32);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_14,X_INTRODUCED_8],-7,X_INTRODUCED_33):: defines_var(X_INTRODUCED_33);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_8,X_INTRODUCED_14],-100,X_INTRODUCED_34):: defines_var(X_INTRODUCED_34);
solve :: int_search(X_INTRODUCED_52,smallest,indomain_min,complete) minimize objective;
