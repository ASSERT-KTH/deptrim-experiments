predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_17 = [1,-1];
array [1..11] of int: X_INTRODUCED_26 = [5,1,1,10,5,4,8,9,9,6,9];
array [1..11] of int: X_INTRODUCED_27 = [9,200,200,100,150,250,125,25,5,9,10];
array [1..11] of int: X_INTRODUCED_29 = [8,7,10,5,8,10,9,5,7,10,4];
array [1..11] of int: X_INTRODUCED_30 = [8,9,200,200,100,150,250,125,2,9,10];
array [1..15] of int: X_INTRODUCED_32 = [8,9,5,3,8,4,3,7,9,6,1,4,4,10,2];
array [1..15] of int: X_INTRODUCED_33 = [8,4,9,6,200,200,100,150,250,125,25,2,5,9,10];
array [1..8] of int: X_INTRODUCED_35 = [10,5,4,7,1,6,4,7];
array [1..8] of int: X_INTRODUCED_36 = [4,9,200,250,25,2,5,10];
var 0..1102: X_INTRODUCED_0;
var 0..1102: X_INTRODUCED_1;
var 0..1102: X_INTRODUCED_2;
var 0..1102: X_INTRODUCED_3;
var 0..1102: X_INTRODUCED_4;
var 0..1102: X_INTRODUCED_5;
var 0..1102: X_INTRODUCED_6;
var 0..1102: X_INTRODUCED_7;
var 0..1102: X_INTRODUCED_8;
var 0..1102: X_INTRODUCED_9;
var 0..1102: X_INTRODUCED_10;
var 0..1102: X_INTRODUCED_11;
var 0..1102: X_INTRODUCED_12;
var 0..1102: X_INTRODUCED_13;
var 0..1102: X_INTRODUCED_14;
var 0..1103: objective:: output_var;
array [1..15] of var int: s:: output_array([1..15]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..11] of var int: X_INTRODUCED_28 ::var_is_introduced  = [X_INTRODUCED_2,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..11] of var int: X_INTRODUCED_31 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_2,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_11,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..8] of var int: X_INTRODUCED_37 ::var_is_introduced  = [X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_4,X_INTRODUCED_8,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_14];
array [1..16] of var int: X_INTRODUCED_46 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,objective];
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_6],-8);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_7],-8);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_8],-8);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_3],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_4],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_12],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_5],-6);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_11],-6);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_9],-200);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_11],-200);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_14],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,X_INTRODUCED_13],-150);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,X_INTRODUCED_14],-150);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,X_INTRODUCED_10],-250);
constraint jacop_cumulative(X_INTRODUCED_28,X_INTRODUCED_27,X_INTRODUCED_26,38);
constraint jacop_cumulative(X_INTRODUCED_31,X_INTRODUCED_30,X_INTRODUCED_29,42);
constraint jacop_cumulative(s,X_INTRODUCED_33,X_INTRODUCED_32,46);
constraint jacop_cumulative(X_INTRODUCED_37,X_INTRODUCED_36,X_INTRODUCED_35,25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,objective],-4);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,objective],-200);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,objective],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,objective],-25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_11,objective],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_12,objective],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_13,objective],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_14,objective],-10);
solve :: int_search(X_INTRODUCED_46,smallest,indomain_min,complete) minimize objective;
