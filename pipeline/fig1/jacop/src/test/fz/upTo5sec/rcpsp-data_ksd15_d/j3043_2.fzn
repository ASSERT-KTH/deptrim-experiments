predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_17 = [1,-1];
array [1..11] of int: X_INTRODUCED_29 = [3,8,5,5,10,6,9,1,4,3,5];
array [1..11] of int: X_INTRODUCED_30 = [1,5,100,125,175,250,25,50,6,8,8];
array [1..13] of int: X_INTRODUCED_32 = [3,1,1,9,4,5,8,2,3,3,4,5,2];
array [1..13] of int: X_INTRODUCED_33 = [1,6,5,1,125,175,250,25,50,6,8,1,8];
array [1..11] of int: X_INTRODUCED_35 = [3,10,7,2,7,7,5,10,4,8,5];
array [1..11] of int: X_INTRODUCED_36 = [1,5,1,100,125,175,25,200,6,8,1];
array [1..13] of int: X_INTRODUCED_38 = [10,6,9,1,3,8,8,2,8,10,2,2,6];
array [1..13] of int: X_INTRODUCED_39 = [1,6,5,1,100,125,175,25,200,6,8,1,8];
var 0..960: X_INTRODUCED_0;
var 0..960: X_INTRODUCED_1;
var 0..960: X_INTRODUCED_2;
var 0..960: X_INTRODUCED_3;
var 0..960: X_INTRODUCED_4;
var 0..960: X_INTRODUCED_5;
var 0..960: X_INTRODUCED_6;
var 0..960: X_INTRODUCED_7;
var 0..960: X_INTRODUCED_8;
var 0..960: X_INTRODUCED_9;
var 0..960: X_INTRODUCED_10;
var 0..960: X_INTRODUCED_11;
var 0..960: X_INTRODUCED_12;
var 0..960: X_INTRODUCED_13;
var 0..960: X_INTRODUCED_14;
var 0..961: objective:: output_var;
array [1..15] of var int: s:: output_array([1..15]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..11] of var int: X_INTRODUCED_31 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_2,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_14];
array [1..13] of var int: X_INTRODUCED_34 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..11] of var int: X_INTRODUCED_37 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_8,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13];
array [1..13] of var int: X_INTRODUCED_40 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_8,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..16] of var int: X_INTRODUCED_46 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,objective];
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_3],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_5],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_6],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_13],-6);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_14],-6);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_4],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_11],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_14],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_10],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_9],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_7],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_9],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_8],-175);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_11],-175);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_13],-175);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,X_INTRODUCED_11],-250);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,X_INTRODUCED_12],-250);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,X_INTRODUCED_10],-25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,X_INTRODUCED_14],-25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_12,X_INTRODUCED_13],-8);
constraint jacop_cumulative(X_INTRODUCED_31,X_INTRODUCED_30,X_INTRODUCED_29,28);
constraint jacop_cumulative(X_INTRODUCED_34,X_INTRODUCED_33,X_INTRODUCED_32,25);
constraint jacop_cumulative(X_INTRODUCED_37,X_INTRODUCED_36,X_INTRODUCED_35,28);
constraint jacop_cumulative(X_INTRODUCED_40,X_INTRODUCED_39,X_INTRODUCED_38,25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,objective],-50);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,objective],-200);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_11,objective],-6);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_13,objective],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_14,objective],-8);
solve :: int_search(X_INTRODUCED_46,smallest,indomain_min,complete) minimize objective;
