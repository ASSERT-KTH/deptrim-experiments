predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_17 = [1,-1];
array [1..9] of int: X_INTRODUCED_38 = [3,1,10,4,3,10,1,4,3];
array [1..9] of int: X_INTRODUCED_39 = [3,100,125,25,250,250,9,10,4];
array [1..9] of int: X_INTRODUCED_41 = [3,9,6,10,3,9,5,7,2];
array [1..9] of int: X_INTRODUCED_42 = [1,3,200,25,250,9,10,6,4];
array [1..5] of int: X_INTRODUCED_44 = [5,9,7,9,8];
array [1..5] of int: X_INTRODUCED_45 = [7,5,100,250,6];
array [1..6] of int: X_INTRODUCED_47 = [4,2,9,10,2,9];
array [1..6] of int: X_INTRODUCED_48 = [7,3,5,250,250,6];
var 0..1094: X_INTRODUCED_0;
var 0..1094: X_INTRODUCED_1;
var 0..1094: X_INTRODUCED_2;
var 0..1094: X_INTRODUCED_3;
var 0..1094: X_INTRODUCED_4;
var 0..1094: X_INTRODUCED_5;
var 0..1094: X_INTRODUCED_6;
var 0..1094: X_INTRODUCED_7;
var 0..1094: X_INTRODUCED_8;
var 0..1094: X_INTRODUCED_9;
var 0..1094: X_INTRODUCED_10;
var 0..1094: X_INTRODUCED_11;
var 0..1094: X_INTRODUCED_12;
var 0..1094: X_INTRODUCED_13;
var 0..1094: X_INTRODUCED_14;
var 0..1095: objective:: output_var;
var bool: X_INTRODUCED_29 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_30 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_32 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_33 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_35 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_36 ::var_is_introduced :: is_defined_var;
array [1..15] of var int: s:: output_array([1..15]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..9] of var int: X_INTRODUCED_40 ::var_is_introduced  = [X_INTRODUCED_2,X_INTRODUCED_5,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_14];
array [1..9] of var int: X_INTRODUCED_43 ::var_is_introduced  = [X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_4,X_INTRODUCED_8,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..5] of var int: X_INTRODUCED_46 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_3,X_INTRODUCED_6,X_INTRODUCED_9,X_INTRODUCED_13];
array [1..6] of var int: X_INTRODUCED_49 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_13];
array [1..16] of var int: X_INTRODUCED_52 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,objective];
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_5],-7);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_6],-7);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_7],-7);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_3],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_4],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_8],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_6],-3);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_11],-3);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_5],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_13],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_6],-200);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_11],-200);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_9],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_12],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_13],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,X_INTRODUCED_14],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,X_INTRODUCED_12],-25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_10],-250);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_14],-250);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_11,X_INTRODUCED_13],-9);
constraint array_bool_or([X_INTRODUCED_29,X_INTRODUCED_30],true);
constraint array_bool_or([X_INTRODUCED_32,X_INTRODUCED_33],true);
constraint array_bool_or([X_INTRODUCED_35,X_INTRODUCED_36],true);
constraint jacop_cumulative(X_INTRODUCED_40,X_INTRODUCED_39,X_INTRODUCED_38,18);
constraint jacop_cumulative(X_INTRODUCED_43,X_INTRODUCED_42,X_INTRODUCED_41,23);
constraint jacop_cumulative(X_INTRODUCED_46,X_INTRODUCED_45,X_INTRODUCED_44,18);
constraint jacop_cumulative(X_INTRODUCED_49,X_INTRODUCED_48,X_INTRODUCED_47,18);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,objective],-250);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_12,objective],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_13,objective],-6);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_14,objective],-4);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_3],-250,X_INTRODUCED_29):: defines_var(X_INTRODUCED_29);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_9],-5,X_INTRODUCED_30):: defines_var(X_INTRODUCED_30);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_10,X_INTRODUCED_7],-250,X_INTRODUCED_32):: defines_var(X_INTRODUCED_32);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_7,X_INTRODUCED_10],-125,X_INTRODUCED_33):: defines_var(X_INTRODUCED_33);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_13,X_INTRODUCED_9],-6,X_INTRODUCED_35):: defines_var(X_INTRODUCED_35);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_13],-250,X_INTRODUCED_36):: defines_var(X_INTRODUCED_36);
solve :: int_search(X_INTRODUCED_52,smallest,indomain_min,complete) minimize objective;
