predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_17 = [1,-1];
array [1..14] of int: X_INTRODUCED_27 = [9,3,10,1,4,10,5,7,6,5,7,4,8,5];
array [1..14] of int: X_INTRODUCED_28 = [7,4,10,2,250,100,125,100,250,75,175,9,5,2];
array [1..12] of int: X_INTRODUCED_30 = [3,5,3,7,7,8,8,2,8,7,6,7];
array [1..12] of int: X_INTRODUCED_31 = [7,4,2,250,100,125,100,250,175,9,5,3];
array [1..10] of int: X_INTRODUCED_33 = [6,3,1,2,2,4,1,3,3,3];
array [1..10] of int: X_INTRODUCED_34 = [4,250,100,100,250,75,175,9,5,2];
array [1..11] of int: X_INTRODUCED_36 = [6,1,2,9,3,7,2,6,3,7,10];
array [1..11] of int: X_INTRODUCED_37 = [7,4,2,250,125,250,75,9,5,3,2];
var 0..1116: X_INTRODUCED_0;
var 0..1116: X_INTRODUCED_1;
var 0..1116: X_INTRODUCED_2;
var 0..1116: X_INTRODUCED_3;
var 0..1116: X_INTRODUCED_4;
var 0..1116: X_INTRODUCED_5;
var 0..1116: X_INTRODUCED_6;
var 0..1116: X_INTRODUCED_7;
var 0..1116: X_INTRODUCED_8;
var 0..1116: X_INTRODUCED_9;
var 0..1116: X_INTRODUCED_10;
var 0..1116: X_INTRODUCED_11;
var 0..1116: X_INTRODUCED_12;
var 0..1116: X_INTRODUCED_13;
var 0..1116: X_INTRODUCED_14;
var 0..1117: objective:: output_var;
array [1..15] of var int: s:: output_array([1..15]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..14] of var int: X_INTRODUCED_29 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_14];
array [1..12] of var int: X_INTRODUCED_32 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13];
array [1..10] of var int: X_INTRODUCED_35 ::var_is_introduced  = [X_INTRODUCED_1,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_14];
array [1..11] of var int: X_INTRODUCED_38 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_6,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..16] of var int: X_INTRODUCED_46 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,objective];
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_4],-7);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_5],-7);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_11],-7);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_13],-4);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_3],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_8],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_7],-250);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_6],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_10],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,X_INTRODUCED_12],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,X_INTRODUCED_9],-250);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_11,X_INTRODUCED_14],-9);
constraint jacop_cumulative(X_INTRODUCED_29,X_INTRODUCED_28,X_INTRODUCED_27,20);
constraint jacop_cumulative(X_INTRODUCED_32,X_INTRODUCED_31,X_INTRODUCED_30,23);
constraint jacop_cumulative(X_INTRODUCED_35,X_INTRODUCED_34,X_INTRODUCED_33,18);
constraint jacop_cumulative(X_INTRODUCED_38,X_INTRODUCED_37,X_INTRODUCED_36,20);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,objective],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,objective],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,objective],-75);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,objective],-175);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_12,objective],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_13,objective],-3);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_14,objective],-2);
solve :: int_search(X_INTRODUCED_46,smallest,indomain_min,complete) minimize objective;
