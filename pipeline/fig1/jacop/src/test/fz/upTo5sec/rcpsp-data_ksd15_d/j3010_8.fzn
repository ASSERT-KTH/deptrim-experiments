predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_17 = [1,-1];
array [1..12] of int: X_INTRODUCED_27 = [8,1,6,2,9,6,5,6,7,6,10,3];
array [1..12] of int: X_INTRODUCED_28 = [2,5,3,100,25,175,50,75,75,250,7,2];
array [1..12] of int: X_INTRODUCED_30 = [9,4,1,1,3,7,7,6,2,5,4,4];
array [1..12] of int: X_INTRODUCED_31 = [2,5,8,3,100,50,75,250,7,2,8,10];
array [1..12] of int: X_INTRODUCED_33 = [10,8,6,5,10,2,5,9,3,9,3,7];
array [1..12] of int: X_INTRODUCED_34 = [2,5,8,100,25,175,50,75,75,250,7,8];
array [1..11] of int: X_INTRODUCED_36 = [2,9,3,8,1,3,5,9,6,9,8];
array [1..11] of int: X_INTRODUCED_37 = [2,5,8,3,100,25,175,75,2,8,10];
var 0..794: X_INTRODUCED_0;
var 0..794: X_INTRODUCED_1;
var 0..794: X_INTRODUCED_2;
var 0..794: X_INTRODUCED_3;
var 0..794: X_INTRODUCED_4;
var 0..794: X_INTRODUCED_5;
var 0..794: X_INTRODUCED_6;
var 0..794: X_INTRODUCED_7;
var 0..794: X_INTRODUCED_8;
var 0..794: X_INTRODUCED_9;
var 0..794: X_INTRODUCED_10;
var 0..794: X_INTRODUCED_11;
var 0..794: X_INTRODUCED_12;
var 0..794: X_INTRODUCED_13;
var 0..794: X_INTRODUCED_14;
var 0..795: objective:: output_var;
array [1..15] of var int: s:: output_array([1..15]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..12] of var int: X_INTRODUCED_29 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12];
array [1..12] of var int: X_INTRODUCED_32 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_7,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..12] of var int: X_INTRODUCED_35 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_13];
array [1..11] of var int: X_INTRODUCED_38 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_8,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..16] of var int: X_INTRODUCED_46 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,objective];
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_3],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_5],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_9],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_6],-8);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_12],-8);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_4],-3);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_7],-3);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_14],-25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_8],-175);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_11],-175);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_10],-75);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_11,X_INTRODUCED_13],-7);
constraint jacop_cumulative(X_INTRODUCED_29,X_INTRODUCED_28,X_INTRODUCED_27,27);
constraint jacop_cumulative(X_INTRODUCED_32,X_INTRODUCED_31,X_INTRODUCED_30,17);
constraint jacop_cumulative(X_INTRODUCED_35,X_INTRODUCED_34,X_INTRODUCED_33,22);
constraint jacop_cumulative(X_INTRODUCED_38,X_INTRODUCED_37,X_INTRODUCED_36,21);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,objective],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,objective],-50);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,objective],-75);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,objective],-250);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_12,objective],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_13,objective],-8);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_14,objective],-10);
solve :: int_search(X_INTRODUCED_46,smallest,indomain_min,complete) minimize objective;
