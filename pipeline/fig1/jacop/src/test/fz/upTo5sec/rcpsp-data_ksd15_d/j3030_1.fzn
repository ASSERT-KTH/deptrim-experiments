predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_17 = [1,-1];
array [1..15] of int: X_INTRODUCED_26 = [3,8,8,4,7,4,9,7,1,1,5,5,10,9,5];
array [1..15] of int: X_INTRODUCED_27 = [2,10,5,4,75,175,25,50,150,25,250,6,4,8,8];
array [1..15] of int: X_INTRODUCED_29 = [9,2,6,8,2,7,3,1,5,8,3,4,5,10,10];
array [1..15] of int: X_INTRODUCED_31 = [6,8,4,1,8,4,3,8,5,3,7,10,8,3,3];
array [1..15] of int: X_INTRODUCED_33 = [8,2,3,9,2,4,3,1,10,6,5,5,2,10,7];
var 0..796: X_INTRODUCED_0;
var 0..796: X_INTRODUCED_1;
var 0..796: X_INTRODUCED_2;
var 0..796: X_INTRODUCED_3;
var 0..796: X_INTRODUCED_4;
var 0..796: X_INTRODUCED_5;
var 0..796: X_INTRODUCED_6;
var 0..796: X_INTRODUCED_7;
var 0..796: X_INTRODUCED_8;
var 0..796: X_INTRODUCED_9;
var 0..796: X_INTRODUCED_10;
var 0..796: X_INTRODUCED_11;
var 0..796: X_INTRODUCED_12;
var 0..796: X_INTRODUCED_13;
var 0..796: X_INTRODUCED_14;
var 0..797: objective:: output_var;
array [1..15] of var int: s:: output_array([1..15]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..16] of var int: X_INTRODUCED_43 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,objective];
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_5],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_9],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_14],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_3],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_8],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_10],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_6],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_4],-4);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_13],-4);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_7],-175);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_12],-25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,X_INTRODUCED_11],-50);
constraint jacop_cumulative(s,X_INTRODUCED_27,X_INTRODUCED_26,25);
constraint jacop_cumulative(s,X_INTRODUCED_27,X_INTRODUCED_29,22);
constraint jacop_cumulative(s,X_INTRODUCED_27,X_INTRODUCED_31,23);
constraint jacop_cumulative(s,X_INTRODUCED_27,X_INTRODUCED_33,21);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,objective],-75);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,objective],-150);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,objective],-25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,objective],-250);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_11,objective],-6);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_12,objective],-4);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_13,objective],-8);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_14,objective],-8);
solve :: int_search(X_INTRODUCED_43,smallest,indomain_min,complete) minimize objective;
