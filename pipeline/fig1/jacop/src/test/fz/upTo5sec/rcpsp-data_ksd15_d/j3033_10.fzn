predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_17 = [1,-1];
array [1..3] of int: X_INTRODUCED_46 = [10,2,3];
array [1..3] of int: X_INTRODUCED_47 = [2,250,100];
array [1..4] of int: X_INTRODUCED_49 = [2,10,4,3];
array [1..4] of int: X_INTRODUCED_50 = [250,100,10,8];
array [1..3] of int: X_INTRODUCED_52 = [10,2,8];
array [1..3] of int: X_INTRODUCED_53 = [1,225,1];
array [1..5] of int: X_INTRODUCED_55 = [8,8,2,1,5];
array [1..5] of int: X_INTRODUCED_56 = [7,6,225,200,9];
var 0..1393: X_INTRODUCED_0;
var 0..1393: X_INTRODUCED_1;
var 0..1393: X_INTRODUCED_2;
var 0..1393: X_INTRODUCED_3;
var 0..1393: X_INTRODUCED_4;
var 0..1393: X_INTRODUCED_5;
var 0..1393: X_INTRODUCED_6;
var 0..1393: X_INTRODUCED_7;
var 0..1393: X_INTRODUCED_8;
var 0..1393: X_INTRODUCED_9;
var 0..1393: X_INTRODUCED_10;
var 0..1393: X_INTRODUCED_11;
var 0..1393: X_INTRODUCED_12;
var 0..1393: X_INTRODUCED_13;
var 0..1393: X_INTRODUCED_14;
var 0..1394: objective:: output_var;
var bool: X_INTRODUCED_28 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_29 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_31 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_32 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_33 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_34 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_35 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_36 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_37 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_38 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_41 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_42 ::var_is_introduced :: is_defined_var;
array [1..15] of var int: s:: output_array([1..15]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..3] of var int: X_INTRODUCED_48 ::var_is_introduced  = [X_INTRODUCED_2,X_INTRODUCED_4,X_INTRODUCED_5];
array [1..4] of var int: X_INTRODUCED_51 ::var_is_introduced  = [X_INTRODUCED_7,X_INTRODUCED_9,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..3] of var int: X_INTRODUCED_54 ::var_is_introduced  = [X_INTRODUCED_3,X_INTRODUCED_10,X_INTRODUCED_11];
array [1..5] of var int: X_INTRODUCED_57 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_6,X_INTRODUCED_8,X_INTRODUCED_12];
array [1..16] of var int: X_INTRODUCED_60 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,objective];
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_5],-7);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_9],-7);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_8],-6);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_14],-6);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_3],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_6],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_8],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_4],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_10],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_12],-250);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_7],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_13],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_14],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_9],-225);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,X_INTRODUCED_11],-200);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,X_INTRODUCED_12],-200);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_12],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_13],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,X_INTRODUCED_11],-225);
constraint array_bool_or([X_INTRODUCED_28,X_INTRODUCED_29],true);
constraint array_bool_or([X_INTRODUCED_31,X_INTRODUCED_32],true);
constraint array_bool_or([X_INTRODUCED_33,X_INTRODUCED_34],true);
constraint array_bool_or([X_INTRODUCED_35,X_INTRODUCED_36],true);
constraint array_bool_or([X_INTRODUCED_37,X_INTRODUCED_38],true);
constraint array_bool_or([X_INTRODUCED_41,X_INTRODUCED_42],true);
constraint jacop_cumulative(X_INTRODUCED_48,X_INTRODUCED_47,X_INTRODUCED_46,10);
constraint jacop_cumulative(X_INTRODUCED_51,X_INTRODUCED_50,X_INTRODUCED_49,13);
constraint jacop_cumulative(X_INTRODUCED_54,X_INTRODUCED_53,X_INTRODUCED_52,10);
constraint jacop_cumulative(X_INTRODUCED_57,X_INTRODUCED_56,X_INTRODUCED_55,10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,objective],-250);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_11,objective],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_12,objective],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_13,objective],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_14,objective],-8);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_0],-6,X_INTRODUCED_28):: defines_var(X_INTRODUCED_28);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_1],-7,X_INTRODUCED_29):: defines_var(X_INTRODUCED_29);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_12,X_INTRODUCED_0],-9,X_INTRODUCED_31):: defines_var(X_INTRODUCED_31);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_12],-7,X_INTRODUCED_32):: defines_var(X_INTRODUCED_32);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_12,X_INTRODUCED_1],-9,X_INTRODUCED_33):: defines_var(X_INTRODUCED_33);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_12],-6,X_INTRODUCED_34):: defines_var(X_INTRODUCED_34);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_2],-250,X_INTRODUCED_35):: defines_var(X_INTRODUCED_35);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_4],-2,X_INTRODUCED_36):: defines_var(X_INTRODUCED_36);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_2],-100,X_INTRODUCED_37):: defines_var(X_INTRODUCED_37);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_5],-2,X_INTRODUCED_38):: defines_var(X_INTRODUCED_38);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_11,X_INTRODUCED_3],-1,X_INTRODUCED_41):: defines_var(X_INTRODUCED_41);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_11],-1,X_INTRODUCED_42):: defines_var(X_INTRODUCED_42);
solve :: int_search(X_INTRODUCED_60,smallest,indomain_min,complete) minimize objective;
