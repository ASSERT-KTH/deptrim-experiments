predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_17 = [1,-1];
array [1..13] of int: X_INTRODUCED_28 = [7,3,1,5,1,4,10,1,10,2,7,2,3];
array [1..13] of int: X_INTRODUCED_29 = [8,5,2,125,250,75,150,100,100,250,2,2,10];
array [1..11] of int: X_INTRODUCED_31 = [3,1,5,3,3,9,7,1,9,9,4];
array [1..11] of int: X_INTRODUCED_32 = [10,5,2,125,250,150,250,2,2,1,10];
array [1..12] of int: X_INTRODUCED_34 = [4,7,7,9,8,1,5,7,10,7,10,9];
array [1..12] of int: X_INTRODUCED_35 = [8,5,2,125,250,75,150,100,250,2,1,10];
array [1..13] of int: X_INTRODUCED_37 = [6,7,9,8,5,7,7,10,6,4,1,10,10];
array [1..13] of int: X_INTRODUCED_38 = [10,8,5,2,125,250,75,150,100,100,250,2,1];
var 0..1089: X_INTRODUCED_0;
var 0..1089: X_INTRODUCED_1;
var 0..1089: X_INTRODUCED_2;
var 0..1089: X_INTRODUCED_3;
var 0..1089: X_INTRODUCED_4;
var 0..1089: X_INTRODUCED_5;
var 0..1089: X_INTRODUCED_6;
var 0..1089: X_INTRODUCED_7;
var 0..1089: X_INTRODUCED_8;
var 0..1089: X_INTRODUCED_9;
var 0..1089: X_INTRODUCED_10;
var 0..1089: X_INTRODUCED_11;
var 0..1089: X_INTRODUCED_12;
var 0..1089: X_INTRODUCED_13;
var 0..1089: X_INTRODUCED_14;
var 0..1090: objective:: output_var;
array [1..15] of var int: s:: output_array([1..15]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..13] of var int: X_INTRODUCED_30 ::var_is_introduced  = [X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_14];
array [1..11] of var int: X_INTRODUCED_33 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_7,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..12] of var int: X_INTRODUCED_36 ::var_is_introduced  = [X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..13] of var int: X_INTRODUCED_39 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_12,X_INTRODUCED_13];
array [1..16] of var int: X_INTRODUCED_46 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,objective];
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_3],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_5],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_10],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_3],-8);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_4],-8);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_12],-8);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_3],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_4],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_6],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_7],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_6],-250);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_12],-250);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_9],-75);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_13],-75);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,X_INTRODUCED_8],-150);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,X_INTRODUCED_11],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,X_INTRODUCED_14],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_12,X_INTRODUCED_14],-2);
constraint jacop_cumulative(X_INTRODUCED_30,X_INTRODUCED_29,X_INTRODUCED_28,29);
constraint jacop_cumulative(X_INTRODUCED_33,X_INTRODUCED_32,X_INTRODUCED_31,24);
constraint jacop_cumulative(X_INTRODUCED_36,X_INTRODUCED_35,X_INTRODUCED_34,34);
constraint jacop_cumulative(X_INTRODUCED_39,X_INTRODUCED_38,X_INTRODUCED_37,23);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,objective],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,objective],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,objective],-250);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_11,objective],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_13,objective],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_14,objective],-10);
solve :: int_search(X_INTRODUCED_46,smallest,indomain_min,complete) minimize objective;
