predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_17 = [1,-1];
array [1..12] of int: X_INTRODUCED_27 = [3,8,2,5,7,1,3,1,4,9,2,6];
array [1..12] of int: X_INTRODUCED_28 = [9,8,1,6,150,125,150,200,25,150,200,5];
array [1..11] of int: X_INTRODUCED_30 = [7,2,2,6,5,7,10,7,10,8,4];
array [1..11] of int: X_INTRODUCED_31 = [8,1,150,150,25,150,200,2,5,5,5];
array [1..11] of int: X_INTRODUCED_33 = [1,5,1,9,1,2,5,9,8,7,7];
array [1..11] of int: X_INTRODUCED_34 = [9,1,150,125,150,25,200,2,5,5,5];
array [1..11] of int: X_INTRODUCED_36 = [2,10,5,3,9,1,1,4,2,8,7];
array [1..11] of int: X_INTRODUCED_37 = [1,6,150,125,200,25,150,200,2,5,5];
var 0..1040: X_INTRODUCED_0;
var 0..1040: X_INTRODUCED_1;
var 0..1040: X_INTRODUCED_2;
var 0..1040: X_INTRODUCED_3;
var 0..1040: X_INTRODUCED_4;
var 0..1040: X_INTRODUCED_5;
var 0..1040: X_INTRODUCED_6;
var 0..1040: X_INTRODUCED_7;
var 0..1040: X_INTRODUCED_8;
var 0..1040: X_INTRODUCED_9;
var 0..1040: X_INTRODUCED_10;
var 0..1040: X_INTRODUCED_11;
var 0..1040: X_INTRODUCED_12;
var 0..1040: X_INTRODUCED_13;
var 0..1040: X_INTRODUCED_14;
var 0..1041: objective:: output_var;
array [1..15] of var int: s:: output_array([1..15]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..12] of var int: X_INTRODUCED_29 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_13];
array [1..11] of var int: X_INTRODUCED_32 ::var_is_introduced  = [X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_4,X_INTRODUCED_6,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..11] of var int: X_INTRODUCED_35 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_2,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_8,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..11] of var int: X_INTRODUCED_38 ::var_is_introduced  = [X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13];
array [1..16] of var int: X_INTRODUCED_46 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,objective];
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_3],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_6],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_14],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_4],-8);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_10],-8);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_12],-8);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_7],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_8],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_5],-6);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_9],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,X_INTRODUCED_11],-200);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,X_INTRODUCED_12],-25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_12,X_INTRODUCED_13],-5);
constraint jacop_cumulative(X_INTRODUCED_29,X_INTRODUCED_28,X_INTRODUCED_27,19);
constraint jacop_cumulative(X_INTRODUCED_32,X_INTRODUCED_31,X_INTRODUCED_30,30);
constraint jacop_cumulative(X_INTRODUCED_35,X_INTRODUCED_34,X_INTRODUCED_33,26);
constraint jacop_cumulative(X_INTRODUCED_38,X_INTRODUCED_37,X_INTRODUCED_36,24);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,objective],-150);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,objective],-150);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,objective],-150);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,objective],-200);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_11,objective],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_13,objective],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_14,objective],-5);
solve :: int_search(X_INTRODUCED_46,smallest,indomain_min,complete) minimize objective;
