predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_17 = [1,-1];
array [1..15] of int: X_INTRODUCED_26 = [10,2,6,5,7,5,1,7,2,7,3,1,2,10,10];
array [1..15] of int: X_INTRODUCED_27 = [5,5,1,4,150,75,100,100,75,200,75,3,4,9,8];
array [1..15] of int: X_INTRODUCED_29 = [4,4,4,4,1,10,3,5,4,7,8,7,3,3,10];
array [1..15] of int: X_INTRODUCED_31 = [6,4,7,9,9,5,7,6,2,10,5,5,5,3,2];
array [1..15] of int: X_INTRODUCED_33 = [3,10,4,8,10,9,2,9,2,8,6,4,2,2,10];
var 0..813: X_INTRODUCED_0;
var 0..813: X_INTRODUCED_1;
var 0..813: X_INTRODUCED_2;
var 0..813: X_INTRODUCED_3;
var 0..813: X_INTRODUCED_4;
var 0..813: X_INTRODUCED_5;
var 0..813: X_INTRODUCED_6;
var 0..813: X_INTRODUCED_7;
var 0..813: X_INTRODUCED_8;
var 0..813: X_INTRODUCED_9;
var 0..813: X_INTRODUCED_10;
var 0..813: X_INTRODUCED_11;
var 0..813: X_INTRODUCED_12;
var 0..813: X_INTRODUCED_13;
var 0..813: X_INTRODUCED_14;
var 0..814: objective:: output_var;
array [1..15] of var int: s:: output_array([1..15]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..16] of var int: X_INTRODUCED_43 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,objective];
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_12],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_3],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_13],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_4],-4);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_5],-4);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_9],-4);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_7],-150);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_6],-75);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_8],-75);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_10],-75);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,X_INTRODUCED_11],-75);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,X_INTRODUCED_14],-75);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_12,X_INTRODUCED_13],-4);
constraint jacop_cumulative(s,X_INTRODUCED_27,X_INTRODUCED_26,57);
constraint jacop_cumulative(s,X_INTRODUCED_27,X_INTRODUCED_29,48);
constraint jacop_cumulative(s,X_INTRODUCED_27,X_INTRODUCED_31,47);
constraint jacop_cumulative(s,X_INTRODUCED_27,X_INTRODUCED_33,47);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,objective],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,objective],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,objective],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,objective],-75);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,objective],-200);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_11,objective],-3);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_13,objective],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_14,objective],-8);
solve :: int_search(X_INTRODUCED_43,smallest,indomain_min,complete) minimize objective;
