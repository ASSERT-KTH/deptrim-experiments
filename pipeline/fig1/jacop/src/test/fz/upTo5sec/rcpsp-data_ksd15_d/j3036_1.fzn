predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_17 = [1,-1];
array [1..6] of int: X_INTRODUCED_35 = [8,7,6,6,4,5];
array [1..6] of int: X_INTRODUCED_36 = [6,6,250,125,3,8];
array [1..3] of int: X_INTRODUCED_38 = [7,10,2];
array [1..3] of int: X_INTRODUCED_39 = [50,175,10];
array [1..6] of int: X_INTRODUCED_41 = [2,1,4,10,8,9];
array [1..6] of int: X_INTRODUCED_42 = [3,5,250,250,250,6];
var 0..1396: X_INTRODUCED_0;
var 0..1396: X_INTRODUCED_1;
var 0..1396: X_INTRODUCED_2;
var 0..1396: X_INTRODUCED_3;
var 0..1396: X_INTRODUCED_4;
var 0..1396: X_INTRODUCED_5;
var 0..1396: X_INTRODUCED_6;
var 0..1396: X_INTRODUCED_7;
var 0..1396: X_INTRODUCED_8;
var 0..1396: X_INTRODUCED_9;
var 0..1396: X_INTRODUCED_10;
var 0..1396: X_INTRODUCED_11;
var 0..1396: X_INTRODUCED_12;
var 0..1396: X_INTRODUCED_13;
var 0..1396: X_INTRODUCED_14;
var 0..1397: objective:: output_var;
var bool: X_INTRODUCED_29 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_30 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_32 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_33 ::var_is_introduced :: is_defined_var;
array [1..15] of var int: s:: output_array([1..15]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..6] of var int: X_INTRODUCED_37 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_11,X_INTRODUCED_13];
array [1..3] of var int: X_INTRODUCED_40 ::var_is_introduced  = [X_INTRODUCED_6,X_INTRODUCED_9,X_INTRODUCED_14];
array [1..6] of var int: X_INTRODUCED_43 ::var_is_introduced  = [X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_10,X_INTRODUCED_12];
array [1..16] of var int: X_INTRODUCED_47 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,objective];
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_7],-6);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_3],-3);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_4],-3);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_6],-3);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_5],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_8],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_10],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_9],-6);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_5],-250);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_8],-250);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_13],-250);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_7],-50);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_10],-50);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,X_INTRODUCED_12],-250);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_11],-175);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_12],-175);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,X_INTRODUCED_14],-250);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_11,X_INTRODUCED_14],-3);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_13,X_INTRODUCED_14],-8);
constraint array_bool_or([X_INTRODUCED_29,X_INTRODUCED_30],true);
constraint array_bool_or([X_INTRODUCED_32,X_INTRODUCED_33],true);
constraint jacop_cumulative(X_INTRODUCED_37,X_INTRODUCED_36,X_INTRODUCED_35,21);
constraint jacop_cumulative(X_INTRODUCED_40,X_INTRODUCED_39,X_INTRODUCED_38,10);
constraint jacop_cumulative(X_INTRODUCED_43,X_INTRODUCED_42,X_INTRODUCED_41,27);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,objective],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,objective],-250);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_12,objective],-6);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_14,objective],-10);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_6],-175,X_INTRODUCED_29):: defines_var(X_INTRODUCED_29);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_9],-50,X_INTRODUCED_30):: defines_var(X_INTRODUCED_30);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_14,X_INTRODUCED_9],-10,X_INTRODUCED_32):: defines_var(X_INTRODUCED_32);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_14],-175,X_INTRODUCED_33):: defines_var(X_INTRODUCED_33);
solve :: int_search(X_INTRODUCED_47,smallest,indomain_min,complete) minimize objective;
