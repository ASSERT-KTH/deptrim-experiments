predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_17 = [1,-1];
array [1..6] of int: X_INTRODUCED_34 = [4,4,3,3,7,2];
array [1..6] of int: X_INTRODUCED_35 = [10,8,150,225,3,3];
array [1..8] of int: X_INTRODUCED_37 = [10,5,8,2,3,8,3,6];
array [1..8] of int: X_INTRODUCED_38 = [10,5,8,125,225,200,250,5];
array [1..8] of int: X_INTRODUCED_40 = [5,7,9,9,10,4,3,3];
array [1..8] of int: X_INTRODUCED_41 = [10,6,250,175,150,225,6,3];
array [1..6] of int: X_INTRODUCED_43 = [9,5,2,6,3,2];
array [1..6] of int: X_INTRODUCED_44 = [5,175,225,200,5,6];
var 0..1420: X_INTRODUCED_0;
var 0..1420: X_INTRODUCED_1;
var 0..1420: X_INTRODUCED_2;
var 0..1420: X_INTRODUCED_3;
var 0..1420: X_INTRODUCED_4;
var 0..1420: X_INTRODUCED_5;
var 0..1420: X_INTRODUCED_6;
var 0..1420: X_INTRODUCED_7;
var 0..1420: X_INTRODUCED_8;
var 0..1420: X_INTRODUCED_9;
var 0..1420: X_INTRODUCED_10;
var 0..1420: X_INTRODUCED_11;
var 0..1420: X_INTRODUCED_12;
var 0..1420: X_INTRODUCED_13;
var 0..1420: X_INTRODUCED_14;
var 0..1421: objective:: output_var;
var bool: X_INTRODUCED_29 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_30 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_31 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_32 ::var_is_introduced :: is_defined_var;
array [1..15] of var int: s:: output_array([1..15]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..6] of var int: X_INTRODUCED_36 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_3,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_12,X_INTRODUCED_14];
array [1..8] of var int: X_INTRODUCED_39 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11];
array [1..8] of var int: X_INTRODUCED_42 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..6] of var int: X_INTRODUCED_45 ::var_is_introduced  = [X_INTRODUCED_2,X_INTRODUCED_6,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_11,X_INTRODUCED_13];
array [1..16] of var int: X_INTRODUCED_50 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,objective];
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_6],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_3],-6);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_4],-6);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_10],-6);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_8],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_5],-8);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_12],-8);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_7],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_12],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_8],-250);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_11],-250);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_8],-175);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_9],-175);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,X_INTRODUCED_13],-225);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_13],-200);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_11,X_INTRODUCED_13],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_12,X_INTRODUCED_14],-3);
constraint array_bool_or([X_INTRODUCED_29,X_INTRODUCED_30],true);
constraint array_bool_or([X_INTRODUCED_31,X_INTRODUCED_32],true);
constraint jacop_cumulative(X_INTRODUCED_36,X_INTRODUCED_35,X_INTRODUCED_34,15);
constraint jacop_cumulative(X_INTRODUCED_39,X_INTRODUCED_38,X_INTRODUCED_37,17);
constraint jacop_cumulative(X_INTRODUCED_42,X_INTRODUCED_41,X_INTRODUCED_40,19);
constraint jacop_cumulative(X_INTRODUCED_45,X_INTRODUCED_44,X_INTRODUCED_43,16);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,objective],-150);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,objective],-250);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_13,objective],-6);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_14,objective],-3);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_0],-8,X_INTRODUCED_29):: defines_var(X_INTRODUCED_29);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_3],-10,X_INTRODUCED_30):: defines_var(X_INTRODUCED_30);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_0],-200,X_INTRODUCED_31):: defines_var(X_INTRODUCED_31);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_9],-10,X_INTRODUCED_32):: defines_var(X_INTRODUCED_32);
solve :: int_search(X_INTRODUCED_50,smallest,indomain_min,complete) minimize objective;
