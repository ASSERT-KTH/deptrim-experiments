predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_17 = [1,-1];
array [1..13] of int: X_INTRODUCED_31 = [1,8,2,3,8,1,4,2,8,2,3,7,5];
array [1..13] of int: X_INTRODUCED_32 = [6,6,6,50,225,225,225,50,50,3,8,9,10];
array [1..11] of int: X_INTRODUCED_34 = [6,6,10,1,4,8,9,6,6,7,5];
array [1..11] of int: X_INTRODUCED_35 = [6,4,6,6,225,225,50,50,3,8,9];
array [1..10] of int: X_INTRODUCED_37 = [5,3,10,2,4,5,2,1,10,7];
array [1..10] of int: X_INTRODUCED_38 = [6,4,6,6,75,225,225,50,3,9];
array [1..12] of int: X_INTRODUCED_40 = [3,6,2,1,3,8,6,9,8,8,6,6];
array [1..12] of int: X_INTRODUCED_41 = [6,4,6,6,50,225,225,50,50,3,8,10];
var 0..951: X_INTRODUCED_0;
var 0..951: X_INTRODUCED_1;
var 0..951: X_INTRODUCED_2;
var 0..951: X_INTRODUCED_3;
var 0..951: X_INTRODUCED_4;
var 0..951: X_INTRODUCED_5;
var 0..951: X_INTRODUCED_6;
var 0..951: X_INTRODUCED_7;
var 0..951: X_INTRODUCED_8;
var 0..951: X_INTRODUCED_9;
var 0..951: X_INTRODUCED_10;
var 0..951: X_INTRODUCED_11;
var 0..951: X_INTRODUCED_12;
var 0..951: X_INTRODUCED_13;
var 0..951: X_INTRODUCED_14;
var 0..952: objective:: output_var;
var bool: X_INTRODUCED_28 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_29 ::var_is_introduced :: is_defined_var;
array [1..15] of var int: s:: output_array([1..15]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..13] of var int: X_INTRODUCED_33 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..11] of var int: X_INTRODUCED_36 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13];
array [1..10] of var int: X_INTRODUCED_39 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_13];
array [1..12] of var int: X_INTRODUCED_42 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_6,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_14];
array [1..16] of var int: X_INTRODUCED_48 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,objective];
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_3],-6);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_5],-4);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_10],-4);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_11],-4);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_4],-6);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_10],-6);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_6],-75);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_7],-75);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_8],-75);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_14],-225);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,X_INTRODUCED_9],-225);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,X_INTRODUCED_12],-225);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_11,X_INTRODUCED_13],-3);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_12,X_INTRODUCED_13],-8);
constraint array_bool_or([X_INTRODUCED_28,X_INTRODUCED_29],true);
constraint jacop_cumulative(X_INTRODUCED_33,X_INTRODUCED_32,X_INTRODUCED_31,21);
constraint jacop_cumulative(X_INTRODUCED_36,X_INTRODUCED_35,X_INTRODUCED_34,18);
constraint jacop_cumulative(X_INTRODUCED_39,X_INTRODUCED_38,X_INTRODUCED_37,23);
constraint jacop_cumulative(X_INTRODUCED_42,X_INTRODUCED_41,X_INTRODUCED_40,21);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,objective],-6);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,objective],-50);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,objective],-50);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,objective],-50);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_13,objective],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_14,objective],-10);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_2],-50,X_INTRODUCED_28):: defines_var(X_INTRODUCED_28);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_9],-6,X_INTRODUCED_29):: defines_var(X_INTRODUCED_29);
solve :: int_search(X_INTRODUCED_48,smallest,indomain_min,complete) minimize objective;
