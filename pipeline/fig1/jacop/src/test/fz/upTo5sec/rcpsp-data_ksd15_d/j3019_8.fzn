predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_17 = [1,-1];
array [1..6] of int: X_INTRODUCED_33 = [3,8,8,4,4,9];
array [1..6] of int: X_INTRODUCED_34 = [2,125,225,200,75,3];
array [1..2] of int: X_INTRODUCED_36 = [10,2];
array [1..2] of int: X_INTRODUCED_37 = [25,4];
array [1..5] of int: X_INTRODUCED_39 = [8,6,7,9,9];
array [1..5] of int: X_INTRODUCED_40 = [10,3,200,125,5];
var 0..1016: X_INTRODUCED_0;
var 0..1016: X_INTRODUCED_1;
var 0..1016: X_INTRODUCED_2;
var 0..1016: X_INTRODUCED_3;
var 0..1016: X_INTRODUCED_4;
var 0..1016: X_INTRODUCED_5;
var 0..1016: X_INTRODUCED_6;
var 0..1016: X_INTRODUCED_7;
var 0..1016: X_INTRODUCED_8;
var 0..1016: X_INTRODUCED_9;
var 0..1016: X_INTRODUCED_10;
var 0..1016: X_INTRODUCED_11;
var 0..1016: X_INTRODUCED_12;
var 0..1016: X_INTRODUCED_13;
var 0..1016: X_INTRODUCED_14;
var 0..1017: objective:: output_var;
var bool: X_INTRODUCED_29 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_31 ::var_is_introduced :: is_defined_var;
array [1..15] of var int: s:: output_array([1..15]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..6] of var int: X_INTRODUCED_35 ::var_is_introduced  = [X_INTRODUCED_2,X_INTRODUCED_4,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_14];
array [1..2] of var int: X_INTRODUCED_38 ::var_is_introduced  = [X_INTRODUCED_5,X_INTRODUCED_13];
array [1..5] of var int: X_INTRODUCED_41 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_3,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_11];
array [1..16] of var int: X_INTRODUCED_46 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,objective];
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_7],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_11],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_3],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_6],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_14],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_4],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_5],-3);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_10],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_12],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_7],-25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_13],-25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_8],-200);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_11],-200);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,X_INTRODUCED_9],-225);
constraint array_bool_or([X_INTRODUCED_29,X_INTRODUCED_31],true);
constraint jacop_cumulative(X_INTRODUCED_35,X_INTRODUCED_34,X_INTRODUCED_33,20);
constraint jacop_cumulative(X_INTRODUCED_38,X_INTRODUCED_37,X_INTRODUCED_36,10);
constraint jacop_cumulative(X_INTRODUCED_41,X_INTRODUCED_40,X_INTRODUCED_39,17);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,objective],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,objective],-200);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,objective],-75);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_11,objective],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_12,objective],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_13,objective],-4);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_14,objective],-3);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_11,X_INTRODUCED_7],-5,X_INTRODUCED_29):: defines_var(X_INTRODUCED_29);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_7,X_INTRODUCED_11],-125,X_INTRODUCED_31):: defines_var(X_INTRODUCED_31);
solve :: int_search(X_INTRODUCED_46,smallest,indomain_min,complete) minimize objective;
