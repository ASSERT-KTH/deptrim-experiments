predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_17 = [1,-1];
array [1..10] of int: X_INTRODUCED_28 = [5,7,10,3,3,10,9,3,8,10];
array [1..10] of int: X_INTRODUCED_29 = [4,10,4,225,150,200,125,3,1,5];
array [1..7] of int: X_INTRODUCED_31 = [7,3,1,9,5,9,7];
array [1..7] of int: X_INTRODUCED_32 = [225,50,200,200,125,25,5];
array [1..8] of int: X_INTRODUCED_34 = [3,1,10,4,7,4,10,2];
array [1..8] of int: X_INTRODUCED_35 = [3,10,4,225,200,125,3,3];
var 0..1007: X_INTRODUCED_0;
var 0..1007: X_INTRODUCED_1;
var 0..1007: X_INTRODUCED_2;
var 0..1007: X_INTRODUCED_3;
var 0..1007: X_INTRODUCED_4;
var 0..1007: X_INTRODUCED_5;
var 0..1007: X_INTRODUCED_6;
var 0..1007: X_INTRODUCED_7;
var 0..1007: X_INTRODUCED_8;
var 0..1007: X_INTRODUCED_9;
var 0..1007: X_INTRODUCED_10;
var 0..1007: X_INTRODUCED_11;
var 0..1007: X_INTRODUCED_12;
var 0..1007: X_INTRODUCED_13;
var 0..1007: X_INTRODUCED_14;
var 0..1008: objective:: output_var;
array [1..15] of var int: s:: output_array([1..15]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..10] of var int: X_INTRODUCED_30 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_11,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..7] of var int: X_INTRODUCED_33 ::var_is_introduced  = [X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_14];
array [1..8] of var int: X_INTRODUCED_36 ::var_is_introduced  = [X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_11,X_INTRODUCED_12];
array [1..16] of var int: X_INTRODUCED_43 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,objective];
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_7],-4);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_5],-3);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_9],-3);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_11],-3);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_3],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_4],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_6],-4);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_8],-4);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_10],-4);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_14],-225);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_14],-200);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,X_INTRODUCED_12],-200);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_13],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,X_INTRODUCED_13],-25);
constraint jacop_cumulative(X_INTRODUCED_30,X_INTRODUCED_29,X_INTRODUCED_28,24);
constraint jacop_cumulative(X_INTRODUCED_33,X_INTRODUCED_32,X_INTRODUCED_31,28);
constraint jacop_cumulative(X_INTRODUCED_36,X_INTRODUCED_35,X_INTRODUCED_34,29);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,objective],-50);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,objective],-150);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_11,objective],-3);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_12,objective],-3);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_13,objective],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_14,objective],-5);
solve :: int_search(X_INTRODUCED_43,smallest,indomain_min,complete) minimize objective;
