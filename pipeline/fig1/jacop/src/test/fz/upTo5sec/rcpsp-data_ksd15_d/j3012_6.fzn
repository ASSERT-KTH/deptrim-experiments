predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_17 = [1,-1];
array [1..15] of int: X_INTRODUCED_26 = [4,1,3,1,10,7,2,9,4,1,1,7,1,1,4];
array [1..15] of int: X_INTRODUCED_27 = [10,8,4,10,175,25,75,50,125,150,225,7,5,3,3];
array [1..11] of int: X_INTRODUCED_29 = [6,9,5,4,2,1,3,5,10,1,10];
array [1..11] of int: X_INTRODUCED_30 = [10,8,4,10,75,125,150,225,5,3,3];
array [1..9] of int: X_INTRODUCED_32 = [6,4,3,3,9,7,4,10,6];
array [1..9] of int: X_INTRODUCED_33 = [10,4,10,175,125,150,7,5,3];
array [1..11] of int: X_INTRODUCED_35 = [3,5,2,5,10,3,5,4,3,8,3];
array [1..11] of int: X_INTRODUCED_36 = [10,8,10,175,25,50,125,150,225,5,3];
var 0..874: X_INTRODUCED_0;
var 0..874: X_INTRODUCED_1;
var 0..874: X_INTRODUCED_2;
var 0..874: X_INTRODUCED_3;
var 0..874: X_INTRODUCED_4;
var 0..874: X_INTRODUCED_5;
var 0..874: X_INTRODUCED_6;
var 0..874: X_INTRODUCED_7;
var 0..874: X_INTRODUCED_8;
var 0..874: X_INTRODUCED_9;
var 0..874: X_INTRODUCED_10;
var 0..874: X_INTRODUCED_11;
var 0..874: X_INTRODUCED_12;
var 0..874: X_INTRODUCED_13;
var 0..874: X_INTRODUCED_14;
var 0..875: objective:: output_var;
array [1..15] of var int: s:: output_array([1..15]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..11] of var int: X_INTRODUCED_31 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_6,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..9] of var int: X_INTRODUCED_34 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_14];
array [1..11] of var int: X_INTRODUCED_37 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_12,X_INTRODUCED_13];
array [1..16] of var int: X_INTRODUCED_46 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,objective];
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_3],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_4],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_6],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_8],-8);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_11],-8);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_5],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_9],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_14],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_11],-175);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_7],-25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_10],-25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_12],-150);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_12,X_INTRODUCED_13],-5);
constraint jacop_cumulative(s,X_INTRODUCED_27,X_INTRODUCED_26,23);
constraint jacop_cumulative(X_INTRODUCED_31,X_INTRODUCED_30,X_INTRODUCED_29,36);
constraint jacop_cumulative(X_INTRODUCED_34,X_INTRODUCED_33,X_INTRODUCED_32,23);
constraint jacop_cumulative(X_INTRODUCED_37,X_INTRODUCED_36,X_INTRODUCED_35,21);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,objective],-4);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,objective],-75);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,objective],-50);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,objective],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,objective],-225);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_11,objective],-7);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_13,objective],-3);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_14,objective],-3);
solve :: int_search(X_INTRODUCED_46,smallest,indomain_min,complete) minimize objective;
