predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_17 = [1,-1];
array [1..3] of int: X_INTRODUCED_29 = [2,3,6];
array [1..3] of int: X_INTRODUCED_30 = [9,5,100];
array [1..5] of int: X_INTRODUCED_32 = [9,6,7,5,4];
array [1..5] of int: X_INTRODUCED_33 = [10,3,25,125,4];
array [1..5] of int: X_INTRODUCED_35 = [4,4,10,3,5];
array [1..5] of int: X_INTRODUCED_36 = [125,25,125,150,1];
var 0..726: X_INTRODUCED_0;
var 0..726: X_INTRODUCED_1;
var 0..726: X_INTRODUCED_2;
var 0..726: X_INTRODUCED_3;
var 0..726: X_INTRODUCED_4;
var 0..726: X_INTRODUCED_5;
var 0..726: X_INTRODUCED_6;
var 0..726: X_INTRODUCED_7;
var 0..726: X_INTRODUCED_8;
var 0..726: X_INTRODUCED_9;
var 0..726: X_INTRODUCED_10;
var 0..726: X_INTRODUCED_11;
var 0..726: X_INTRODUCED_12;
var 0..726: X_INTRODUCED_13;
var 0..726: X_INTRODUCED_14;
var 0..727: objective:: output_var;
array [1..15] of var int: s:: output_array([1..15]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..3] of var int: X_INTRODUCED_31 ::var_is_introduced  = [X_INTRODUCED_1,X_INTRODUCED_3,X_INTRODUCED_10];
array [1..5] of var int: X_INTRODUCED_34 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_2,X_INTRODUCED_6,X_INTRODUCED_8,X_INTRODUCED_12];
array [1..5] of var int: X_INTRODUCED_37 ::var_is_introduced  = [X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_7,X_INTRODUCED_9,X_INTRODUCED_14];
array [1..16] of var int: X_INTRODUCED_43 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,objective];
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_13],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_14],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_3],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_5],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_6],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_4],-3);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_8],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_7],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_8],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_12],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_11],-25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_7],-25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_10],-25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,X_INTRODUCED_9],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,X_INTRODUCED_14],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,X_INTRODUCED_11],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,X_INTRODUCED_13],-100);
constraint jacop_cumulative(X_INTRODUCED_31,X_INTRODUCED_30,X_INTRODUCED_29,9);
constraint jacop_cumulative(X_INTRODUCED_34,X_INTRODUCED_33,X_INTRODUCED_32,25);
constraint jacop_cumulative(X_INTRODUCED_37,X_INTRODUCED_36,X_INTRODUCED_35,17);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,objective],-150);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_11,objective],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_12,objective],-4);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_13,objective],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_14,objective],-1);
solve :: int_search(X_INTRODUCED_43,smallest,indomain_min,complete) minimize objective;
