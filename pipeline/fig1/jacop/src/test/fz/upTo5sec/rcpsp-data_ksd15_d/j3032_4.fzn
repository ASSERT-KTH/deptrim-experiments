predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_17 = [1,-1];
array [1..15] of int: X_INTRODUCED_26 = [4,9,10,5,5,2,7,8,10,3,7,1,10,5,7];
array [1..15] of int: X_INTRODUCED_27 = [10,9,7,10,100,225,175,250,150,75,250,2,2,3,9];
array [1..15] of int: X_INTRODUCED_29 = [8,1,9,7,9,3,1,7,1,10,6,8,8,1,4];
array [1..15] of int: X_INTRODUCED_31 = [10,1,10,3,10,7,2,4,8,9,7,10,4,8,10];
array [1..15] of int: X_INTRODUCED_33 = [10,4,9,1,2,10,8,5,1,7,1,2,10,10,1];
var 0..1276: X_INTRODUCED_0;
var 0..1276: X_INTRODUCED_1;
var 0..1276: X_INTRODUCED_2;
var 0..1276: X_INTRODUCED_3;
var 0..1276: X_INTRODUCED_4;
var 0..1276: X_INTRODUCED_5;
var 0..1276: X_INTRODUCED_6;
var 0..1276: X_INTRODUCED_7;
var 0..1276: X_INTRODUCED_8;
var 0..1276: X_INTRODUCED_9;
var 0..1276: X_INTRODUCED_10;
var 0..1276: X_INTRODUCED_11;
var 0..1276: X_INTRODUCED_12;
var 0..1276: X_INTRODUCED_13;
var 0..1276: X_INTRODUCED_14;
var 0..1277: objective:: output_var;
array [1..15] of var int: s:: output_array([1..15]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..16] of var int: X_INTRODUCED_43 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,objective];
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_3],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_10],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_13],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_4],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_5],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_6],-225);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_7],-175);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_8],-175);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,X_INTRODUCED_9],-150);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,X_INTRODUCED_11],-150);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,X_INTRODUCED_12],-250);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,X_INTRODUCED_14],-250);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_11,X_INTRODUCED_12],-2);
constraint jacop_cumulative(s,X_INTRODUCED_27,X_INTRODUCED_26,28);
constraint jacop_cumulative(s,X_INTRODUCED_27,X_INTRODUCED_29,39);
constraint jacop_cumulative(s,X_INTRODUCED_27,X_INTRODUCED_31,31);
constraint jacop_cumulative(s,X_INTRODUCED_27,X_INTRODUCED_33,27);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,objective],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,objective],-7);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,objective],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,objective],-250);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,objective],-75);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_12,objective],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_13,objective],-3);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_14,objective],-9);
solve :: int_search(X_INTRODUCED_43,smallest,indomain_min,complete) minimize objective;
