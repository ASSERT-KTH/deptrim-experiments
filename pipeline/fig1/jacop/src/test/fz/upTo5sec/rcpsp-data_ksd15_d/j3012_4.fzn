predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_17 = [1,-1];
array [1..8] of int: X_INTRODUCED_26 = [9,6,10,9,6,9,8,5];
array [1..8] of int: X_INTRODUCED_27 = [3,9,25,50,250,225,5,7];
array [1..11] of int: X_INTRODUCED_29 = [10,2,1,8,8,3,7,5,3,10,6];
array [1..11] of int: X_INTRODUCED_30 = [5,9,25,50,250,225,250,125,2,5,7];
array [1..12] of int: X_INTRODUCED_32 = [9,3,2,10,2,3,2,9,5,2,10,5];
array [1..12] of int: X_INTRODUCED_33 = [3,5,9,10,25,50,250,225,250,125,5,7];
array [1..9] of int: X_INTRODUCED_35 = [1,2,10,5,9,9,6,8,10];
array [1..9] of int: X_INTRODUCED_36 = [10,175,50,250,225,250,125,5,7];
var 0..1147: X_INTRODUCED_0;
var 0..1147: X_INTRODUCED_1;
var 0..1147: X_INTRODUCED_2;
var 0..1147: X_INTRODUCED_3;
var 0..1147: X_INTRODUCED_4;
var 0..1147: X_INTRODUCED_5;
var 0..1147: X_INTRODUCED_6;
var 0..1147: X_INTRODUCED_7;
var 0..1147: X_INTRODUCED_8;
var 0..1147: X_INTRODUCED_9;
var 0..1147: X_INTRODUCED_10;
var 0..1147: X_INTRODUCED_11;
var 0..1147: X_INTRODUCED_12;
var 0..1147: X_INTRODUCED_13;
var 0..1147: X_INTRODUCED_14;
var 0..1148: objective:: output_var;
array [1..15] of var int: s:: output_array([1..15]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..8] of var int: X_INTRODUCED_28 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_2,X_INTRODUCED_4,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_12,X_INTRODUCED_14];
array [1..11] of var int: X_INTRODUCED_31 ::var_is_introduced  = [X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_4,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_14];
array [1..12] of var int: X_INTRODUCED_34 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_12,X_INTRODUCED_13];
array [1..9] of var int: X_INTRODUCED_37 ::var_is_introduced  = [X_INTRODUCED_3,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_12,X_INTRODUCED_14];
array [1..16] of var int: X_INTRODUCED_46 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,objective];
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_7],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_8],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_14],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_3],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_4],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_5],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_11],-25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_14],-25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_6],-175);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_10],-50);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,X_INTRODUCED_9],-250);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,X_INTRODUCED_13],-250);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_11,X_INTRODUCED_12],-2);
constraint jacop_cumulative(X_INTRODUCED_28,X_INTRODUCED_27,X_INTRODUCED_26,28);
constraint jacop_cumulative(X_INTRODUCED_31,X_INTRODUCED_30,X_INTRODUCED_29,40);
constraint jacop_cumulative(X_INTRODUCED_34,X_INTRODUCED_33,X_INTRODUCED_32,43);
constraint jacop_cumulative(X_INTRODUCED_37,X_INTRODUCED_36,X_INTRODUCED_35,39);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,objective],-3);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,objective],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,objective],-225);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,objective],-250);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,objective],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_12,objective],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_13,objective],-7);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_14,objective],-7);
solve :: int_search(X_INTRODUCED_46,smallest,indomain_min,complete) minimize objective;
