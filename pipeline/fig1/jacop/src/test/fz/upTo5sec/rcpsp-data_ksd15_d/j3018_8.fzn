predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_17 = [1,-1];
array [1..5] of int: X_INTRODUCED_34 = [6,10,1,3,3];
array [1..5] of int: X_INTRODUCED_35 = [2,1,225,25,4];
array [1..3] of int: X_INTRODUCED_37 = [4,8,1];
array [1..3] of int: X_INTRODUCED_38 = [4,150,10];
array [1..5] of int: X_INTRODUCED_40 = [1,2,3,6,1];
array [1..5] of int: X_INTRODUCED_41 = [6,125,50,5,3];
var 0..909: X_INTRODUCED_0;
var 0..909: X_INTRODUCED_1;
var 0..909: X_INTRODUCED_2;
var 0..909: X_INTRODUCED_3;
var 0..909: X_INTRODUCED_4;
var 0..909: X_INTRODUCED_5;
var 0..909: X_INTRODUCED_6;
var 0..909: X_INTRODUCED_7;
var 0..909: X_INTRODUCED_8;
var 0..909: X_INTRODUCED_9;
var 0..909: X_INTRODUCED_10;
var 0..909: X_INTRODUCED_11;
var 0..909: X_INTRODUCED_12;
var 0..909: X_INTRODUCED_13;
var 0..909: X_INTRODUCED_14;
var 0..910: objective:: output_var;
var bool: X_INTRODUCED_31 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_32 ::var_is_introduced :: is_defined_var;
array [1..15] of var int: s:: output_array([1..15]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..5] of var int: X_INTRODUCED_36 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_3,X_INTRODUCED_5,X_INTRODUCED_9,X_INTRODUCED_11];
array [1..3] of var int: X_INTRODUCED_39 ::var_is_introduced  = [X_INTRODUCED_2,X_INTRODUCED_7,X_INTRODUCED_12];
array [1..5] of var int: X_INTRODUCED_42 ::var_is_introduced  = [X_INTRODUCED_1,X_INTRODUCED_4,X_INTRODUCED_6,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..16] of var int: X_INTRODUCED_47 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,objective];
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_3],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_6],-6);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_12],-6);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_4],-4);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_5],-4);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_7],-4);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_9],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_14],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_8],-225);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_9],-225);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_14],-225);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_10],-50);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,X_INTRODUCED_11],-150);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_13],-25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,X_INTRODUCED_11],-250);
constraint array_bool_or([X_INTRODUCED_31,X_INTRODUCED_32],true);
constraint jacop_cumulative(X_INTRODUCED_36,X_INTRODUCED_35,X_INTRODUCED_34,14);
constraint jacop_cumulative(X_INTRODUCED_39,X_INTRODUCED_38,X_INTRODUCED_37,9);
constraint jacop_cumulative(X_INTRODUCED_42,X_INTRODUCED_41,X_INTRODUCED_40,8);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,objective],-50);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_11,objective],-4);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_12,objective],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_13,objective],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_14,objective],-3);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_13,X_INTRODUCED_6],-5,X_INTRODUCED_31):: defines_var(X_INTRODUCED_31);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_13],-50,X_INTRODUCED_32):: defines_var(X_INTRODUCED_32);
solve :: int_search(X_INTRODUCED_47,smallest,indomain_min,complete) minimize objective;
