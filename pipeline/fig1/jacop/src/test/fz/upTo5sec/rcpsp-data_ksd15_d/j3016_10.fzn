predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_17 = [1,-1];
array [1..15] of int: X_INTRODUCED_28 = [8,5,8,5,1,3,1,4,8,6,2,6,2,8,6];
array [1..15] of int: X_INTRODUCED_29 = [8,6,4,4,250,75,25,125,50,75,175,3,4,5,1];
array [1..15] of int: X_INTRODUCED_31 = [7,3,4,5,3,10,7,8,8,2,8,3,10,7,5];
array [1..15] of int: X_INTRODUCED_33 = [5,9,8,3,2,6,10,2,2,5,5,10,9,4,5];
array [1..15] of int: X_INTRODUCED_35 = [2,6,8,4,6,8,5,10,4,9,2,5,4,7,4];
var 0..809: X_INTRODUCED_0;
var 0..809: X_INTRODUCED_1;
var 0..809: X_INTRODUCED_2;
var 0..809: X_INTRODUCED_3;
var 0..809: X_INTRODUCED_4;
var 0..809: X_INTRODUCED_5;
var 0..809: X_INTRODUCED_6;
var 0..809: X_INTRODUCED_7;
var 0..809: X_INTRODUCED_8;
var 0..809: X_INTRODUCED_9;
var 0..809: X_INTRODUCED_10;
var 0..809: X_INTRODUCED_11;
var 0..809: X_INTRODUCED_12;
var 0..809: X_INTRODUCED_13;
var 0..809: X_INTRODUCED_14;
var 0..810: objective:: output_var;
array [1..15] of var int: s:: output_array([1..15]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..16] of var int: X_INTRODUCED_43 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,objective];
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_11],-8);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_4],-6);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_6],-6);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_7],-6);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_3],-4);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_14],-4);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_5],-250);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_8],-75);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_9],-25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,X_INTRODUCED_13],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_10],-75);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_12],-75);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_14],-75);
constraint jacop_cumulative(s,X_INTRODUCED_29,X_INTRODUCED_28,37);
constraint jacop_cumulative(s,X_INTRODUCED_29,X_INTRODUCED_31,43);
constraint jacop_cumulative(s,X_INTRODUCED_29,X_INTRODUCED_33,44);
constraint jacop_cumulative(s,X_INTRODUCED_29,X_INTRODUCED_35,33);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,objective],-50);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,objective],-175);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_11,objective],-3);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_12,objective],-4);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_13,objective],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_14,objective],-1);
solve :: int_search(X_INTRODUCED_43,smallest,indomain_min,complete) minimize objective;
