predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_17 = [1,-1];
array [1..10] of int: X_INTRODUCED_27 = [10,9,1,1,3,2,3,4,8,6];
array [1..10] of int: X_INTRODUCED_28 = [6,6,9,1,50,150,175,150,1,8];
array [1..12] of int: X_INTRODUCED_30 = [10,3,9,9,5,5,4,4,3,3,10,9];
array [1..12] of int: X_INTRODUCED_31 = [6,6,125,250,50,175,25,150,1,10,8,5];
array [1..12] of int: X_INTRODUCED_33 = [4,2,8,5,6,2,4,8,4,5,9,10];
array [1..12] of int: X_INTRODUCED_34 = [6,9,1,125,250,50,150,25,150,1,10,5];
array [1..9] of int: X_INTRODUCED_36 = [2,6,4,10,2,8,5,9,4];
array [1..9] of int: X_INTRODUCED_37 = [9,1,125,150,175,150,1,10,8];
var 0..970: X_INTRODUCED_0;
var 0..970: X_INTRODUCED_1;
var 0..970: X_INTRODUCED_2;
var 0..970: X_INTRODUCED_3;
var 0..970: X_INTRODUCED_4;
var 0..970: X_INTRODUCED_5;
var 0..970: X_INTRODUCED_6;
var 0..970: X_INTRODUCED_7;
var 0..970: X_INTRODUCED_8;
var 0..970: X_INTRODUCED_9;
var 0..970: X_INTRODUCED_10;
var 0..970: X_INTRODUCED_11;
var 0..970: X_INTRODUCED_12;
var 0..970: X_INTRODUCED_13;
var 0..970: X_INTRODUCED_14;
var 0..971: objective:: output_var;
array [1..15] of var int: s:: output_array([1..15]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..10] of var int: X_INTRODUCED_29 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_13];
array [1..12] of var int: X_INTRODUCED_32 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..12] of var int: X_INTRODUCED_35 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_14];
array [1..9] of var int: X_INTRODUCED_38 ::var_is_introduced  = [X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13];
array [1..16] of var int: X_INTRODUCED_46 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,objective];
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_8],-6);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_11],-6);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_3],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_4],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_5],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_9],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_12],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_6],-250);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_7],-250);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_10],-50);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,X_INTRODUCED_14],-150);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,X_INTRODUCED_10],-175);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,X_INTRODUCED_13],-175);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_13],-25);
constraint jacop_cumulative(X_INTRODUCED_29,X_INTRODUCED_28,X_INTRODUCED_27,19);
constraint jacop_cumulative(X_INTRODUCED_32,X_INTRODUCED_31,X_INTRODUCED_30,29);
constraint jacop_cumulative(X_INTRODUCED_35,X_INTRODUCED_34,X_INTRODUCED_33,24);
constraint jacop_cumulative(X_INTRODUCED_38,X_INTRODUCED_37,X_INTRODUCED_36,27);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,objective],-6);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,objective],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,objective],-150);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_11,objective],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_12,objective],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_13,objective],-8);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_14,objective],-5);
solve :: int_search(X_INTRODUCED_46,smallest,indomain_min,complete) minimize objective;
