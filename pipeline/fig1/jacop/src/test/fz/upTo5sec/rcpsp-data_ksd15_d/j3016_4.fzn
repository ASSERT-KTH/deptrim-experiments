predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_17 = [1,-1];
array [1..15] of int: X_INTRODUCED_27 = [4,3,5,10,5,9,1,9,4,2,5,3,9,2,3];
array [1..15] of int: X_INTRODUCED_28 = [4,1,8,8,150,50,250,25,25,125,200,6,6,4,7];
array [1..15] of int: X_INTRODUCED_30 = [5,4,6,2,8,9,2,2,5,2,1,1,6,5,6];
array [1..15] of int: X_INTRODUCED_32 = [6,7,4,2,5,1,1,3,8,4,3,4,2,2,3];
array [1..15] of int: X_INTRODUCED_34 = [2,6,5,2,6,8,3,5,1,10,3,6,10,6,8];
var 0..868: X_INTRODUCED_0;
var 0..868: X_INTRODUCED_1;
var 0..868: X_INTRODUCED_2;
var 0..868: X_INTRODUCED_3;
var 0..868: X_INTRODUCED_4;
var 0..868: X_INTRODUCED_5;
var 0..868: X_INTRODUCED_6;
var 0..868: X_INTRODUCED_7;
var 0..868: X_INTRODUCED_8;
var 0..868: X_INTRODUCED_9;
var 0..868: X_INTRODUCED_10;
var 0..868: X_INTRODUCED_11;
var 0..868: X_INTRODUCED_12;
var 0..868: X_INTRODUCED_13;
var 0..868: X_INTRODUCED_14;
var 0..869: objective:: output_var;
array [1..15] of var int: s:: output_array([1..15]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..16] of var int: X_INTRODUCED_43 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,objective];
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_3],-4);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_5],-4);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_3],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_4],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_10],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_11],-8);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_9],-150);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_13],-150);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_6],-50);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_7],-50);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_8],-50);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,X_INTRODUCED_12],-25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_14],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_11,X_INTRODUCED_14],-6);
constraint jacop_cumulative(s,X_INTRODUCED_28,X_INTRODUCED_27,42);
constraint jacop_cumulative(s,X_INTRODUCED_28,X_INTRODUCED_30,39);
constraint jacop_cumulative(s,X_INTRODUCED_28,X_INTRODUCED_32,37);
constraint jacop_cumulative(s,X_INTRODUCED_28,X_INTRODUCED_34,46);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,objective],-8);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,objective],-250);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,objective],-25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,objective],-200);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_12,objective],-6);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_13,objective],-4);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_14,objective],-7);
solve :: int_search(X_INTRODUCED_43,smallest,indomain_min,complete) minimize objective;
