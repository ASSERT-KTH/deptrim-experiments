predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_17 = [1,-1];
array [1..13] of int: X_INTRODUCED_26 = [6,2,9,3,10,9,10,4,4,4,4,6,2];
array [1..13] of int: X_INTRODUCED_27 = [4,2,10,125,175,200,150,50,150,5,3,5,1];
array [1..12] of int: X_INTRODUCED_29 = [7,2,6,2,3,8,7,6,7,9,5,9];
array [1..12] of int: X_INTRODUCED_30 = [2,2,10,125,175,150,50,150,5,3,5,1];
array [1..11] of int: X_INTRODUCED_32 = [9,3,8,10,8,1,3,6,4,3,1];
array [1..11] of int: X_INTRODUCED_33 = [2,2,10,125,175,200,50,150,5,5,1];
array [1..9] of int: X_INTRODUCED_35 = [9,1,2,2,5,4,3,1,6];
array [1..9] of int: X_INTRODUCED_36 = [2,4,10,125,175,150,3,5,1];
var 0..1006: X_INTRODUCED_0;
var 0..1006: X_INTRODUCED_1;
var 0..1006: X_INTRODUCED_2;
var 0..1006: X_INTRODUCED_3;
var 0..1006: X_INTRODUCED_4;
var 0..1006: X_INTRODUCED_5;
var 0..1006: X_INTRODUCED_6;
var 0..1006: X_INTRODUCED_7;
var 0..1006: X_INTRODUCED_8;
var 0..1006: X_INTRODUCED_9;
var 0..1006: X_INTRODUCED_10;
var 0..1006: X_INTRODUCED_11;
var 0..1006: X_INTRODUCED_12;
var 0..1006: X_INTRODUCED_13;
var 0..1006: X_INTRODUCED_14;
var 0..1007: objective:: output_var;
array [1..15] of var int: s:: output_array([1..15]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..13] of var int: X_INTRODUCED_28 ::var_is_introduced  = [X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..12] of var int: X_INTRODUCED_31 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_6,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..11] of var int: X_INTRODUCED_34 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..9] of var int: X_INTRODUCED_37 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_3,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_8,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..16] of var int: X_INTRODUCED_46 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,objective];
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_4],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_6],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_7],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_5],-4);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_3],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_9],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_11],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_8],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_12],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_13],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_6],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_10],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_14],-175);
constraint jacop_cumulative(X_INTRODUCED_28,X_INTRODUCED_27,X_INTRODUCED_26,52);
constraint jacop_cumulative(X_INTRODUCED_31,X_INTRODUCED_30,X_INTRODUCED_29,40);
constraint jacop_cumulative(X_INTRODUCED_34,X_INTRODUCED_33,X_INTRODUCED_32,30);
constraint jacop_cumulative(X_INTRODUCED_37,X_INTRODUCED_36,X_INTRODUCED_35,24);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,objective],-200);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,objective],-150);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,objective],-50);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,objective],-150);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_11,objective],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_12,objective],-3);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_13,objective],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_14,objective],-1);
solve :: int_search(X_INTRODUCED_46,smallest,indomain_min,complete) minimize objective;
