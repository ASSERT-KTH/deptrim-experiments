predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_17 = [1,-1];
array [1..6] of int: X_INTRODUCED_33 = [10,4,2,4,5,10];
array [1..6] of int: X_INTRODUCED_34 = [8,1,25,200,5,10];
array [1..10] of int: X_INTRODUCED_36 = [7,8,9,10,2,8,3,8,7,9];
array [1..10] of int: X_INTRODUCED_37 = [7,8,75,75,25,150,50,5,5,10];
array [1..7] of int: X_INTRODUCED_39 = [6,5,1,9,10,2,4];
array [1..7] of int: X_INTRODUCED_40 = [5,8,1,25,50,50,10];
array [1..10] of int: X_INTRODUCED_42 = [1,6,1,10,4,6,3,8,1,8];
array [1..10] of int: X_INTRODUCED_43 = [7,5,8,75,75,150,200,50,7,10];
var 0..672: X_INTRODUCED_0;
var 0..672: X_INTRODUCED_1;
var 0..672: X_INTRODUCED_2;
var 0..672: X_INTRODUCED_3;
var 0..672: X_INTRODUCED_4;
var 0..672: X_INTRODUCED_5;
var 0..672: X_INTRODUCED_6;
var 0..672: X_INTRODUCED_7;
var 0..672: X_INTRODUCED_8;
var 0..672: X_INTRODUCED_9;
var 0..672: X_INTRODUCED_10;
var 0..672: X_INTRODUCED_11;
var 0..672: X_INTRODUCED_12;
var 0..672: X_INTRODUCED_13;
var 0..672: X_INTRODUCED_14;
var 0..673: objective:: output_var;
var bool: X_INTRODUCED_29 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_31 ::var_is_introduced :: is_defined_var;
array [1..15] of var int: s:: output_array([1..15]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..6] of var int: X_INTRODUCED_35 ::var_is_introduced  = [X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_6,X_INTRODUCED_9,X_INTRODUCED_12,X_INTRODUCED_14];
array [1..10] of var int: X_INTRODUCED_38 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_2,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_14];
array [1..7] of var int: X_INTRODUCED_41 ::var_is_introduced  = [X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_6,X_INTRODUCED_8,X_INTRODUCED_10,X_INTRODUCED_14];
array [1..10] of var int: X_INTRODUCED_44 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_7,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..16] of var int: X_INTRODUCED_48 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,objective];
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_6],-7);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_14],-7);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_5],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_7],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_3],-8);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_4],-8);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_10],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_8],-75);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_8],-75);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,X_INTRODUCED_9],-150);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,X_INTRODUCED_13],-150);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_10],-200);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_11],-200);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_11,X_INTRODUCED_12],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_13,X_INTRODUCED_14],-7);
constraint array_bool_or([X_INTRODUCED_29,X_INTRODUCED_31],true);
constraint jacop_cumulative(X_INTRODUCED_35,X_INTRODUCED_34,X_INTRODUCED_33,21);
constraint jacop_cumulative(X_INTRODUCED_38,X_INTRODUCED_37,X_INTRODUCED_36,33);
constraint jacop_cumulative(X_INTRODUCED_41,X_INTRODUCED_40,X_INTRODUCED_39,16);
constraint jacop_cumulative(X_INTRODUCED_44,X_INTRODUCED_43,X_INTRODUCED_42,29);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,objective],-25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,objective],-50);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,objective],-50);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_12,objective],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_14,objective],-10);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_8,X_INTRODUCED_6],-50,X_INTRODUCED_29):: defines_var(X_INTRODUCED_29);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_8],-25,X_INTRODUCED_31):: defines_var(X_INTRODUCED_31);
solve :: int_search(X_INTRODUCED_48,smallest,indomain_min,complete) minimize objective;
