predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_17 = [1,-1];
array [1..11] of int: X_INTRODUCED_28 = [5,1,3,3,7,9,7,1,10,10,1];
array [1..11] of int: X_INTRODUCED_29 = [9,8,3,25,250,100,125,100,175,6,1];
array [1..8] of int: X_INTRODUCED_31 = [5,8,8,8,8,9,7,5];
array [1..8] of int: X_INTRODUCED_32 = [9,8,3,250,100,6,1,2];
array [1..9] of int: X_INTRODUCED_34 = [9,7,3,5,9,7,3,6,5];
array [1..9] of int: X_INTRODUCED_35 = [9,1,250,175,100,125,175,6,2];
var 0..985: X_INTRODUCED_0;
var 0..985: X_INTRODUCED_1;
var 0..985: X_INTRODUCED_2;
var 0..985: X_INTRODUCED_3;
var 0..985: X_INTRODUCED_4;
var 0..985: X_INTRODUCED_5;
var 0..985: X_INTRODUCED_6;
var 0..985: X_INTRODUCED_7;
var 0..985: X_INTRODUCED_8;
var 0..985: X_INTRODUCED_9;
var 0..985: X_INTRODUCED_10;
var 0..985: X_INTRODUCED_11;
var 0..985: X_INTRODUCED_12;
var 0..985: X_INTRODUCED_13;
var 0..985: X_INTRODUCED_14;
var 0..986: objective:: output_var;
array [1..15] of var int: s:: output_array([1..15]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..11] of var int: X_INTRODUCED_30 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12];
array [1..8] of var int: X_INTRODUCED_33 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_5,X_INTRODUCED_7,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_14];
array [1..9] of var int: X_INTRODUCED_36 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_3,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_10,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..16] of var int: X_INTRODUCED_43 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,objective];
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_5],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_7],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_13],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_4],-8);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_3],-3);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_6],-3);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_10],-3);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_12],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_11],-25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_12],-250);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_8],-175);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_9],-175);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,X_INTRODUCED_11],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,X_INTRODUCED_14],-175);
constraint jacop_cumulative(X_INTRODUCED_30,X_INTRODUCED_29,X_INTRODUCED_28,34);
constraint jacop_cumulative(X_INTRODUCED_33,X_INTRODUCED_32,X_INTRODUCED_31,26);
constraint jacop_cumulative(X_INTRODUCED_36,X_INTRODUCED_35,X_INTRODUCED_34,33);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,objective],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,objective],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_11,objective],-6);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_12,objective],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_13,objective],-6);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_14,objective],-2);
solve :: int_search(X_INTRODUCED_43,smallest,indomain_min,complete) minimize objective;
