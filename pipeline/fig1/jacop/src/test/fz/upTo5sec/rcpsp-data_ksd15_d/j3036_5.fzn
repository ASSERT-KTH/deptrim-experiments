predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_17 = [1,-1];
array [1..3] of int: X_INTRODUCED_33 = [9,6,2];
array [1..3] of int: X_INTRODUCED_34 = [5,50,8];
array [1..8] of int: X_INTRODUCED_36 = [4,7,10,1,10,8,5,10];
array [1..8] of int: X_INTRODUCED_37 = [1,7,6,200,250,50,3,1];
var 0..1059: X_INTRODUCED_0;
var 0..1059: X_INTRODUCED_1;
var 0..1059: X_INTRODUCED_2;
var 0..1059: X_INTRODUCED_3;
var 0..1059: X_INTRODUCED_4;
var 0..1059: X_INTRODUCED_5;
var 0..1059: X_INTRODUCED_6;
var 0..1059: X_INTRODUCED_7;
var 0..1059: X_INTRODUCED_8;
var 0..1059: X_INTRODUCED_9;
var 0..1059: X_INTRODUCED_10;
var 0..1059: X_INTRODUCED_11;
var 0..1059: X_INTRODUCED_12;
var 0..1059: X_INTRODUCED_13;
var 0..1059: X_INTRODUCED_14;
var 0..1060: objective:: output_var;
var bool: X_INTRODUCED_30 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_31 ::var_is_introduced :: is_defined_var;
array [1..15] of var int: s:: output_array([1..15]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..3] of var int: X_INTRODUCED_35 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_10,X_INTRODUCED_12];
array [1..8] of var int: X_INTRODUCED_38 ::var_is_introduced  = [X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_11,X_INTRODUCED_14];
array [1..16] of var int: X_INTRODUCED_42 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,objective];
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_3],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_8],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_14],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_4],-7);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_6],-7);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_7],-7);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_4],-6);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_5],-6);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_7],-6);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_10],-200);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_13],-200);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_11],-150);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_8],-250);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_9],-250);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_14],-250);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,X_INTRODUCED_10],-50);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,X_INTRODUCED_13],-175);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_12],-150);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_12,X_INTRODUCED_13],-8);
constraint array_bool_or([X_INTRODUCED_30,X_INTRODUCED_31],true);
constraint jacop_cumulative(X_INTRODUCED_35,X_INTRODUCED_34,X_INTRODUCED_33,13);
constraint jacop_cumulative(X_INTRODUCED_38,X_INTRODUCED_37,X_INTRODUCED_36,20);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,objective],-50);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_11,objective],-3);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_13,objective],-4);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_14,objective],-1);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_10,X_INTRODUCED_0],-50,X_INTRODUCED_30):: defines_var(X_INTRODUCED_30);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_10],-5,X_INTRODUCED_31):: defines_var(X_INTRODUCED_31);
solve :: int_search(X_INTRODUCED_42,smallest,indomain_min,complete) minimize objective;
