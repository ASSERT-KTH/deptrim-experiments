predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_17 = [1,-1];
array [1..11] of int: X_INTRODUCED_28 = [4,9,8,10,5,4,2,3,3,8,2];
array [1..11] of int: X_INTRODUCED_29 = [9,10,100,100,200,225,200,75,8,4,7];
array [1..10] of int: X_INTRODUCED_31 = [8,4,2,7,9,10,10,7,4,8];
array [1..10] of int: X_INTRODUCED_32 = [9,8,10,7,100,250,100,75,8,1];
array [1..12] of int: X_INTRODUCED_34 = [9,1,7,3,6,7,3,7,4,1,2,5];
array [1..12] of int: X_INTRODUCED_35 = [9,8,10,7,100,200,225,200,8,4,7,1];
array [1..10] of int: X_INTRODUCED_37 = [9,6,3,9,10,10,9,2,9,2];
array [1..10] of int: X_INTRODUCED_38 = [8,100,250,100,200,75,8,4,7,1];
var 0..1203: X_INTRODUCED_0;
var 0..1203: X_INTRODUCED_1;
var 0..1203: X_INTRODUCED_2;
var 0..1203: X_INTRODUCED_3;
var 0..1203: X_INTRODUCED_4;
var 0..1203: X_INTRODUCED_5;
var 0..1203: X_INTRODUCED_6;
var 0..1203: X_INTRODUCED_7;
var 0..1203: X_INTRODUCED_8;
var 0..1203: X_INTRODUCED_9;
var 0..1203: X_INTRODUCED_10;
var 0..1203: X_INTRODUCED_11;
var 0..1203: X_INTRODUCED_12;
var 0..1203: X_INTRODUCED_13;
var 0..1203: X_INTRODUCED_14;
var 0..1204: objective:: output_var;
array [1..15] of var int: s:: output_array([1..15]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..11] of var int: X_INTRODUCED_30 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_2,X_INTRODUCED_4,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13];
array [1..10] of var int: X_INTRODUCED_33 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_14];
array [1..12] of var int: X_INTRODUCED_36 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..10] of var int: X_INTRODUCED_39 ::var_is_introduced  = [X_INTRODUCED_1,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..16] of var int: X_INTRODUCED_46 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,objective];
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_3],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_4],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_7],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_13],-8);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_6],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_7],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_9],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_5],-7);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_14],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_10],-250);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,X_INTRODUCED_8],-200);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,X_INTRODUCED_12],-225);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,X_INTRODUCED_11],-75);
constraint jacop_cumulative(X_INTRODUCED_30,X_INTRODUCED_29,X_INTRODUCED_28,27);
constraint jacop_cumulative(X_INTRODUCED_33,X_INTRODUCED_32,X_INTRODUCED_31,26);
constraint jacop_cumulative(X_INTRODUCED_36,X_INTRODUCED_35,X_INTRODUCED_34,25);
constraint jacop_cumulative(X_INTRODUCED_39,X_INTRODUCED_38,X_INTRODUCED_37,34);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,objective],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,objective],-200);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_11,objective],-8);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_12,objective],-4);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_13,objective],-7);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_14,objective],-1);
solve :: int_search(X_INTRODUCED_46,smallest,indomain_min,complete) minimize objective;
