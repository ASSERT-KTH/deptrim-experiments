predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_17 = [1,-1];
array [1..8] of int: X_INTRODUCED_34 = [2,2,6,6,1,2,7,4];
array [1..8] of int: X_INTRODUCED_35 = [1,5,7,25,75,175,2,7];
array [1..10] of int: X_INTRODUCED_37 = [8,7,8,5,3,9,10,10,7,7];
array [1..10] of int: X_INTRODUCED_38 = [5,7,25,125,125,75,175,2,7,6];
array [1..8] of int: X_INTRODUCED_40 = [9,3,1,1,7,3,3,9];
array [1..8] of int: X_INTRODUCED_41 = [1,5,10,125,75,4,7,6];
array [1..4] of int: X_INTRODUCED_43 = [6,10,8,1];
array [1..4] of int: X_INTRODUCED_44 = [25,225,175,7];
var 0..816: X_INTRODUCED_0;
var 0..816: X_INTRODUCED_1;
var 0..816: X_INTRODUCED_2;
var 0..816: X_INTRODUCED_3;
var 0..816: X_INTRODUCED_4;
var 0..816: X_INTRODUCED_5;
var 0..816: X_INTRODUCED_6;
var 0..816: X_INTRODUCED_7;
var 0..816: X_INTRODUCED_8;
var 0..816: X_INTRODUCED_9;
var 0..816: X_INTRODUCED_10;
var 0..816: X_INTRODUCED_11;
var 0..816: X_INTRODUCED_12;
var 0..816: X_INTRODUCED_13;
var 0..816: X_INTRODUCED_14;
var 0..817: objective:: output_var;
var bool: X_INTRODUCED_29 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_30 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_31 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_32 ::var_is_introduced :: is_defined_var;
array [1..15] of var int: s:: output_array([1..15]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..8] of var int: X_INTRODUCED_36 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_6,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_12,X_INTRODUCED_13];
array [1..10] of var int: X_INTRODUCED_39 ::var_is_introduced  = [X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_7,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..8] of var int: X_INTRODUCED_42 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_3,X_INTRODUCED_7,X_INTRODUCED_9,X_INTRODUCED_11,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..4] of var int: X_INTRODUCED_45 ::var_is_introduced  = [X_INTRODUCED_6,X_INTRODUCED_8,X_INTRODUCED_10,X_INTRODUCED_13];
array [1..16] of var int: X_INTRODUCED_50 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,objective];
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_9],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_3],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_5],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_13],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_4],-7);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_6],-7);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_7],-7);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_8],-25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_11],-25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_10],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_14],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_11],-25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,X_INTRODUCED_9],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_12],-75);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,X_INTRODUCED_11],-175);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_13,X_INTRODUCED_14],-7);
constraint array_bool_or([X_INTRODUCED_29,X_INTRODUCED_30],true);
constraint array_bool_or([X_INTRODUCED_31,X_INTRODUCED_32],true);
constraint jacop_cumulative(X_INTRODUCED_36,X_INTRODUCED_35,X_INTRODUCED_34,12);
constraint jacop_cumulative(X_INTRODUCED_39,X_INTRODUCED_38,X_INTRODUCED_37,24);
constraint jacop_cumulative(X_INTRODUCED_42,X_INTRODUCED_41,X_INTRODUCED_40,19);
constraint jacop_cumulative(X_INTRODUCED_45,X_INTRODUCED_44,X_INTRODUCED_43,19);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,objective],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,objective],-225);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_11,objective],-4);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_12,objective],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_14,objective],-6);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_12,X_INTRODUCED_2],-2,X_INTRODUCED_29):: defines_var(X_INTRODUCED_29);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_12],-7,X_INTRODUCED_30):: defines_var(X_INTRODUCED_30);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_12,X_INTRODUCED_6],-2,X_INTRODUCED_31):: defines_var(X_INTRODUCED_31);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_12],-25,X_INTRODUCED_32):: defines_var(X_INTRODUCED_32);
solve :: int_search(X_INTRODUCED_50,smallest,indomain_min,complete) minimize objective;
