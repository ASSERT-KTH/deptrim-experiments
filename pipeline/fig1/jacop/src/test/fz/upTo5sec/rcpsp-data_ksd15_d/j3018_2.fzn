predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_17 = [1,-1];
array [1..5] of int: X_INTRODUCED_47 = [2,10,8,8,3];
array [1..5] of int: X_INTRODUCED_48 = [9,4,225,50,125];
array [1..8] of int: X_INTRODUCED_50 = [2,1,4,4,5,3,6,10];
array [1..8] of int: X_INTRODUCED_51 = [3,250,50,150,6,5,9,9];
var 0..1071: X_INTRODUCED_0;
var 0..1071: X_INTRODUCED_1;
var 0..1071: X_INTRODUCED_2;
var 0..1071: X_INTRODUCED_3;
var 0..1071: X_INTRODUCED_4;
var 0..1071: X_INTRODUCED_5;
var 0..1071: X_INTRODUCED_6;
var 0..1071: X_INTRODUCED_7;
var 0..1071: X_INTRODUCED_8;
var 0..1071: X_INTRODUCED_9;
var 0..1071: X_INTRODUCED_10;
var 0..1071: X_INTRODUCED_11;
var 0..1071: X_INTRODUCED_12;
var 0..1071: X_INTRODUCED_13;
var 0..1071: X_INTRODUCED_14;
var 0..1072: objective:: output_var;
var bool: X_INTRODUCED_30 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_31 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_32 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_33 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_34 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_35 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_36 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_37 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_38 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_39 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_40 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_41 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_43 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_44 ::var_is_introduced :: is_defined_var;
array [1..15] of var int: s:: output_array([1..15]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..5] of var int: X_INTRODUCED_49 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_3,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10];
array [1..8] of var int: X_INTRODUCED_52 ::var_is_introduced  = [X_INTRODUCED_1,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_7,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..16] of var int: X_INTRODUCED_56 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,objective];
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_4],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_3],-3);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_4],-3);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_5],-4);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_7],-4);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_12],-4);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_6],-50);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_8],-50);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_9],-50);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_14],-175);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,X_INTRODUCED_9],-150);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,X_INTRODUCED_10],-225);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_11],-50);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_11,X_INTRODUCED_14],-6);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_12,X_INTRODUCED_13],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_13,X_INTRODUCED_14],-9);
constraint array_bool_or([X_INTRODUCED_30,X_INTRODUCED_31],true);
constraint array_bool_or([X_INTRODUCED_32,X_INTRODUCED_33],true);
constraint array_bool_or([X_INTRODUCED_34,X_INTRODUCED_35],true);
constraint array_bool_or([X_INTRODUCED_36,X_INTRODUCED_37],true);
constraint array_bool_or([X_INTRODUCED_38,X_INTRODUCED_39],true);
constraint array_bool_or([X_INTRODUCED_40,X_INTRODUCED_41],true);
constraint array_bool_or([X_INTRODUCED_43,X_INTRODUCED_44],true);
constraint jacop_cumulative(X_INTRODUCED_49,X_INTRODUCED_48,X_INTRODUCED_47,13);
constraint jacop_cumulative(X_INTRODUCED_52,X_INTRODUCED_51,X_INTRODUCED_50,11);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,objective],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,objective],-250);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,objective],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_14,objective],-9);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_14,X_INTRODUCED_1],-9,X_INTRODUCED_30):: defines_var(X_INTRODUCED_30);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_14],-3,X_INTRODUCED_31):: defines_var(X_INTRODUCED_31);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_8,X_INTRODUCED_3],-225,X_INTRODUCED_32):: defines_var(X_INTRODUCED_32);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_8],-4,X_INTRODUCED_33):: defines_var(X_INTRODUCED_33);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_3],-50,X_INTRODUCED_34):: defines_var(X_INTRODUCED_34);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_9],-4,X_INTRODUCED_35):: defines_var(X_INTRODUCED_35);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_14,X_INTRODUCED_5],-9,X_INTRODUCED_36):: defines_var(X_INTRODUCED_36);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_14],-50,X_INTRODUCED_37):: defines_var(X_INTRODUCED_37);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_14,X_INTRODUCED_7],-9,X_INTRODUCED_38):: defines_var(X_INTRODUCED_38);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_7,X_INTRODUCED_14],-150,X_INTRODUCED_39):: defines_var(X_INTRODUCED_39);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_8],-50,X_INTRODUCED_40):: defines_var(X_INTRODUCED_40);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_8,X_INTRODUCED_9],-225,X_INTRODUCED_41):: defines_var(X_INTRODUCED_41);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_14,X_INTRODUCED_12],-9,X_INTRODUCED_43):: defines_var(X_INTRODUCED_43);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_12,X_INTRODUCED_14],-5,X_INTRODUCED_44):: defines_var(X_INTRODUCED_44);
solve :: int_search(X_INTRODUCED_56,smallest,indomain_min,complete) minimize objective;
