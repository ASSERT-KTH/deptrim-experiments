predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_17 = [1,-1];
array [1..12] of int: X_INTRODUCED_26 = [2,4,6,1,10,7,4,8,8,2,8,10];
array [1..12] of int: X_INTRODUCED_27 = [3,6,125,200,225,125,225,250,3,2,10,8];
array [1..12] of int: X_INTRODUCED_29 = [2,2,8,6,3,9,6,3,9,10,4,7];
array [1..12] of int: X_INTRODUCED_30 = [3,8,125,200,225,25,125,225,250,3,2,10];
array [1..10] of int: X_INTRODUCED_32 = [7,6,3,6,2,7,6,3,2,3];
array [1..10] of int: X_INTRODUCED_33 = [8,3,200,225,25,225,250,3,2,8];
array [1..13] of int: X_INTRODUCED_35 = [1,10,7,8,7,10,4,5,6,6,3,5,4];
array [1..13] of int: X_INTRODUCED_36 = [8,6,3,125,200,225,25,125,250,3,2,10,8];
var 0..1217: X_INTRODUCED_0;
var 0..1217: X_INTRODUCED_1;
var 0..1217: X_INTRODUCED_2;
var 0..1217: X_INTRODUCED_3;
var 0..1217: X_INTRODUCED_4;
var 0..1217: X_INTRODUCED_5;
var 0..1217: X_INTRODUCED_6;
var 0..1217: X_INTRODUCED_7;
var 0..1217: X_INTRODUCED_8;
var 0..1217: X_INTRODUCED_9;
var 0..1217: X_INTRODUCED_10;
var 0..1217: X_INTRODUCED_11;
var 0..1217: X_INTRODUCED_12;
var 0..1217: X_INTRODUCED_13;
var 0..1217: X_INTRODUCED_14;
var 0..1218: objective:: output_var;
array [1..15] of var int: s:: output_array([1..15]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..12] of var int: X_INTRODUCED_28 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_2,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..12] of var int: X_INTRODUCED_31 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13];
array [1..10] of var int: X_INTRODUCED_34 ::var_is_introduced  = [X_INTRODUCED_1,X_INTRODUCED_3,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_14];
array [1..13] of var int: X_INTRODUCED_37 ::var_is_introduced  = [X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..16] of var int: X_INTRODUCED_46 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,objective];
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_3],-3);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_4],-3);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_5],-3);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_11],-8);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_6],-6);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_10],-6);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_9],-3);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_13],-3);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_7],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_8],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_14],-225);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,X_INTRODUCED_12],-250);
constraint jacop_cumulative(X_INTRODUCED_28,X_INTRODUCED_27,X_INTRODUCED_26,55);
constraint jacop_cumulative(X_INTRODUCED_31,X_INTRODUCED_30,X_INTRODUCED_29,63);
constraint jacop_cumulative(X_INTRODUCED_34,X_INTRODUCED_33,X_INTRODUCED_32,38);
constraint jacop_cumulative(X_INTRODUCED_37,X_INTRODUCED_36,X_INTRODUCED_35,63);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,objective],-200);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,objective],-225);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,objective],-25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,objective],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_11,objective],-3);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_12,objective],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_13,objective],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_14,objective],-8);
solve :: int_search(X_INTRODUCED_46,smallest,indomain_min,complete) minimize objective;
