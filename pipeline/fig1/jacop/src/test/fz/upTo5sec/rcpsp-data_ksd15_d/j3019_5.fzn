predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_17 = [1,-1];
array [1..3] of int: X_INTRODUCED_38 = [9,2,5];
array [1..3] of int: X_INTRODUCED_39 = [4,225,6];
array [1..5] of int: X_INTRODUCED_41 = [7,9,6,2,8];
array [1..5] of int: X_INTRODUCED_42 = [5,125,175,6,6];
array [1..6] of int: X_INTRODUCED_44 = [8,6,3,1,9,6];
array [1..6] of int: X_INTRODUCED_45 = [8,200,200,75,75,8];
var 0..1127: X_INTRODUCED_0;
var 0..1127: X_INTRODUCED_1;
var 0..1127: X_INTRODUCED_2;
var 0..1127: X_INTRODUCED_3;
var 0..1127: X_INTRODUCED_4;
var 0..1127: X_INTRODUCED_5;
var 0..1127: X_INTRODUCED_6;
var 0..1127: X_INTRODUCED_7;
var 0..1127: X_INTRODUCED_8;
var 0..1127: X_INTRODUCED_9;
var 0..1127: X_INTRODUCED_10;
var 0..1127: X_INTRODUCED_11;
var 0..1127: X_INTRODUCED_12;
var 0..1127: X_INTRODUCED_13;
var 0..1127: X_INTRODUCED_14;
var 0..1128: objective:: output_var;
var bool: X_INTRODUCED_29 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_30 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_31 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_32 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_33 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_34 ::var_is_introduced :: is_defined_var;
array [1..15] of var int: s:: output_array([1..15]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..3] of var int: X_INTRODUCED_40 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_9,X_INTRODUCED_12];
array [1..5] of var int: X_INTRODUCED_43 ::var_is_introduced  = [X_INTRODUCED_1,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_11,X_INTRODUCED_14];
array [1..6] of var int: X_INTRODUCED_46 ::var_is_introduced  = [X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_10,X_INTRODUCED_13];
array [1..16] of var int: X_INTRODUCED_50 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,objective];
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_3],-4);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_10],-4);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_7],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_13],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_4],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_5],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_8],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_6],-8);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_12],-8);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_11],-200);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_12],-200);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_13],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_14],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_11],-175);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,X_INTRODUCED_12],-200);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,X_INTRODUCED_9],-75);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,X_INTRODUCED_13],-75);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_12,X_INTRODUCED_14],-6);
constraint array_bool_or([X_INTRODUCED_29,X_INTRODUCED_30],true);
constraint array_bool_or([X_INTRODUCED_31,X_INTRODUCED_32],true);
constraint array_bool_or([X_INTRODUCED_33,X_INTRODUCED_34],true);
constraint jacop_cumulative(X_INTRODUCED_40,X_INTRODUCED_39,X_INTRODUCED_38,9);
constraint jacop_cumulative(X_INTRODUCED_43,X_INTRODUCED_42,X_INTRODUCED_41,15);
constraint jacop_cumulative(X_INTRODUCED_46,X_INTRODUCED_45,X_INTRODUCED_44,17);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,objective],-225);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,objective],-75);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_11,objective],-6);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_13,objective],-8);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_14,objective],-6);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_0],-225,X_INTRODUCED_29):: defines_var(X_INTRODUCED_29);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_9],-4,X_INTRODUCED_30):: defines_var(X_INTRODUCED_30);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_12,X_INTRODUCED_0],-6,X_INTRODUCED_31):: defines_var(X_INTRODUCED_31);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_12],-4,X_INTRODUCED_32):: defines_var(X_INTRODUCED_32);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_1],-125,X_INTRODUCED_33):: defines_var(X_INTRODUCED_33);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_5],-5,X_INTRODUCED_34):: defines_var(X_INTRODUCED_34);
solve :: int_search(X_INTRODUCED_50,smallest,indomain_min,complete) minimize objective;
