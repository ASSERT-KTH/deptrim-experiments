predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_17 = [1,-1];
array [1..9] of int: X_INTRODUCED_29 = [6,3,6,6,4,8,2,6,9];
array [1..9] of int: X_INTRODUCED_30 = [1,125,75,50,75,2,9,5,2];
array [1..14] of int: X_INTRODUCED_32 = [7,6,1,3,6,3,10,4,4,1,1,1,8,7];
array [1..14] of int: X_INTRODUCED_33 = [1,2,10,9,125,175,75,200,50,75,25,2,9,2];
array [1..13] of int: X_INTRODUCED_35 = [3,3,7,4,4,3,6,2,1,7,1,1,5];
array [1..13] of int: X_INTRODUCED_36 = [2,10,9,125,75,200,50,75,25,2,9,5,2];
array [1..12] of int: X_INTRODUCED_38 = [10,10,5,6,3,4,1,8,3,4,6,5];
array [1..12] of int: X_INTRODUCED_39 = [2,10,9,125,175,200,50,75,25,2,5,2];
var 0..764: X_INTRODUCED_0;
var 0..764: X_INTRODUCED_1;
var 0..764: X_INTRODUCED_2;
var 0..764: X_INTRODUCED_3;
var 0..764: X_INTRODUCED_4;
var 0..764: X_INTRODUCED_5;
var 0..764: X_INTRODUCED_6;
var 0..764: X_INTRODUCED_7;
var 0..764: X_INTRODUCED_8;
var 0..764: X_INTRODUCED_9;
var 0..764: X_INTRODUCED_10;
var 0..764: X_INTRODUCED_11;
var 0..764: X_INTRODUCED_12;
var 0..764: X_INTRODUCED_13;
var 0..764: X_INTRODUCED_14;
var 0..765: objective:: output_var;
var bool: X_INTRODUCED_26 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_27 ::var_is_introduced :: is_defined_var;
array [1..15] of var int: s:: output_array([1..15]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..9] of var int: X_INTRODUCED_31 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_4,X_INTRODUCED_6,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..14] of var int: X_INTRODUCED_34 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_14];
array [1..13] of var int: X_INTRODUCED_37 ::var_is_introduced  = [X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..12] of var int: X_INTRODUCED_40 ::var_is_introduced  = [X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..16] of var int: X_INTRODUCED_48 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,objective];
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_4],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_8],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_9],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_3],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_5],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_6],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_12],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_7],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_10],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_11],-75);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_14],-75);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,X_INTRODUCED_13],-200);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,X_INTRODUCED_13],-25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_12,X_INTRODUCED_13],-9);
constraint array_bool_or([X_INTRODUCED_26,X_INTRODUCED_27],true);
constraint jacop_cumulative(X_INTRODUCED_31,X_INTRODUCED_30,X_INTRODUCED_29,20);
constraint jacop_cumulative(X_INTRODUCED_34,X_INTRODUCED_33,X_INTRODUCED_32,17);
constraint jacop_cumulative(X_INTRODUCED_37,X_INTRODUCED_36,X_INTRODUCED_35,18);
constraint jacop_cumulative(X_INTRODUCED_40,X_INTRODUCED_39,X_INTRODUCED_38,23);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,objective],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,objective],-175);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,objective],-50);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,objective],-75);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_11,objective],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_13,objective],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_14,objective],-2);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_12,X_INTRODUCED_6],-9,X_INTRODUCED_26):: defines_var(X_INTRODUCED_26);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_12],-75,X_INTRODUCED_27):: defines_var(X_INTRODUCED_27);
solve :: int_search(X_INTRODUCED_48,smallest,indomain_min,complete) minimize objective;
