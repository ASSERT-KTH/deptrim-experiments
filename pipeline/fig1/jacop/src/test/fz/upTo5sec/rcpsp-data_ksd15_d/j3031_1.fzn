predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_17 = [1,-1];
array [1..15] of int: X_INTRODUCED_27 = [9,3,7,10,1,2,10,4,4,4,8,7,9,2,1];
array [1..15] of int: X_INTRODUCED_28 = [1,7,1,7,175,25,175,100,100,50,25,1,6,1,7];
array [1..15] of int: X_INTRODUCED_30 = [5,7,4,6,7,10,9,10,4,9,2,2,2,10,10];
array [1..15] of int: X_INTRODUCED_32 = [1,10,10,3,3,9,10,7,9,5,4,6,10,6,2];
array [1..15] of int: X_INTRODUCED_34 = [9,8,4,4,3,1,8,7,9,7,9,6,3,8,3];
var 0..680: X_INTRODUCED_0;
var 0..680: X_INTRODUCED_1;
var 0..680: X_INTRODUCED_2;
var 0..680: X_INTRODUCED_3;
var 0..680: X_INTRODUCED_4;
var 0..680: X_INTRODUCED_5;
var 0..680: X_INTRODUCED_6;
var 0..680: X_INTRODUCED_7;
var 0..680: X_INTRODUCED_8;
var 0..680: X_INTRODUCED_9;
var 0..680: X_INTRODUCED_10;
var 0..680: X_INTRODUCED_11;
var 0..680: X_INTRODUCED_12;
var 0..680: X_INTRODUCED_13;
var 0..680: X_INTRODUCED_14;
var 0..681: objective:: output_var;
array [1..15] of var int: s:: output_array([1..15]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..16] of var int: X_INTRODUCED_43 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,objective];
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_3],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_8],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_4],-7);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_7],-7);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_9],-7);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_5],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_9],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_6],-175);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_13],-175);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,X_INTRODUCED_11],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_10],-50);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_11,X_INTRODUCED_12],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_12,X_INTRODUCED_14],-6);
constraint jacop_cumulative(s,X_INTRODUCED_28,X_INTRODUCED_27,38);
constraint jacop_cumulative(s,X_INTRODUCED_28,X_INTRODUCED_30,40);
constraint jacop_cumulative(s,X_INTRODUCED_28,X_INTRODUCED_32,30);
constraint jacop_cumulative(s,X_INTRODUCED_28,X_INTRODUCED_34,24);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,objective],-7);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,objective],-25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,objective],-175);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,objective],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,objective],-25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_13,objective],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_14,objective],-7);
solve :: int_search(X_INTRODUCED_43,smallest,indomain_min,complete) minimize objective;
