predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_17 = [1,-1];
array [1..3] of int: X_INTRODUCED_42 = [4,7,6];
array [1..3] of int: X_INTRODUCED_43 = [9,1,6];
array [1..3] of int: X_INTRODUCED_45 = [5,6,4];
array [1..3] of int: X_INTRODUCED_46 = [25,125,150];
array [1..5] of int: X_INTRODUCED_48 = [10,1,1,5,10];
array [1..5] of int: X_INTRODUCED_49 = [50,225,1,6,5];
array [1..4] of int: X_INTRODUCED_51 = [5,3,7,7];
array [1..4] of int: X_INTRODUCED_52 = [9,5,25,225];
var 0..866: X_INTRODUCED_0;
var 0..866: X_INTRODUCED_1;
var 0..866: X_INTRODUCED_2;
var 0..866: X_INTRODUCED_3;
var 0..866: X_INTRODUCED_4;
var 0..866: X_INTRODUCED_5;
var 0..866: X_INTRODUCED_6;
var 0..866: X_INTRODUCED_7;
var 0..866: X_INTRODUCED_8;
var 0..866: X_INTRODUCED_9;
var 0..866: X_INTRODUCED_10;
var 0..866: X_INTRODUCED_11;
var 0..866: X_INTRODUCED_12;
var 0..866: X_INTRODUCED_13;
var 0..866: X_INTRODUCED_14;
var 0..867: objective:: output_var;
var bool: X_INTRODUCED_27 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_28 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_30 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_31 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_32 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_33 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_36 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_37 ::var_is_introduced :: is_defined_var;
array [1..15] of var int: s:: output_array([1..15]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..3] of var int: X_INTRODUCED_44 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_12];
array [1..3] of var int: X_INTRODUCED_47 ::var_is_introduced  = [X_INTRODUCED_6,X_INTRODUCED_9,X_INTRODUCED_10];
array [1..5] of var int: X_INTRODUCED_50 ::var_is_introduced  = [X_INTRODUCED_4,X_INTRODUCED_7,X_INTRODUCED_11,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..4] of var int: X_INTRODUCED_53 ::var_is_introduced  = [X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_5,X_INTRODUCED_8];
array [1..16] of var int: X_INTRODUCED_57 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,objective];
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_10],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_12],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_3],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_8],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_9],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_4],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_7],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_5],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_6],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_11],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_8],-50);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_14],-50);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_10],-25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_12],-25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_13],-25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_12],-25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_10],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_11],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_13],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_13,X_INTRODUCED_14],-6);
constraint array_bool_or([X_INTRODUCED_27,X_INTRODUCED_28],true);
constraint array_bool_or([X_INTRODUCED_30,X_INTRODUCED_31],true);
constraint array_bool_or([X_INTRODUCED_32,X_INTRODUCED_33],true);
constraint array_bool_or([X_INTRODUCED_36,X_INTRODUCED_37],true);
constraint jacop_cumulative(X_INTRODUCED_44,X_INTRODUCED_43,X_INTRODUCED_42,10);
constraint jacop_cumulative(X_INTRODUCED_47,X_INTRODUCED_46,X_INTRODUCED_45,9);
constraint jacop_cumulative(X_INTRODUCED_50,X_INTRODUCED_49,X_INTRODUCED_48,14);
constraint jacop_cumulative(X_INTRODUCED_53,X_INTRODUCED_52,X_INTRODUCED_51,14);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,objective],-225);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,objective],-225);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,objective],-150);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_11,objective],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_12,objective],-6);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_14,objective],-5);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_0],-1,X_INTRODUCED_27):: defines_var(X_INTRODUCED_27);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_1],-9,X_INTRODUCED_28):: defines_var(X_INTRODUCED_28);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_12,X_INTRODUCED_1],-6,X_INTRODUCED_30):: defines_var(X_INTRODUCED_30);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_12],-1,X_INTRODUCED_31):: defines_var(X_INTRODUCED_31);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_13,X_INTRODUCED_4],-6,X_INTRODUCED_32):: defines_var(X_INTRODUCED_32);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_13],-50,X_INTRODUCED_33):: defines_var(X_INTRODUCED_33);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_6],-125,X_INTRODUCED_36):: defines_var(X_INTRODUCED_36);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_9],-25,X_INTRODUCED_37):: defines_var(X_INTRODUCED_37);
solve :: int_search(X_INTRODUCED_57,smallest,indomain_min,complete) minimize objective;
