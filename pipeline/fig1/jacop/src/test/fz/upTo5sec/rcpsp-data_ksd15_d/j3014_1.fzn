predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_17 = [1,-1];
array [1..15] of int: X_INTRODUCED_28 = [5,1,3,2,10,9,1,1,10,1,9,7,2,8,2];
array [1..15] of int: X_INTRODUCED_29 = [6,2,9,8,25,100,50,25,75,50,150,5,3,1,7];
array [1..15] of int: X_INTRODUCED_31 = [3,2,4,8,5,1,2,4,2,2,1,10,3,5,1];
array [1..15] of int: X_INTRODUCED_33 = [4,10,7,3,1,1,10,6,7,2,2,4,3,2,9];
array [1..15] of int: X_INTRODUCED_35 = [7,5,7,10,7,7,7,2,5,8,9,4,4,8,4];
var 0..515: X_INTRODUCED_0;
var 0..515: X_INTRODUCED_1;
var 0..515: X_INTRODUCED_2;
var 0..515: X_INTRODUCED_3;
var 0..515: X_INTRODUCED_4;
var 0..515: X_INTRODUCED_5;
var 0..515: X_INTRODUCED_6;
var 0..515: X_INTRODUCED_7;
var 0..515: X_INTRODUCED_8;
var 0..515: X_INTRODUCED_9;
var 0..515: X_INTRODUCED_10;
var 0..515: X_INTRODUCED_11;
var 0..515: X_INTRODUCED_12;
var 0..515: X_INTRODUCED_13;
var 0..515: X_INTRODUCED_14;
var 0..516: objective:: output_var;
array [1..15] of var int: s:: output_array([1..15]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..16] of var int: X_INTRODUCED_43 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,objective];
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_3],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_4],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_5],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_12],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_9],-8);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_14],-25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_6],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_7],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_10],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,X_INTRODUCED_8],-25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,X_INTRODUCED_13],-75);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_11],-50);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_11,X_INTRODUCED_13],-5);
constraint jacop_cumulative(s,X_INTRODUCED_29,X_INTRODUCED_28,20);
constraint jacop_cumulative(s,X_INTRODUCED_29,X_INTRODUCED_31,22);
constraint jacop_cumulative(s,X_INTRODUCED_29,X_INTRODUCED_33,24);
constraint jacop_cumulative(s,X_INTRODUCED_29,X_INTRODUCED_35,28);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,objective],-6);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,objective],-50);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,objective],-150);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_12,objective],-3);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_13,objective],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_14,objective],-7);
solve :: int_search(X_INTRODUCED_43,smallest,indomain_min,complete) minimize objective;
