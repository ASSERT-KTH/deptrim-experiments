predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_17 = [1,-1];
array [1..15] of int: X_INTRODUCED_26 = [10,1,3,6,3,10,7,8,8,10,1,4,9,6,7];
array [1..15] of int: X_INTRODUCED_27 = [10,3,7,2,125,150,175,25,75,100,200,4,6,1,3];
array [1..15] of int: X_INTRODUCED_29 = [7,5,3,9,4,9,2,6,7,9,7,4,4,2,9];
array [1..15] of int: X_INTRODUCED_31 = [8,2,4,4,7,3,3,10,5,10,5,5,2,10,4];
array [1..15] of int: X_INTRODUCED_33 = [10,10,10,9,5,8,10,3,10,4,6,9,7,8,7];
var 0..885: X_INTRODUCED_0;
var 0..885: X_INTRODUCED_1;
var 0..885: X_INTRODUCED_2;
var 0..885: X_INTRODUCED_3;
var 0..885: X_INTRODUCED_4;
var 0..885: X_INTRODUCED_5;
var 0..885: X_INTRODUCED_6;
var 0..885: X_INTRODUCED_7;
var 0..885: X_INTRODUCED_8;
var 0..885: X_INTRODUCED_9;
var 0..885: X_INTRODUCED_10;
var 0..885: X_INTRODUCED_11;
var 0..885: X_INTRODUCED_12;
var 0..885: X_INTRODUCED_13;
var 0..885: X_INTRODUCED_14;
var 0..886: objective:: output_var;
array [1..15] of var int: s:: output_array([1..15]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..16] of var int: X_INTRODUCED_43 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,objective];
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_6],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_10],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_3],-3);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_4],-3);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_5],-3);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_12],-7);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_9],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_7],-150);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_14],-150);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_8],-175);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,X_INTRODUCED_11],-200);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,X_INTRODUCED_13],-200);
constraint jacop_cumulative(s,X_INTRODUCED_27,X_INTRODUCED_26,32);
constraint jacop_cumulative(s,X_INTRODUCED_27,X_INTRODUCED_29,26);
constraint jacop_cumulative(s,X_INTRODUCED_27,X_INTRODUCED_31,25);
constraint jacop_cumulative(s,X_INTRODUCED_27,X_INTRODUCED_33,32);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,objective],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,objective],-25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,objective],-75);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,objective],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_11,objective],-4);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_12,objective],-6);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_13,objective],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_14,objective],-3);
solve :: int_search(X_INTRODUCED_43,smallest,indomain_min,complete) minimize objective;
