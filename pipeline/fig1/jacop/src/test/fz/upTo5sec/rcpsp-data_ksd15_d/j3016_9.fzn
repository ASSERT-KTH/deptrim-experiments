predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_17 = [1,-1];
array [1..15] of int: X_INTRODUCED_29 = [9,6,2,8,2,8,3,3,10,9,4,8,9,4,8];
array [1..15] of int: X_INTRODUCED_30 = [7,4,5,1,25,50,175,100,100,225,250,7,2,4,2];
array [1..15] of int: X_INTRODUCED_32 = [8,5,9,6,7,3,7,10,5,3,6,9,8,5,5];
array [1..15] of int: X_INTRODUCED_34 = [5,6,4,8,5,8,2,2,5,5,10,4,9,3,9];
array [1..15] of int: X_INTRODUCED_36 = [9,7,5,6,9,8,2,3,3,7,2,2,3,3,1];
var 0..956: X_INTRODUCED_0;
var 0..956: X_INTRODUCED_1;
var 0..956: X_INTRODUCED_2;
var 0..956: X_INTRODUCED_3;
var 0..956: X_INTRODUCED_4;
var 0..956: X_INTRODUCED_5;
var 0..956: X_INTRODUCED_6;
var 0..956: X_INTRODUCED_7;
var 0..956: X_INTRODUCED_8;
var 0..956: X_INTRODUCED_9;
var 0..956: X_INTRODUCED_10;
var 0..956: X_INTRODUCED_11;
var 0..956: X_INTRODUCED_12;
var 0..956: X_INTRODUCED_13;
var 0..956: X_INTRODUCED_14;
var 0..957: objective:: output_var;
array [1..15] of var int: s:: output_array([1..15]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..16] of var int: X_INTRODUCED_43 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,objective];
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_9],-7);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_8],-4);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_3],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_5],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_6],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_4],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_11],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_13],-50);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_7],-175);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,X_INTRODUCED_13],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,X_INTRODUCED_10],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,X_INTRODUCED_12],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_10],-225);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,X_INTRODUCED_14],-250);
constraint jacop_cumulative(s,X_INTRODUCED_30,X_INTRODUCED_29,42);
constraint jacop_cumulative(s,X_INTRODUCED_30,X_INTRODUCED_32,48);
constraint jacop_cumulative(s,X_INTRODUCED_30,X_INTRODUCED_34,37);
constraint jacop_cumulative(s,X_INTRODUCED_30,X_INTRODUCED_36,37);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,objective],-25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_11,objective],-7);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_12,objective],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_13,objective],-4);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_14,objective],-2);
solve :: int_search(X_INTRODUCED_43,smallest,indomain_min,complete) minimize objective;
