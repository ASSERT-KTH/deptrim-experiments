predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_17 = [1,-1];
array [1..12] of int: X_INTRODUCED_27 = [10,1,3,9,3,8,5,9,10,2,3,6];
array [1..12] of int: X_INTRODUCED_28 = [2,2,8,1,150,25,75,100,250,1,8,6];
array [1..12] of int: X_INTRODUCED_30 = [6,2,6,8,2,8,1,4,3,1,9,5];
array [1..12] of int: X_INTRODUCED_31 = [2,2,8,1,250,25,100,250,8,1,8,6];
array [1..10] of int: X_INTRODUCED_33 = [4,7,2,5,4,10,4,1,1,9];
array [1..10] of int: X_INTRODUCED_34 = [2,2,8,1,125,100,250,8,1,6];
array [1..11] of int: X_INTRODUCED_36 = [1,5,7,1,2,6,8,6,2,2,3];
array [1..11] of int: X_INTRODUCED_37 = [8,1,150,250,125,25,100,250,8,8,6];
var 0..1010: X_INTRODUCED_0;
var 0..1010: X_INTRODUCED_1;
var 0..1010: X_INTRODUCED_2;
var 0..1010: X_INTRODUCED_3;
var 0..1010: X_INTRODUCED_4;
var 0..1010: X_INTRODUCED_5;
var 0..1010: X_INTRODUCED_6;
var 0..1010: X_INTRODUCED_7;
var 0..1010: X_INTRODUCED_8;
var 0..1010: X_INTRODUCED_9;
var 0..1010: X_INTRODUCED_10;
var 0..1010: X_INTRODUCED_11;
var 0..1010: X_INTRODUCED_12;
var 0..1010: X_INTRODUCED_13;
var 0..1010: X_INTRODUCED_14;
var 0..1011: objective:: output_var;
array [1..15] of var int: s:: output_array([1..15]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..12] of var int: X_INTRODUCED_29 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..12] of var int: X_INTRODUCED_32 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_5,X_INTRODUCED_7,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..10] of var int: X_INTRODUCED_35 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_6,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_14];
array [1..11] of var int: X_INTRODUCED_38 ::var_is_introduced  = [X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..16] of var int: X_INTRODUCED_46 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,objective];
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_7],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_9],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_10],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_5],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_8],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_3],-8);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_8],-8);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_4],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_6],-250);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_7],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_12],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,X_INTRODUCED_11],-75);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,X_INTRODUCED_14],-75);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_11,X_INTRODUCED_13],-8);
constraint jacop_cumulative(X_INTRODUCED_29,X_INTRODUCED_28,X_INTRODUCED_27,24);
constraint jacop_cumulative(X_INTRODUCED_32,X_INTRODUCED_31,X_INTRODUCED_30,25);
constraint jacop_cumulative(X_INTRODUCED_35,X_INTRODUCED_34,X_INTRODUCED_33,28);
constraint jacop_cumulative(X_INTRODUCED_38,X_INTRODUCED_37,X_INTRODUCED_36,23);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,objective],-150);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,objective],-25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,objective],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,objective],-250);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_12,objective],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_13,objective],-8);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_14,objective],-6);
solve :: int_search(X_INTRODUCED_46,smallest,indomain_min,complete) minimize objective;
