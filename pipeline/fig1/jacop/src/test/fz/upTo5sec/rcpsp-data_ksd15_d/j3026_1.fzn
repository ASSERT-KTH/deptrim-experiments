predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_17 = [1,-1];
array [1..13] of int: X_INTRODUCED_60 = [5,6,3,2,6,1,10,7,9,8,9,9,2];
array [1..13] of int: X_INTRODUCED_61 = [3,9,2,250,100,150,75,200,150,2,8,3,9];
array [1..11] of int: X_INTRODUCED_63 = [7,7,5,8,1,4,8,3,4,10,10];
array [1..11] of int: X_INTRODUCED_64 = [3,9,2,100,150,200,150,2,8,3,9];
array [1..10] of int: X_INTRODUCED_66 = [2,10,4,5,1,5,7,5,9,1];
array [1..10] of int: X_INTRODUCED_67 = [10,3,9,250,100,150,75,150,2,8];
array [1..12] of int: X_INTRODUCED_69 = [2,7,1,4,9,1,8,9,6,2,7,4];
array [1..12] of int: X_INTRODUCED_70 = [10,3,2,250,100,150,75,200,2,8,3,9];
var 0..1120: X_INTRODUCED_0;
var 0..1120: X_INTRODUCED_1;
var 0..1120: X_INTRODUCED_2;
var 0..1120: X_INTRODUCED_3;
var 0..1120: X_INTRODUCED_4;
var 0..1120: X_INTRODUCED_5;
var 0..1120: X_INTRODUCED_6;
var 0..1120: X_INTRODUCED_7;
var 0..1120: X_INTRODUCED_8;
var 0..1120: X_INTRODUCED_9;
var 0..1120: X_INTRODUCED_10;
var 0..1120: X_INTRODUCED_11;
var 0..1120: X_INTRODUCED_12;
var 0..1120: X_INTRODUCED_13;
var 0..1120: X_INTRODUCED_14;
var 0..1121: objective:: output_var;
var bool: X_INTRODUCED_30 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_31 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_33 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_34 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_37 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_38 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_39 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_40 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_41 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_42 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_43 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_44 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_45 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_46 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_47 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_48 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_51 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_52 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_53 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_54 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_55 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_56 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_57 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_58 ::var_is_introduced :: is_defined_var;
array [1..15] of var int: s:: output_array([1..15]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..13] of var int: X_INTRODUCED_62 ::var_is_introduced  = [X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..11] of var int: X_INTRODUCED_65 ::var_is_introduced  = [X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..10] of var int: X_INTRODUCED_68 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_9,X_INTRODUCED_11,X_INTRODUCED_12];
array [1..12] of var int: X_INTRODUCED_71 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..16] of var int: X_INTRODUCED_73 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,objective];
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_5],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_6],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_13],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_7],-3);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_14],-3);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_3],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_4],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_5],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_8],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_9],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_12],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_11],-150);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,X_INTRODUCED_12],-75);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,X_INTRODUCED_14],-200);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_10],-150);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,X_INTRODUCED_11],-150);
constraint array_bool_or([X_INTRODUCED_30,X_INTRODUCED_31],true);
constraint array_bool_or([X_INTRODUCED_33,X_INTRODUCED_34],true);
constraint array_bool_or([X_INTRODUCED_37,X_INTRODUCED_38],true);
constraint array_bool_or([X_INTRODUCED_39,X_INTRODUCED_40],true);
constraint array_bool_or([X_INTRODUCED_41,X_INTRODUCED_42],true);
constraint array_bool_or([X_INTRODUCED_43,X_INTRODUCED_44],true);
constraint array_bool_or([X_INTRODUCED_45,X_INTRODUCED_46],true);
constraint array_bool_or([X_INTRODUCED_47,X_INTRODUCED_48],true);
constraint array_bool_or([X_INTRODUCED_51,X_INTRODUCED_52],true);
constraint array_bool_or([X_INTRODUCED_53,X_INTRODUCED_54],true);
constraint array_bool_or([X_INTRODUCED_55,X_INTRODUCED_56],true);
constraint array_bool_or([X_INTRODUCED_57,X_INTRODUCED_58],true);
constraint jacop_cumulative(X_INTRODUCED_62,X_INTRODUCED_61,X_INTRODUCED_60,18);
constraint jacop_cumulative(X_INTRODUCED_65,X_INTRODUCED_64,X_INTRODUCED_63,16);
constraint jacop_cumulative(X_INTRODUCED_68,X_INTRODUCED_67,X_INTRODUCED_66,15);
constraint jacop_cumulative(X_INTRODUCED_71,X_INTRODUCED_70,X_INTRODUCED_69,18);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,objective],-250);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_11,objective],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_12,objective],-8);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_13,objective],-3);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_14,objective],-9);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_11,X_INTRODUCED_1],-2,X_INTRODUCED_30):: defines_var(X_INTRODUCED_30);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_11],-3,X_INTRODUCED_31):: defines_var(X_INTRODUCED_31);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_13,X_INTRODUCED_1],-3,X_INTRODUCED_33):: defines_var(X_INTRODUCED_33);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_13],-3,X_INTRODUCED_34):: defines_var(X_INTRODUCED_34);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_13,X_INTRODUCED_2],-3,X_INTRODUCED_37):: defines_var(X_INTRODUCED_37);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_13],-9,X_INTRODUCED_38):: defines_var(X_INTRODUCED_38);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_14,X_INTRODUCED_2],-9,X_INTRODUCED_39):: defines_var(X_INTRODUCED_39);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_14],-9,X_INTRODUCED_40):: defines_var(X_INTRODUCED_40);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_13,X_INTRODUCED_5],-3,X_INTRODUCED_41):: defines_var(X_INTRODUCED_41);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_13],-100,X_INTRODUCED_42):: defines_var(X_INTRODUCED_42);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_14,X_INTRODUCED_5],-9,X_INTRODUCED_43):: defines_var(X_INTRODUCED_43);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_14],-100,X_INTRODUCED_44):: defines_var(X_INTRODUCED_44);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_10,X_INTRODUCED_7],-150,X_INTRODUCED_45):: defines_var(X_INTRODUCED_45);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_7,X_INTRODUCED_10],-75,X_INTRODUCED_46):: defines_var(X_INTRODUCED_46);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_11,X_INTRODUCED_7],-2,X_INTRODUCED_47):: defines_var(X_INTRODUCED_47);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_7,X_INTRODUCED_11],-75,X_INTRODUCED_48):: defines_var(X_INTRODUCED_48);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_13,X_INTRODUCED_7],-3,X_INTRODUCED_51):: defines_var(X_INTRODUCED_51);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_7,X_INTRODUCED_13],-75,X_INTRODUCED_52):: defines_var(X_INTRODUCED_52);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_13,X_INTRODUCED_9],-3,X_INTRODUCED_53):: defines_var(X_INTRODUCED_53);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_13],-150,X_INTRODUCED_54):: defines_var(X_INTRODUCED_54);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_14,X_INTRODUCED_9],-9,X_INTRODUCED_55):: defines_var(X_INTRODUCED_55);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_14],-150,X_INTRODUCED_56):: defines_var(X_INTRODUCED_56);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_14,X_INTRODUCED_13],-9,X_INTRODUCED_57):: defines_var(X_INTRODUCED_57);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_13,X_INTRODUCED_14],-3,X_INTRODUCED_58):: defines_var(X_INTRODUCED_58);
solve :: int_search(X_INTRODUCED_73,smallest,indomain_min,complete) minimize objective;
