predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_17 = [1,-1];
array [1..15] of int: X_INTRODUCED_27 = [9,1,10,3,1,5,9,1,6,3,3,5,1,3,9];
array [1..15] of int: X_INTRODUCED_28 = [5,5,9,9,50,150,100,25,50,150,250,2,10,9,2];
array [1..15] of int: X_INTRODUCED_30 = [5,3,1,8,10,1,8,1,1,10,9,5,1,9,7];
array [1..15] of int: X_INTRODUCED_32 = [5,10,7,3,2,2,2,10,9,4,8,5,2,7,3];
array [1..15] of int: X_INTRODUCED_34 = [4,4,5,2,5,3,5,6,6,9,7,4,7,2,9];
var 0..825: X_INTRODUCED_0;
var 0..825: X_INTRODUCED_1;
var 0..825: X_INTRODUCED_2;
var 0..825: X_INTRODUCED_3;
var 0..825: X_INTRODUCED_4;
var 0..825: X_INTRODUCED_5;
var 0..825: X_INTRODUCED_6;
var 0..825: X_INTRODUCED_7;
var 0..825: X_INTRODUCED_8;
var 0..825: X_INTRODUCED_9;
var 0..825: X_INTRODUCED_10;
var 0..825: X_INTRODUCED_11;
var 0..825: X_INTRODUCED_12;
var 0..825: X_INTRODUCED_13;
var 0..825: X_INTRODUCED_14;
var 0..826: objective:: output_var;
array [1..15] of var int: s:: output_array([1..15]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..16] of var int: X_INTRODUCED_43 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,objective];
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_7],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_4],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_5],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_8],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_3],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_13],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_6],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_11],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_14],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_11],-50);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_9],-150);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_10],-150);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,X_INTRODUCED_13],-50);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,X_INTRODUCED_11],-250);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,X_INTRODUCED_12],-250);
constraint jacop_cumulative(s,X_INTRODUCED_28,X_INTRODUCED_27,19);
constraint jacop_cumulative(s,X_INTRODUCED_28,X_INTRODUCED_30,32);
constraint jacop_cumulative(s,X_INTRODUCED_28,X_INTRODUCED_32,29);
constraint jacop_cumulative(s,X_INTRODUCED_28,X_INTRODUCED_34,24);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,objective],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,objective],-25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,objective],-150);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_11,objective],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_12,objective],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_13,objective],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_14,objective],-2);
solve :: int_search(X_INTRODUCED_43,smallest,indomain_min,complete) minimize objective;
