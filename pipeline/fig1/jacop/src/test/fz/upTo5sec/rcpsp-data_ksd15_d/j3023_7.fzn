predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_17 = [1,-1];
array [1..6] of int: X_INTRODUCED_68 = [9,10,3,8,4,6];
array [1..6] of int: X_INTRODUCED_69 = [2,10,2,25,3,3];
array [1..5] of int: X_INTRODUCED_71 = [4,4,4,4,7];
array [1..5] of int: X_INTRODUCED_72 = [2,100,25,150,3];
array [1..10] of int: X_INTRODUCED_74 = [9,8,7,9,8,3,4,3,9,9];
array [1..10] of int: X_INTRODUCED_75 = [2,25,100,25,250,250,150,1,3,7];
array [1..9] of int: X_INTRODUCED_77 = [4,7,1,5,9,1,7,8,4];
array [1..9] of int: X_INTRODUCED_78 = [10,4,25,100,250,150,1,3,3];
var 0..981: X_INTRODUCED_0;
var 0..981: X_INTRODUCED_1;
var 0..981: X_INTRODUCED_2;
var 0..981: X_INTRODUCED_3;
var 0..981: X_INTRODUCED_4;
var 0..981: X_INTRODUCED_5;
var 0..981: X_INTRODUCED_6;
var 0..981: X_INTRODUCED_7;
var 0..981: X_INTRODUCED_8;
var 0..981: X_INTRODUCED_9;
var 0..981: X_INTRODUCED_10;
var 0..981: X_INTRODUCED_11;
var 0..981: X_INTRODUCED_12;
var 0..981: X_INTRODUCED_13;
var 0..981: X_INTRODUCED_14;
var 0..982: objective:: output_var;
var bool: X_INTRODUCED_28 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_29 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_30 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_31 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_33 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_34 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_36 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_37 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_39 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_40 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_41 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_42 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_44 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_45 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_46 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_47 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_48 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_49 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_50 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_51 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_52 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_53 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_54 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_55 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_56 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_57 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_59 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_60 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_61 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_62 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_63 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_64 ::var_is_introduced :: is_defined_var;
array [1..15] of var int: s:: output_array([1..15]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..6] of var int: X_INTRODUCED_70 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_12,X_INTRODUCED_13];
array [1..5] of var int: X_INTRODUCED_73 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_9,X_INTRODUCED_12];
array [1..10] of var int: X_INTRODUCED_76 ::var_is_introduced  = [X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..9] of var int: X_INTRODUCED_79 ::var_is_introduced  = [X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_7,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13];
array [1..16] of var int: X_INTRODUCED_83 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,objective];
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_3],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_4],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_6],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_10],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_5],-25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_7],-25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_8],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_9],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_11],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_13],-25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,X_INTRODUCED_9],-250);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,X_INTRODUCED_10],-250);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_12],-150);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_14],-150);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_13,X_INTRODUCED_14],-3);
constraint array_bool_or([X_INTRODUCED_28,X_INTRODUCED_29],true);
constraint array_bool_or([X_INTRODUCED_30,X_INTRODUCED_31],true);
constraint array_bool_or([X_INTRODUCED_33,X_INTRODUCED_34],true);
constraint array_bool_or([X_INTRODUCED_36,X_INTRODUCED_37],true);
constraint array_bool_or([X_INTRODUCED_39,X_INTRODUCED_40],true);
constraint array_bool_or([X_INTRODUCED_41,X_INTRODUCED_42],true);
constraint array_bool_or([X_INTRODUCED_44,X_INTRODUCED_45],true);
constraint array_bool_or([X_INTRODUCED_46,X_INTRODUCED_47],true);
constraint array_bool_or([X_INTRODUCED_48,X_INTRODUCED_49],true);
constraint array_bool_or([X_INTRODUCED_50,X_INTRODUCED_51],true);
constraint array_bool_or([X_INTRODUCED_52,X_INTRODUCED_53],true);
constraint array_bool_or([X_INTRODUCED_54,X_INTRODUCED_55],true);
constraint array_bool_or([X_INTRODUCED_56,X_INTRODUCED_57],true);
constraint array_bool_or([X_INTRODUCED_59,X_INTRODUCED_60],true);
constraint array_bool_or([X_INTRODUCED_61,X_INTRODUCED_62],true);
constraint array_bool_or([X_INTRODUCED_63,X_INTRODUCED_64],true);
constraint jacop_cumulative(X_INTRODUCED_70,X_INTRODUCED_69,X_INTRODUCED_68,16);
constraint jacop_cumulative(X_INTRODUCED_73,X_INTRODUCED_72,X_INTRODUCED_71,10);
constraint jacop_cumulative(X_INTRODUCED_76,X_INTRODUCED_75,X_INTRODUCED_74,16);
constraint jacop_cumulative(X_INTRODUCED_79,X_INTRODUCED_78,X_INTRODUCED_77,21);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,objective],-4);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,objective],-150);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_11,objective],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_12,objective],-3);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_14,objective],-7);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_0],-10,X_INTRODUCED_28):: defines_var(X_INTRODUCED_28);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_1],-2,X_INTRODUCED_29):: defines_var(X_INTRODUCED_29);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_0],-25,X_INTRODUCED_30):: defines_var(X_INTRODUCED_30);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_4],-2,X_INTRODUCED_31):: defines_var(X_INTRODUCED_31);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_12,X_INTRODUCED_0],-3,X_INTRODUCED_33):: defines_var(X_INTRODUCED_33);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_12],-2,X_INTRODUCED_34):: defines_var(X_INTRODUCED_34);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_3],-25,X_INTRODUCED_36):: defines_var(X_INTRODUCED_36);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_4],-2,X_INTRODUCED_37):: defines_var(X_INTRODUCED_37);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_7,X_INTRODUCED_3],-250,X_INTRODUCED_39):: defines_var(X_INTRODUCED_39);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_7],-2,X_INTRODUCED_40):: defines_var(X_INTRODUCED_40);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_13,X_INTRODUCED_3],-3,X_INTRODUCED_41):: defines_var(X_INTRODUCED_41);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_13],-2,X_INTRODUCED_42):: defines_var(X_INTRODUCED_42);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_14,X_INTRODUCED_3],-7,X_INTRODUCED_44):: defines_var(X_INTRODUCED_44);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_14],-2,X_INTRODUCED_45):: defines_var(X_INTRODUCED_45);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_4],-25,X_INTRODUCED_46):: defines_var(X_INTRODUCED_46);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_6],-25,X_INTRODUCED_47):: defines_var(X_INTRODUCED_47);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_13,X_INTRODUCED_4],-3,X_INTRODUCED_48):: defines_var(X_INTRODUCED_48);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_13],-25,X_INTRODUCED_49):: defines_var(X_INTRODUCED_49);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_14,X_INTRODUCED_4],-7,X_INTRODUCED_50):: defines_var(X_INTRODUCED_50);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_14],-25,X_INTRODUCED_51):: defines_var(X_INTRODUCED_51);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_12,X_INTRODUCED_5],-3,X_INTRODUCED_52):: defines_var(X_INTRODUCED_52);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_12],-100,X_INTRODUCED_53):: defines_var(X_INTRODUCED_53);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_7,X_INTRODUCED_6],-250,X_INTRODUCED_54):: defines_var(X_INTRODUCED_54);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_7],-25,X_INTRODUCED_55):: defines_var(X_INTRODUCED_55);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_12,X_INTRODUCED_6],-3,X_INTRODUCED_56):: defines_var(X_INTRODUCED_56);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_12],-25,X_INTRODUCED_57):: defines_var(X_INTRODUCED_57);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_14,X_INTRODUCED_6],-7,X_INTRODUCED_59):: defines_var(X_INTRODUCED_59);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_14],-25,X_INTRODUCED_60):: defines_var(X_INTRODUCED_60);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_13,X_INTRODUCED_7],-3,X_INTRODUCED_61):: defines_var(X_INTRODUCED_61);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_7,X_INTRODUCED_13],-250,X_INTRODUCED_62):: defines_var(X_INTRODUCED_62);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_14,X_INTRODUCED_7],-7,X_INTRODUCED_63):: defines_var(X_INTRODUCED_63);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_7,X_INTRODUCED_14],-250,X_INTRODUCED_64):: defines_var(X_INTRODUCED_64);
solve :: int_search(X_INTRODUCED_83,smallest,indomain_min,complete) minimize objective;
