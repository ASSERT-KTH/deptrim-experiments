predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_17 = [1,-1];
array [1..6] of int: X_INTRODUCED_32 = [8,4,1,6,2,1];
array [1..6] of int: X_INTRODUCED_33 = [5,125,100,150,3,9];
array [1..7] of int: X_INTRODUCED_35 = [5,4,3,1,8,4,1];
array [1..7] of int: X_INTRODUCED_36 = [6,6,200,250,200,9,7];
var 0..1202: X_INTRODUCED_0;
var 0..1202: X_INTRODUCED_1;
var 0..1202: X_INTRODUCED_2;
var 0..1202: X_INTRODUCED_3;
var 0..1202: X_INTRODUCED_4;
var 0..1202: X_INTRODUCED_5;
var 0..1202: X_INTRODUCED_6;
var 0..1202: X_INTRODUCED_7;
var 0..1202: X_INTRODUCED_8;
var 0..1202: X_INTRODUCED_9;
var 0..1202: X_INTRODUCED_10;
var 0..1202: X_INTRODUCED_11;
var 0..1202: X_INTRODUCED_12;
var 0..1202: X_INTRODUCED_13;
var 0..1202: X_INTRODUCED_14;
var 0..1203: objective:: output_var;
var bool: X_INTRODUCED_29 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_30 ::var_is_introduced :: is_defined_var;
array [1..15] of var int: s:: output_array([1..15]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..6] of var int: X_INTRODUCED_34 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..7] of var int: X_INTRODUCED_37 ::var_is_introduced  = [X_INTRODUCED_1,X_INTRODUCED_3,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12];
array [1..16] of var int: X_INTRODUCED_43 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,objective];
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_3],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_4],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_5],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_6],-6);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_9],-8);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_14],-8);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_7],-6);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_8],-150);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_13],-150);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,X_INTRODUCED_10],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,X_INTRODUCED_11],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,X_INTRODUCED_12],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,X_INTRODUCED_9],-200);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_11,X_INTRODUCED_14],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_13,X_INTRODUCED_14],-3);
constraint array_bool_or([X_INTRODUCED_29,X_INTRODUCED_30],true);
constraint jacop_cumulative(X_INTRODUCED_34,X_INTRODUCED_33,X_INTRODUCED_32,11);
constraint jacop_cumulative(X_INTRODUCED_37,X_INTRODUCED_36,X_INTRODUCED_35,19);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,objective],-125);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,objective],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,objective],-250);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,objective],-200);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_12,objective],-7);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_14,objective],-9);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_0],-150,X_INTRODUCED_29):: defines_var(X_INTRODUCED_29);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_6],-5,X_INTRODUCED_30):: defines_var(X_INTRODUCED_30);
solve :: int_search(X_INTRODUCED_43,smallest,indomain_min,complete) minimize objective;
