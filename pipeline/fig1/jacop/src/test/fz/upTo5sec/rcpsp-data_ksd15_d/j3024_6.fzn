predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_17 = [1,-1];
array [1..8] of int: X_INTRODUCED_33 = [1,6,4,4,4,4,3,7];
array [1..8] of int: X_INTRODUCED_34 = [5,75,225,200,25,100,8,10];
array [1..11] of int: X_INTRODUCED_36 = [5,6,3,9,2,1,6,8,1,3,10];
array [1..11] of int: X_INTRODUCED_37 = [4,10,5,100,75,225,200,225,100,8,5];
array [1..5] of int: X_INTRODUCED_39 = [3,10,9,1,5];
array [1..5] of int: X_INTRODUCED_40 = [4,1,100,8,8];
array [1..8] of int: X_INTRODUCED_42 = [10,8,6,3,2,10,8,10];
array [1..8] of int: X_INTRODUCED_43 = [10,1,75,25,225,100,8,10];
var 0..1000: X_INTRODUCED_0;
var 0..1000: X_INTRODUCED_1;
var 0..1000: X_INTRODUCED_2;
var 0..1000: X_INTRODUCED_3;
var 0..1000: X_INTRODUCED_4;
var 0..1000: X_INTRODUCED_5;
var 0..1000: X_INTRODUCED_6;
var 0..1000: X_INTRODUCED_7;
var 0..1000: X_INTRODUCED_8;
var 0..1000: X_INTRODUCED_9;
var 0..1000: X_INTRODUCED_10;
var 0..1000: X_INTRODUCED_11;
var 0..1000: X_INTRODUCED_12;
var 0..1000: X_INTRODUCED_13;
var 0..1000: X_INTRODUCED_14;
var 0..1001: objective:: output_var;
var bool: X_INTRODUCED_30 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_31 ::var_is_introduced :: is_defined_var;
array [1..15] of var int: s:: output_array([1..15]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..8] of var int: X_INTRODUCED_35 ::var_is_introduced  = [X_INTRODUCED_3,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_13];
array [1..11] of var int: X_INTRODUCED_38 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_14];
array [1..5] of var int: X_INTRODUCED_41 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_2,X_INTRODUCED_4,X_INTRODUCED_11,X_INTRODUCED_12];
array [1..8] of var int: X_INTRODUCED_44 ::var_is_introduced  = [X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_5,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_12,X_INTRODUCED_13];
array [1..16] of var int: X_INTRODUCED_49 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,objective];
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_7],-4);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_13],-4);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_3],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_4],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_10],-1);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_6],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_12],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_5],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_8],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_7],-75);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_8],-225);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_9],-225);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_11],-225);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,X_INTRODUCED_12],-200);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,X_INTRODUCED_11],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_13,X_INTRODUCED_14],-10);
constraint array_bool_or([X_INTRODUCED_30,X_INTRODUCED_31],true);
constraint jacop_cumulative(X_INTRODUCED_35,X_INTRODUCED_34,X_INTRODUCED_33,22);
constraint jacop_cumulative(X_INTRODUCED_38,X_INTRODUCED_37,X_INTRODUCED_36,32);
constraint jacop_cumulative(X_INTRODUCED_41,X_INTRODUCED_40,X_INTRODUCED_39,14);
constraint jacop_cumulative(X_INTRODUCED_44,X_INTRODUCED_43,X_INTRODUCED_42,30);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,objective],-25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,objective],-225);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_11,objective],-8);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_12,objective],-8);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_14,objective],-5);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_12,X_INTRODUCED_2],-8,X_INTRODUCED_30):: defines_var(X_INTRODUCED_30);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_12],-1,X_INTRODUCED_31):: defines_var(X_INTRODUCED_31);
solve :: int_search(X_INTRODUCED_49,smallest,indomain_min,complete) minimize objective;
