predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_17 = [1,-1];
array [1..11] of int: X_INTRODUCED_29 = [10,10,2,2,2,8,2,8,3,4,7];
array [1..11] of int: X_INTRODUCED_30 = [2,2,6,25,50,225,150,150,7,7,10];
array [1..13] of int: X_INTRODUCED_32 = [9,7,1,9,5,4,6,5,10,10,3,4,3];
array [1..13] of int: X_INTRODUCED_33 = [2,2,6,25,50,225,25,150,250,150,5,7,10];
array [1..12] of int: X_INTRODUCED_35 = [2,8,10,8,6,10,10,6,10,6,2,9];
array [1..12] of int: X_INTRODUCED_36 = [2,2,10,6,50,225,25,150,7,5,7,10];
array [1..9] of int: X_INTRODUCED_38 = [5,3,3,9,9,6,4,8,10];
array [1..9] of int: X_INTRODUCED_39 = [2,2,25,225,25,250,150,5,10];
var 0..923: X_INTRODUCED_0;
var 0..923: X_INTRODUCED_1;
var 0..923: X_INTRODUCED_2;
var 0..923: X_INTRODUCED_3;
var 0..923: X_INTRODUCED_4;
var 0..923: X_INTRODUCED_5;
var 0..923: X_INTRODUCED_6;
var 0..923: X_INTRODUCED_7;
var 0..923: X_INTRODUCED_8;
var 0..923: X_INTRODUCED_9;
var 0..923: X_INTRODUCED_10;
var 0..923: X_INTRODUCED_11;
var 0..923: X_INTRODUCED_12;
var 0..923: X_INTRODUCED_13;
var 0..923: X_INTRODUCED_14;
var 0..924: objective:: output_var;
array [1..15] of var int: s:: output_array([1..15]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..11] of var int: X_INTRODUCED_31 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_8,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..13] of var int: X_INTRODUCED_34 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..12] of var int: X_INTRODUCED_37 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..9] of var int: X_INTRODUCED_40 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_4,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_12,X_INTRODUCED_14];
array [1..16] of var int: X_INTRODUCED_46 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,objective];
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_3],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_5],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_6],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_3],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_6],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_14],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_11],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_13],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_4],-6);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_10],-6);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_7],-50);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_14],-50);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_7],-225);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_8],-225);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,X_INTRODUCED_9],-25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,X_INTRODUCED_11],-25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,X_INTRODUCED_13],-25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,X_INTRODUCED_11],-150);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_12],-250);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,X_INTRODUCED_13],-150);
constraint jacop_cumulative(X_INTRODUCED_31,X_INTRODUCED_30,X_INTRODUCED_29,25);
constraint jacop_cumulative(X_INTRODUCED_34,X_INTRODUCED_33,X_INTRODUCED_32,28);
constraint jacop_cumulative(X_INTRODUCED_37,X_INTRODUCED_36,X_INTRODUCED_35,37);
constraint jacop_cumulative(X_INTRODUCED_40,X_INTRODUCED_39,X_INTRODUCED_38,26);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,objective],-25);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_11,objective],-7);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_12,objective],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_13,objective],-7);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_14,objective],-10);
solve :: int_search(X_INTRODUCED_46,smallest,indomain_min,complete) minimize objective;
