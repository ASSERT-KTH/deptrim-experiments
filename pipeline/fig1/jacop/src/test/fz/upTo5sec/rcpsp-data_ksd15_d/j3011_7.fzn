predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_17 = [1,-1];
array [1..8] of int: X_INTRODUCED_28 = [6,2,10,3,7,4,7,1];
array [1..8] of int: X_INTRODUCED_29 = [2,7,50,225,150,225,4,5];
array [1..9] of int: X_INTRODUCED_31 = [6,8,5,5,3,9,10,4,4];
array [1..9] of int: X_INTRODUCED_32 = [10,5,50,225,150,75,225,5,6];
array [1..14] of int: X_INTRODUCED_34 = [4,6,9,7,5,3,4,8,10,1,1,6,7,2];
array [1..14] of int: X_INTRODUCED_35 = [10,2,5,7,50,175,225,150,75,225,225,4,10,6];
array [1..12] of int: X_INTRODUCED_37 = [5,3,10,3,8,1,10,7,1,5,2,6];
array [1..12] of int: X_INTRODUCED_38 = [5,7,50,175,225,75,225,225,4,10,5,6];
var 0..1173: X_INTRODUCED_0;
var 0..1173: X_INTRODUCED_1;
var 0..1173: X_INTRODUCED_2;
var 0..1173: X_INTRODUCED_3;
var 0..1173: X_INTRODUCED_4;
var 0..1173: X_INTRODUCED_5;
var 0..1173: X_INTRODUCED_6;
var 0..1173: X_INTRODUCED_7;
var 0..1173: X_INTRODUCED_8;
var 0..1173: X_INTRODUCED_9;
var 0..1173: X_INTRODUCED_10;
var 0..1173: X_INTRODUCED_11;
var 0..1173: X_INTRODUCED_12;
var 0..1173: X_INTRODUCED_13;
var 0..1173: X_INTRODUCED_14;
var 0..1174: objective:: output_var;
array [1..15] of var int: s:: output_array([1..15]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..8] of var int: X_INTRODUCED_30 ::var_is_introduced  = [X_INTRODUCED_1,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_13];
array [1..9] of var int: X_INTRODUCED_33 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_2,X_INTRODUCED_4,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..14] of var int: X_INTRODUCED_36 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_14];
array [1..12] of var int: X_INTRODUCED_39 ::var_is_introduced  = [X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..16] of var int: X_INTRODUCED_46 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,objective];
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_3],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_4],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_5],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_8],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_13],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_9],-7);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_6],-50);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_10],-50);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_11],-175);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_12],-175);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_7],-225);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,X_INTRODUCED_13],-225);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_11,X_INTRODUCED_14],-4);
constraint jacop_cumulative(X_INTRODUCED_30,X_INTRODUCED_29,X_INTRODUCED_28,25);
constraint jacop_cumulative(X_INTRODUCED_33,X_INTRODUCED_32,X_INTRODUCED_31,29);
constraint jacop_cumulative(X_INTRODUCED_36,X_INTRODUCED_35,X_INTRODUCED_34,37);
constraint jacop_cumulative(X_INTRODUCED_39,X_INTRODUCED_38,X_INTRODUCED_37,39);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,objective],-150);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,objective],-75);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,objective],-225);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_12,objective],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_13,objective],-5);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_14,objective],-6);
solve :: int_search(X_INTRODUCED_46,smallest,indomain_min,complete) minimize objective;
