array [1..4] of int: X_INTRODUCED_3 = [10,1,-10,-1];
array [1..2] of int: X_INTRODUCED_10 = [1,-1];
var 1..9: A:: output_var;
var 1..9: B:: output_var;
var 1..9: C:: output_var;
var 1..9: D:: output_var;
var 1..9: E:: output_var;
var 1..9: F:: output_var;
var 1..9: G:: output_var;
var 1..9: H:: output_var;
var 1..9: I:: output_var;
var 7448..7448: s:: is_defined_var:: output_var;
var 11..99: X_INTRODUCED_1 ::var_is_introduced :: is_defined_var;
var 11..99: X_INTRODUCED_2 ::var_is_introduced :: is_defined_var;
var 111..999: X_INTRODUCED_6 ::var_is_introduced :: is_defined_var;
var 11..99: X_INTRODUCED_7 ::var_is_introduced :: is_defined_var;
var 7448..7448: X_INTRODUCED_8 ::var_is_introduced :: is_defined_var;
array [1..9] of var int: x = [A,B,C,D,E,F,G,H,I];
constraint int_lin_le(X_INTRODUCED_3,[F,G,H,I],0);
constraint int_lin_ne(X_INTRODUCED_10,[A,B],0);
constraint int_lin_ne(X_INTRODUCED_10,[A,C],0);
constraint int_lin_ne(X_INTRODUCED_10,[A,D],0);
constraint int_lin_ne(X_INTRODUCED_10,[A,E],0);
constraint int_lin_ne(X_INTRODUCED_10,[A,F],0);
constraint int_lin_ne(X_INTRODUCED_10,[A,G],0);
constraint int_lin_ne(X_INTRODUCED_10,[A,H],0);
constraint int_lin_ne(X_INTRODUCED_10,[A,I],0);
constraint int_lin_ne(X_INTRODUCED_10,[B,C],0);
constraint int_lin_ne(X_INTRODUCED_10,[B,D],0);
constraint int_lin_ne(X_INTRODUCED_10,[B,E],0);
constraint int_lin_ne(X_INTRODUCED_10,[B,F],0);
constraint int_lin_ne(X_INTRODUCED_10,[B,G],0);
constraint int_lin_ne(X_INTRODUCED_10,[B,H],0);
constraint int_lin_ne(X_INTRODUCED_10,[B,I],0);
constraint int_lin_ne(X_INTRODUCED_10,[C,D],0);
constraint int_lin_ne(X_INTRODUCED_10,[C,E],0);
constraint int_lin_ne(X_INTRODUCED_10,[C,F],0);
constraint int_lin_ne(X_INTRODUCED_10,[C,G],0);
constraint int_lin_ne(X_INTRODUCED_10,[C,H],0);
constraint int_lin_ne(X_INTRODUCED_10,[C,I],0);
constraint int_lin_ne(X_INTRODUCED_10,[D,E],0);
constraint int_lin_ne(X_INTRODUCED_10,[D,F],0);
constraint int_lin_ne(X_INTRODUCED_10,[D,G],0);
constraint int_lin_ne(X_INTRODUCED_10,[D,H],0);
constraint int_lin_ne(X_INTRODUCED_10,[D,I],0);
constraint int_lin_ne(X_INTRODUCED_10,[E,F],0);
constraint int_lin_ne(X_INTRODUCED_10,[E,G],0);
constraint int_lin_ne(X_INTRODUCED_10,[E,H],0);
constraint int_lin_ne(X_INTRODUCED_10,[E,I],0);
constraint int_lin_ne(X_INTRODUCED_10,[F,G],0);
constraint int_lin_ne(X_INTRODUCED_10,[F,H],0);
constraint int_lin_ne(X_INTRODUCED_10,[F,I],0);
constraint int_lin_ne(X_INTRODUCED_10,[G,H],0);
constraint int_lin_ne(X_INTRODUCED_10,[G,I],0);
constraint int_lin_ne(X_INTRODUCED_10,[H,I],0);
constraint int_times(X_INTRODUCED_1,X_INTRODUCED_2,s):: defines_var(s);
constraint int_lin_eq([10,1,-1],[F,G,X_INTRODUCED_1],0):: defines_var(X_INTRODUCED_1);
constraint int_lin_eq([10,1,-1],[H,I,X_INTRODUCED_2],0):: defines_var(X_INTRODUCED_2);
constraint int_lin_eq([10,100,1,-1],[B,A,C,X_INTRODUCED_6],0):: defines_var(X_INTRODUCED_6);
constraint int_lin_eq([10,1,-1],[D,E,X_INTRODUCED_7],0):: defines_var(X_INTRODUCED_7);
constraint int_times(X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8):: defines_var(X_INTRODUCED_8);
solve :: int_search(x,first_fail,indomain_min,complete) satisfy;
