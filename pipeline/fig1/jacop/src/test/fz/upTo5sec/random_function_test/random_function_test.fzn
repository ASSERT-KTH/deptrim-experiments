array [1..2] of int: X_INTRODUCED_20 = [1,1];
var int: X_INTRODUCED_0;
var int: X_INTRODUCED_1;
var int: X_INTRODUCED_2;
var int: X_INTRODUCED_3;
var int: X_INTRODUCED_4;
var int: X_INTRODUCED_5;
var int: X_INTRODUCED_6;
var int: X_INTRODUCED_7;
var int: X_INTRODUCED_8;
var int: X_INTRODUCED_9;
var int: X_INTRODUCED_10;
var int: X_INTRODUCED_11;
var int: X_INTRODUCED_12;
var int: X_INTRODUCED_13;
var int: X_INTRODUCED_14;
var int: X_INTRODUCED_15;
var int: X_INTRODUCED_16;
var int: X_INTRODUCED_17;
var int: X_INTRODUCED_18;
var int: X_INTRODUCED_19;
array [1..20] of var int: x:: output_array([1..20]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19];
constraint int_lin_eq(X_INTRODUCED_20,[X_INTRODUCED_1,X_INTRODUCED_0],9);
constraint int_lin_eq(X_INTRODUCED_20,[X_INTRODUCED_2,X_INTRODUCED_1],16);
constraint int_lin_eq(X_INTRODUCED_20,[X_INTRODUCED_3,X_INTRODUCED_2],13);
constraint int_lin_eq(X_INTRODUCED_20,[X_INTRODUCED_4,X_INTRODUCED_3],10);
constraint int_lin_eq(X_INTRODUCED_20,[X_INTRODUCED_5,X_INTRODUCED_4],7);
constraint int_lin_eq(X_INTRODUCED_20,[X_INTRODUCED_6,X_INTRODUCED_5],7);
constraint int_lin_eq(X_INTRODUCED_20,[X_INTRODUCED_7,X_INTRODUCED_6],14);
constraint int_lin_eq(X_INTRODUCED_20,[X_INTRODUCED_8,X_INTRODUCED_7],11);
constraint int_lin_eq(X_INTRODUCED_20,[X_INTRODUCED_9,X_INTRODUCED_8],8);
constraint int_lin_eq(X_INTRODUCED_20,[X_INTRODUCED_10,X_INTRODUCED_9],5);
constraint int_lin_eq(X_INTRODUCED_20,[X_INTRODUCED_11,X_INTRODUCED_10],5);
constraint int_lin_eq(X_INTRODUCED_20,[X_INTRODUCED_12,X_INTRODUCED_11],12);
constraint int_lin_eq(X_INTRODUCED_20,[X_INTRODUCED_13,X_INTRODUCED_12],9);
constraint int_lin_eq(X_INTRODUCED_20,[X_INTRODUCED_14,X_INTRODUCED_13],6);
constraint int_lin_eq(X_INTRODUCED_20,[X_INTRODUCED_15,X_INTRODUCED_14],13);
constraint int_lin_eq(X_INTRODUCED_20,[X_INTRODUCED_16,X_INTRODUCED_15],13);
constraint int_lin_eq(X_INTRODUCED_20,[X_INTRODUCED_17,X_INTRODUCED_16],10);
constraint int_lin_eq(X_INTRODUCED_20,[X_INTRODUCED_18,X_INTRODUCED_17],7);
constraint int_lin_eq(X_INTRODUCED_20,[X_INTRODUCED_19,X_INTRODUCED_18],4);
constraint int_le(0,X_INTRODUCED_0);
constraint int_le(0,X_INTRODUCED_1);
constraint int_le(0,X_INTRODUCED_2);
constraint int_le(0,X_INTRODUCED_3);
constraint int_le(0,X_INTRODUCED_4);
constraint int_le(0,X_INTRODUCED_5);
constraint int_le(0,X_INTRODUCED_6);
constraint int_le(0,X_INTRODUCED_7);
constraint int_le(0,X_INTRODUCED_8);
constraint int_le(0,X_INTRODUCED_9);
constraint int_le(0,X_INTRODUCED_10);
constraint int_le(0,X_INTRODUCED_11);
constraint int_le(0,X_INTRODUCED_12);
constraint int_le(0,X_INTRODUCED_13);
constraint int_le(0,X_INTRODUCED_14);
constraint int_le(0,X_INTRODUCED_15);
constraint int_le(0,X_INTRODUCED_16);
constraint int_le(0,X_INTRODUCED_17);
constraint int_le(0,X_INTRODUCED_18);
solve :: int_search(x,first_fail,indomain_min,complete) satisfy;
