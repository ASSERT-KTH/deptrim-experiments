array [1..2] of int: X_INTRODUCED_2 = [-1,1];
array [1..3] of int: X_INTRODUCED_11 = [8,9,4];
var -5..5: Liz:: output_var;
var -5..5: Fi:: output_var;
var 0..5: Sara:: output_var;
var bool: X_INTRODUCED_3 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_5 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_7 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_8 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_9 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_10 ::var_is_introduced :: is_defined_var;
constraint array_bool_or([X_INTRODUCED_3,X_INTRODUCED_5],true);
constraint array_bool_or([X_INTRODUCED_7,X_INTRODUCED_8],true);
constraint array_bool_or([X_INTRODUCED_9,X_INTRODUCED_10],true);
constraint int_lin_eq(X_INTRODUCED_11,[Fi,Liz,Sara],0);
constraint int_lin_le_reif(X_INTRODUCED_2,[Fi,Sara],-3,X_INTRODUCED_3):: defines_var(X_INTRODUCED_3);
constraint int_lin_le_reif(X_INTRODUCED_2,[Sara,Fi],-3,X_INTRODUCED_5):: defines_var(X_INTRODUCED_5);
constraint int_lin_le_reif(X_INTRODUCED_2,[Sara,Liz],-3,X_INTRODUCED_7):: defines_var(X_INTRODUCED_7);
constraint int_lin_le_reif(X_INTRODUCED_2,[Liz,Sara],-3,X_INTRODUCED_8):: defines_var(X_INTRODUCED_8);
constraint int_lin_le_reif(X_INTRODUCED_2,[Fi,Liz],-3,X_INTRODUCED_9):: defines_var(X_INTRODUCED_9);
constraint int_lin_le_reif(X_INTRODUCED_2,[Liz,Fi],-3,X_INTRODUCED_10):: defines_var(X_INTRODUCED_10);
solve  satisfy;
