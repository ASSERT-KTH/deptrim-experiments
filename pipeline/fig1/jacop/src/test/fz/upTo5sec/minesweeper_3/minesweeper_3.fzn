var 0..1: X_INTRODUCED_1;
var 0..1: X_INTRODUCED_2;
var 0..1: X_INTRODUCED_3;
var 0..1: X_INTRODUCED_5;
var 0..1: X_INTRODUCED_7;
var 0..1: X_INTRODUCED_8;
var 0..1: X_INTRODUCED_10;
var 0..1: X_INTRODUCED_12;
var 0..1: X_INTRODUCED_13;
var 0..1: X_INTRODUCED_14;
var 0..1: X_INTRODUCED_16;
var 0..1: X_INTRODUCED_17;
var 0..1: X_INTRODUCED_19;
var 0..1: X_INTRODUCED_20;
var 0..1: X_INTRODUCED_22;
var 0..1: X_INTRODUCED_23;
var 0..1: X_INTRODUCED_25;
var 0..1: X_INTRODUCED_26;
var 0..1: X_INTRODUCED_27;
var 0..1: X_INTRODUCED_29;
var 0..1: X_INTRODUCED_31;
var 0..1: X_INTRODUCED_32;
var 0..1: X_INTRODUCED_34;
var 0..1: X_INTRODUCED_36;
var 0..1: X_INTRODUCED_37;
var 0..1: X_INTRODUCED_38;
var 0..1: X_INTRODUCED_40;
var 0..1: X_INTRODUCED_41;
var 0..1: X_INTRODUCED_43;
var 0..1: X_INTRODUCED_44;
var 0..1: X_INTRODUCED_46;
var 0..1: X_INTRODUCED_47;
var 0..1: X_INTRODUCED_49;
var 0..1: X_INTRODUCED_50;
var 0..1: X_INTRODUCED_51;
var 0..1: X_INTRODUCED_53;
var 0..1: X_INTRODUCED_55;
var 0..1: X_INTRODUCED_56;
var 0..1: X_INTRODUCED_58;
var 0..1: X_INTRODUCED_60;
var 0..1: X_INTRODUCED_61;
var 0..1: X_INTRODUCED_62;
array [1..64] of var int: mines:: output_array([1..8,1..8]) = [0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,0,X_INTRODUCED_5,0,X_INTRODUCED_7,X_INTRODUCED_8,0,X_INTRODUCED_10,0,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,0,X_INTRODUCED_16,X_INTRODUCED_17,0,X_INTRODUCED_19,X_INTRODUCED_20,0,X_INTRODUCED_22,X_INTRODUCED_23,0,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,0,X_INTRODUCED_29,0,X_INTRODUCED_31,X_INTRODUCED_32,0,X_INTRODUCED_34,0,X_INTRODUCED_36,X_INTRODUCED_37,X_INTRODUCED_38,0,X_INTRODUCED_40,X_INTRODUCED_41,0,X_INTRODUCED_43,X_INTRODUCED_44,0,X_INTRODUCED_46,X_INTRODUCED_47,0,X_INTRODUCED_49,X_INTRODUCED_50,X_INTRODUCED_51,0,X_INTRODUCED_53,0,X_INTRODUCED_55,X_INTRODUCED_56,0,X_INTRODUCED_58,0,X_INTRODUCED_60,X_INTRODUCED_61,X_INTRODUCED_62,0];
array [1..64] of var int: X_INTRODUCED_90 ::var_is_introduced  = [0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,0,X_INTRODUCED_5,0,X_INTRODUCED_7,X_INTRODUCED_8,0,X_INTRODUCED_10,0,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,0,X_INTRODUCED_16,X_INTRODUCED_17,0,X_INTRODUCED_19,X_INTRODUCED_20,0,X_INTRODUCED_22,X_INTRODUCED_23,0,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,0,X_INTRODUCED_29,0,X_INTRODUCED_31,X_INTRODUCED_32,0,X_INTRODUCED_34,0,X_INTRODUCED_36,X_INTRODUCED_37,X_INTRODUCED_38,0,X_INTRODUCED_40,X_INTRODUCED_41,0,X_INTRODUCED_43,X_INTRODUCED_44,0,X_INTRODUCED_46,X_INTRODUCED_47,0,X_INTRODUCED_49,X_INTRODUCED_50,X_INTRODUCED_51,0,X_INTRODUCED_53,0,X_INTRODUCED_55,X_INTRODUCED_56,0,X_INTRODUCED_58,0,X_INTRODUCED_60,X_INTRODUCED_61,X_INTRODUCED_62,0];
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_1,X_INTRODUCED_8],-2);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1],[X_INTRODUCED_3,X_INTRODUCED_5,X_INTRODUCED_12,X_INTRODUCED_13],-3);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1],[X_INTRODUCED_5,X_INTRODUCED_7,X_INTRODUCED_13,X_INTRODUCED_14],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1],[X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_8,X_INTRODUCED_10,X_INTRODUCED_16,X_INTRODUCED_17],-5);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1],[X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_10,X_INTRODUCED_12,X_INTRODUCED_19,X_INTRODUCED_20],-4);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1],[X_INTRODUCED_7,X_INTRODUCED_14,X_INTRODUCED_22,X_INTRODUCED_23],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1],[X_INTRODUCED_10,X_INTRODUCED_17,X_INTRODUCED_19,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27],-5);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1],[X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_20,X_INTRODUCED_22,X_INTRODUCED_29],-4);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1],[X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_25,X_INTRODUCED_32],-2);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1],[X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_27,X_INTRODUCED_29,X_INTRODUCED_36,X_INTRODUCED_37],-4);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1],[X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_29,X_INTRODUCED_31,X_INTRODUCED_37,X_INTRODUCED_38],-5);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1],[X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_32,X_INTRODUCED_34,X_INTRODUCED_40,X_INTRODUCED_41],-2);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1],[X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_34,X_INTRODUCED_36,X_INTRODUCED_43,X_INTRODUCED_44],-4);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1],[X_INTRODUCED_31,X_INTRODUCED_38,X_INTRODUCED_46,X_INTRODUCED_47],-2);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1],[X_INTRODUCED_34,X_INTRODUCED_41,X_INTRODUCED_43,X_INTRODUCED_49,X_INTRODUCED_50,X_INTRODUCED_51],-5);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1],[X_INTRODUCED_36,X_INTRODUCED_37,X_INTRODUCED_38,X_INTRODUCED_44,X_INTRODUCED_46,X_INTRODUCED_53],-4);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1],[X_INTRODUCED_40,X_INTRODUCED_41,X_INTRODUCED_49,X_INTRODUCED_56],-2);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1],[X_INTRODUCED_43,X_INTRODUCED_44,X_INTRODUCED_51,X_INTRODUCED_53,X_INTRODUCED_60,X_INTRODUCED_61],-5);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1],[X_INTRODUCED_46,X_INTRODUCED_47,X_INTRODUCED_53,X_INTRODUCED_55,X_INTRODUCED_61,X_INTRODUCED_62],-4);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1],[X_INTRODUCED_49,X_INTRODUCED_50,X_INTRODUCED_56,X_INTRODUCED_58],-3);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1],[X_INTRODUCED_50,X_INTRODUCED_51,X_INTRODUCED_58,X_INTRODUCED_60],-3);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_55,X_INTRODUCED_62],-2);
solve :: int_search(X_INTRODUCED_90,first_fail,indomain_min,complete) satisfy;
