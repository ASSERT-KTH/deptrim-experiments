array [1..2] of int: X_INTRODUCED_32 = [1,-1];
var 2..5: X_INTRODUCED_0;
var 1..5: X_INTRODUCED_1;
var 1..5: X_INTRODUCED_2;
var 1..5: X_INTRODUCED_3;
var 1..5: X_INTRODUCED_4;
var 1..5: X_INTRODUCED_11 ::var_is_introduced :: is_defined_var;
var 1..5: X_INTRODUCED_13 ::var_is_introduced :: is_defined_var;
var 1..5: X_INTRODUCED_15 ::var_is_introduced :: is_defined_var;
var 1..1: X_INTRODUCED_17 ::var_is_introduced ;
var 2..5: X_INTRODUCED_25 ::var_is_introduced :: is_defined_var;
var 2..5: X_INTRODUCED_27 ::var_is_introduced :: is_defined_var;
var 2..5: X_INTRODUCED_29 ::var_is_introduced :: is_defined_var;
var 1..1: X_INTRODUCED_31 ::var_is_introduced ;
array [1..5] of var int: x:: output_array([1..5]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4];
array [1..5] of var int: p:: output_array([1..5]) = [X_INTRODUCED_0,X_INTRODUCED_11,X_INTRODUCED_13,X_INTRODUCED_15,1];
constraint array_var_int_element(X_INTRODUCED_0,x,X_INTRODUCED_11):: defines_var(X_INTRODUCED_11);
constraint array_var_int_element(X_INTRODUCED_11,x,X_INTRODUCED_13):: defines_var(X_INTRODUCED_13);
constraint array_var_int_element(X_INTRODUCED_13,x,X_INTRODUCED_15):: defines_var(X_INTRODUCED_15);
constraint array_var_int_element(X_INTRODUCED_15,x,1);
constraint array_var_int_element(X_INTRODUCED_0,x,X_INTRODUCED_25):: defines_var(X_INTRODUCED_25);
constraint array_var_int_element(X_INTRODUCED_25,x,X_INTRODUCED_27):: defines_var(X_INTRODUCED_27);
constraint array_var_int_element(X_INTRODUCED_27,x,X_INTRODUCED_29):: defines_var(X_INTRODUCED_29);
constraint array_var_int_element(X_INTRODUCED_29,x,1);
constraint int_lin_ne(X_INTRODUCED_32,[X_INTRODUCED_0,X_INTRODUCED_25],0);
constraint int_lin_ne(X_INTRODUCED_32,[X_INTRODUCED_0,X_INTRODUCED_27],0);
constraint int_lin_ne(X_INTRODUCED_32,[X_INTRODUCED_0,X_INTRODUCED_29],0);
constraint int_lin_ne([1],[X_INTRODUCED_0],1);
constraint int_lin_ne(X_INTRODUCED_32,[X_INTRODUCED_25,X_INTRODUCED_27],0);
constraint int_lin_ne(X_INTRODUCED_32,[X_INTRODUCED_25,X_INTRODUCED_29],0);
constraint int_lin_ne([1],[X_INTRODUCED_25],1);
constraint int_lin_ne(X_INTRODUCED_32,[X_INTRODUCED_27,X_INTRODUCED_29],0);
constraint int_lin_ne([1],[X_INTRODUCED_27],1);
constraint int_lin_ne([1],[X_INTRODUCED_29],1);
constraint int_lin_ne(X_INTRODUCED_32,[X_INTRODUCED_0,X_INTRODUCED_1],0);
constraint int_lin_ne(X_INTRODUCED_32,[X_INTRODUCED_0,X_INTRODUCED_2],0);
constraint int_lin_ne(X_INTRODUCED_32,[X_INTRODUCED_0,X_INTRODUCED_3],0);
constraint int_lin_ne(X_INTRODUCED_32,[X_INTRODUCED_0,X_INTRODUCED_4],0);
constraint int_lin_ne(X_INTRODUCED_32,[X_INTRODUCED_1,X_INTRODUCED_2],0);
constraint int_lin_ne(X_INTRODUCED_32,[X_INTRODUCED_1,X_INTRODUCED_3],0);
constraint int_lin_ne(X_INTRODUCED_32,[X_INTRODUCED_1,X_INTRODUCED_4],0);
constraint int_lin_ne(X_INTRODUCED_32,[X_INTRODUCED_2,X_INTRODUCED_3],0);
constraint int_lin_ne(X_INTRODUCED_32,[X_INTRODUCED_2,X_INTRODUCED_4],0);
constraint int_lin_ne(X_INTRODUCED_32,[X_INTRODUCED_3,X_INTRODUCED_4],0);
solve :: int_search(x,first_fail,indomain_min,complete) satisfy;
