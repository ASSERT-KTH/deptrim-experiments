array [1..3] of int: X_INTRODUCED_18 = [1,1,1];
var set of 1..5: X_INTRODUCED_0;
var set of 1..5: X_INTRODUCED_1;
var set of 1..5: X_INTRODUCED_2;
var set of 1..5: X_INTRODUCED_3;
var set of 1..5: X_INTRODUCED_4;
var bool: X_INTRODUCED_5 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_6 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_7 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_8 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_9 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_10 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_11 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_12 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_13 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_15 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_16 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_19 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_21 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_22 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_23 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_24 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_25 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_26 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_27 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_28 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_29 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_30 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_35 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_36 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_41 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_44 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_45 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_46 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_48 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_49 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_50 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_51 ::var_is_introduced :: is_defined_var;
var set of 1..5: X_INTRODUCED_54 ::var_is_introduced :: is_defined_var;
var 0..5: X_INTRODUCED_55 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_56 ::var_is_introduced :: is_defined_var;
var 0..5: X_INTRODUCED_58 ::var_is_introduced :: is_defined_var;
var 0..5: X_INTRODUCED_59 ::var_is_introduced :: is_defined_var;
var 0..5: X_INTRODUCED_60 ::var_is_introduced :: is_defined_var;
var 0..5: X_INTRODUCED_61 ::var_is_introduced :: is_defined_var;
var 0..5: X_INTRODUCED_62 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_14 ::var_is_introduced  = true;
var bool: X_INTRODUCED_20 ::var_is_introduced  = true;
var bool: X_INTRODUCED_31 ::var_is_introduced :: is_defined_var = false;
var bool: X_INTRODUCED_34 ::var_is_introduced  = true;
var bool: X_INTRODUCED_39 ::var_is_introduced  = true;
var bool: X_INTRODUCED_42 ::var_is_introduced  = true;
array [1..5] of var set of int: x:: output_array([1..5]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4];
constraint int_lin_eq(X_INTRODUCED_18,[X_INTRODUCED_8,X_INTRODUCED_12,X_INTRODUCED_16],0);
constraint int_lin_eq([1,1,1,1],[X_INTRODUCED_22,X_INTRODUCED_25,X_INTRODUCED_29,X_INTRODUCED_36],1);
constraint int_lin_eq([1,1,1],[X_INTRODUCED_41,X_INTRODUCED_45,X_INTRODUCED_46],0);
constraint int_lin_eq([1,1,1,1],[X_INTRODUCED_48,X_INTRODUCED_49,X_INTRODUCED_50,X_INTRODUCED_51],3);
constraint int_eq(X_INTRODUCED_55,2);
constraint set_in(4,X_INTRODUCED_0);
constraint int_eq(X_INTRODUCED_58,3);
constraint int_eq(X_INTRODUCED_59,3);
constraint set_in(2,X_INTRODUCED_1);
constraint int_eq(X_INTRODUCED_60,3);
constraint int_eq(X_INTRODUCED_61,3);
constraint set_in(4,X_INTRODUCED_3);
constraint int_eq(X_INTRODUCED_62,3);
constraint bool_eq(X_INTRODUCED_56,false);
constraint set_in_reif(1,X_INTRODUCED_4,X_INTRODUCED_5):: defines_var(X_INTRODUCED_5);
constraint set_in_reif(1,X_INTRODUCED_1,X_INTRODUCED_6):: defines_var(X_INTRODUCED_6);
constraint array_bool_and([X_INTRODUCED_5,X_INTRODUCED_6],X_INTRODUCED_7):: defines_var(X_INTRODUCED_7);
constraint bool2int(X_INTRODUCED_7,X_INTRODUCED_8):: defines_var(X_INTRODUCED_8);
constraint set_in_reif(3,X_INTRODUCED_4,X_INTRODUCED_9):: defines_var(X_INTRODUCED_9);
constraint set_in_reif(3,X_INTRODUCED_1,X_INTRODUCED_10):: defines_var(X_INTRODUCED_10);
constraint array_bool_and([X_INTRODUCED_9,X_INTRODUCED_10],X_INTRODUCED_11):: defines_var(X_INTRODUCED_11);
constraint bool2int(X_INTRODUCED_11,X_INTRODUCED_12):: defines_var(X_INTRODUCED_12);
constraint set_in_reif(4,X_INTRODUCED_4,X_INTRODUCED_13):: defines_var(X_INTRODUCED_13);
constraint set_in(4,X_INTRODUCED_1);
constraint array_bool_and([X_INTRODUCED_13],X_INTRODUCED_15):: defines_var(X_INTRODUCED_15);
constraint bool2int(X_INTRODUCED_15,X_INTRODUCED_16):: defines_var(X_INTRODUCED_16);
constraint set_in_reif(5,X_INTRODUCED_0,X_INTRODUCED_19):: defines_var(X_INTRODUCED_19);
constraint set_in(1,X_INTRODUCED_0);
constraint array_bool_and([X_INTRODUCED_19],X_INTRODUCED_21):: defines_var(X_INTRODUCED_21);
constraint bool2int(X_INTRODUCED_21,X_INTRODUCED_22):: defines_var(X_INTRODUCED_22);
constraint set_in_reif(5,X_INTRODUCED_1,X_INTRODUCED_23):: defines_var(X_INTRODUCED_23);
constraint array_bool_and([X_INTRODUCED_6,X_INTRODUCED_23],X_INTRODUCED_24):: defines_var(X_INTRODUCED_24);
constraint bool2int(X_INTRODUCED_24,X_INTRODUCED_25):: defines_var(X_INTRODUCED_25);
constraint set_in_reif(5,X_INTRODUCED_2,X_INTRODUCED_26):: defines_var(X_INTRODUCED_26);
constraint set_in_reif(1,X_INTRODUCED_2,X_INTRODUCED_27):: defines_var(X_INTRODUCED_27);
constraint array_bool_and([X_INTRODUCED_26,X_INTRODUCED_27],X_INTRODUCED_28):: defines_var(X_INTRODUCED_28);
constraint bool2int(X_INTRODUCED_28,X_INTRODUCED_29):: defines_var(X_INTRODUCED_29);
constraint set_in_reif(5,X_INTRODUCED_3,X_INTRODUCED_30):: defines_var(X_INTRODUCED_30);
constraint set_in_reif(1,X_INTRODUCED_3,X_INTRODUCED_31):: defines_var(X_INTRODUCED_31);
constraint set_in(5,X_INTRODUCED_4);
constraint array_bool_and([X_INTRODUCED_5],X_INTRODUCED_35):: defines_var(X_INTRODUCED_35);
constraint bool2int(X_INTRODUCED_35,X_INTRODUCED_36):: defines_var(X_INTRODUCED_36);
constraint set_in(3,X_INTRODUCED_0);
constraint bool2int(X_INTRODUCED_10,X_INTRODUCED_41):: defines_var(X_INTRODUCED_41);
constraint set_in(3,X_INTRODUCED_2);
constraint set_in_reif(3,X_INTRODUCED_3,X_INTRODUCED_44):: defines_var(X_INTRODUCED_44);
constraint bool2int(X_INTRODUCED_44,X_INTRODUCED_45):: defines_var(X_INTRODUCED_45);
constraint bool2int(X_INTRODUCED_9,X_INTRODUCED_46):: defines_var(X_INTRODUCED_46);
constraint bool2int(X_INTRODUCED_19,X_INTRODUCED_48):: defines_var(X_INTRODUCED_48);
constraint bool2int(X_INTRODUCED_23,X_INTRODUCED_49):: defines_var(X_INTRODUCED_49);
constraint bool2int(X_INTRODUCED_26,X_INTRODUCED_50):: defines_var(X_INTRODUCED_50);
constraint bool2int(X_INTRODUCED_30,X_INTRODUCED_51):: defines_var(X_INTRODUCED_51);
constraint set_intersect(X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_54):: defines_var(X_INTRODUCED_54);
constraint set_card(X_INTRODUCED_54,X_INTRODUCED_55):: defines_var(X_INTRODUCED_55);
constraint set_in_reif(4,X_INTRODUCED_2,X_INTRODUCED_56):: defines_var(X_INTRODUCED_56);
constraint set_card(X_INTRODUCED_0,X_INTRODUCED_58):: defines_var(X_INTRODUCED_58);
constraint set_card(X_INTRODUCED_1,X_INTRODUCED_59):: defines_var(X_INTRODUCED_59);
constraint set_card(X_INTRODUCED_2,X_INTRODUCED_60):: defines_var(X_INTRODUCED_60);
constraint set_card(X_INTRODUCED_3,X_INTRODUCED_61):: defines_var(X_INTRODUCED_61);
constraint set_card(X_INTRODUCED_4,X_INTRODUCED_62):: defines_var(X_INTRODUCED_62);
solve  satisfy;
