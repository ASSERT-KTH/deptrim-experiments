array [1..2] of int: X_INTRODUCED_23 = [1,-1];
var 0..7: X_INTRODUCED_0;
var 0..7: X_INTRODUCED_1;
var 0..7: X_INTRODUCED_2;
var 0..7: X_INTRODUCED_3;
var 0..7: X_INTRODUCED_4;
var 0..7: X_INTRODUCED_5;
var 0..10000: t_min:: output_var;
var bool: X_INTRODUCED_6 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_7 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_8 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_9 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_10 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_11 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_12 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_14 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_15 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_16 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_17 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_18 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_19 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_20 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_21 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_22 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_24 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_25 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_26 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_27 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_28 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_29 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_30 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_31 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_32 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_33 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_34 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_35 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_36 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_37 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_38 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_39 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_40 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_42 ::var_is_introduced :: is_defined_var;
array [1..6] of var int: variables:: output_array([1..6]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5];
constraint array_bool_or([X_INTRODUCED_14,X_INTRODUCED_42],true);
constraint int_eq_reif(t_min,10000,X_INTRODUCED_6):: defines_var(X_INTRODUCED_6);
constraint int_eq_reif(X_INTRODUCED_0,0,X_INTRODUCED_7):: defines_var(X_INTRODUCED_7);
constraint int_eq_reif(X_INTRODUCED_1,0,X_INTRODUCED_8):: defines_var(X_INTRODUCED_8);
constraint int_eq_reif(X_INTRODUCED_2,0,X_INTRODUCED_9):: defines_var(X_INTRODUCED_9);
constraint int_eq_reif(X_INTRODUCED_3,0,X_INTRODUCED_10):: defines_var(X_INTRODUCED_10);
constraint int_eq_reif(X_INTRODUCED_4,0,X_INTRODUCED_11):: defines_var(X_INTRODUCED_11);
constraint int_eq_reif(X_INTRODUCED_5,0,X_INTRODUCED_12):: defines_var(X_INTRODUCED_12);
constraint array_bool_and([X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12],X_INTRODUCED_14):: defines_var(X_INTRODUCED_14);
constraint int_eq_reif(t_min,X_INTRODUCED_0,X_INTRODUCED_15):: defines_var(X_INTRODUCED_15);
constraint int_eq_reif(t_min,X_INTRODUCED_1,X_INTRODUCED_16):: defines_var(X_INTRODUCED_16);
constraint int_eq_reif(t_min,X_INTRODUCED_2,X_INTRODUCED_17):: defines_var(X_INTRODUCED_17);
constraint int_eq_reif(t_min,X_INTRODUCED_3,X_INTRODUCED_18):: defines_var(X_INTRODUCED_18);
constraint int_eq_reif(t_min,X_INTRODUCED_4,X_INTRODUCED_19):: defines_var(X_INTRODUCED_19);
constraint int_eq_reif(t_min,X_INTRODUCED_5,X_INTRODUCED_20):: defines_var(X_INTRODUCED_20);
constraint array_bool_or([X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20],X_INTRODUCED_21):: defines_var(X_INTRODUCED_21);
constraint int_le_reif(1,X_INTRODUCED_0,X_INTRODUCED_22):: defines_var(X_INTRODUCED_22);
constraint int_lin_le_reif(X_INTRODUCED_23,[t_min,X_INTRODUCED_0],0,X_INTRODUCED_24):: defines_var(X_INTRODUCED_24);
constraint bool_eq_reif(X_INTRODUCED_22,X_INTRODUCED_24,X_INTRODUCED_25):: defines_var(X_INTRODUCED_25);
constraint int_le_reif(1,X_INTRODUCED_1,X_INTRODUCED_26):: defines_var(X_INTRODUCED_26);
constraint int_lin_le_reif(X_INTRODUCED_23,[t_min,X_INTRODUCED_1],0,X_INTRODUCED_27):: defines_var(X_INTRODUCED_27);
constraint bool_eq_reif(X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28):: defines_var(X_INTRODUCED_28);
constraint int_le_reif(1,X_INTRODUCED_2,X_INTRODUCED_29):: defines_var(X_INTRODUCED_29);
constraint int_lin_le_reif(X_INTRODUCED_23,[t_min,X_INTRODUCED_2],0,X_INTRODUCED_30):: defines_var(X_INTRODUCED_30);
constraint bool_eq_reif(X_INTRODUCED_29,X_INTRODUCED_30,X_INTRODUCED_31):: defines_var(X_INTRODUCED_31);
constraint int_le_reif(1,X_INTRODUCED_3,X_INTRODUCED_32):: defines_var(X_INTRODUCED_32);
constraint int_lin_le_reif(X_INTRODUCED_23,[t_min,X_INTRODUCED_3],0,X_INTRODUCED_33):: defines_var(X_INTRODUCED_33);
constraint bool_eq_reif(X_INTRODUCED_32,X_INTRODUCED_33,X_INTRODUCED_34):: defines_var(X_INTRODUCED_34);
constraint int_le_reif(1,X_INTRODUCED_4,X_INTRODUCED_35):: defines_var(X_INTRODUCED_35);
constraint int_lin_le_reif(X_INTRODUCED_23,[t_min,X_INTRODUCED_4],0,X_INTRODUCED_36):: defines_var(X_INTRODUCED_36);
constraint bool_eq_reif(X_INTRODUCED_35,X_INTRODUCED_36,X_INTRODUCED_37):: defines_var(X_INTRODUCED_37);
constraint int_le_reif(1,X_INTRODUCED_5,X_INTRODUCED_38):: defines_var(X_INTRODUCED_38);
constraint int_lin_le_reif(X_INTRODUCED_23,[t_min,X_INTRODUCED_5],0,X_INTRODUCED_39):: defines_var(X_INTRODUCED_39);
constraint bool_eq_reif(X_INTRODUCED_38,X_INTRODUCED_39,X_INTRODUCED_40):: defines_var(X_INTRODUCED_40);
constraint array_bool_and([X_INTRODUCED_21,X_INTRODUCED_25,X_INTRODUCED_28,X_INTRODUCED_31,X_INTRODUCED_34,X_INTRODUCED_37,X_INTRODUCED_40],X_INTRODUCED_42):: defines_var(X_INTRODUCED_42);
solve  satisfy;
