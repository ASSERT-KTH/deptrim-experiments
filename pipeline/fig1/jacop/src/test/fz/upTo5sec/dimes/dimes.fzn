array [1..2] of int: X_INTRODUCED_22 = [1,1];
array [1..6] of int: X_INTRODUCED_34 = [1,-1,-1,-1,-1,-1];
var 3..4: X_INTRODUCED_5;
var 3..4: X_INTRODUCED_6;
var 3..4: X_INTRODUCED_7;
var 3..4: X_INTRODUCED_8;
var 3..4: X_INTRODUCED_9;
var 0..4: X_INTRODUCED_10:: is_defined_var;
var 0..4: X_INTRODUCED_11:: is_defined_var;
var 15..200: cents:: output_var:: is_defined_var;
var bool: X_INTRODUCED_14 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_15 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_16 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_18 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_19 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_20 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_23 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_24 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_25 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_26 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_27 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_28 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_29 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_30 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_31 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_32 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_35 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_36 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_37 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_38 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_39 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_40 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_41 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_42 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_43 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_44 ::var_is_introduced :: is_defined_var;
var 3..40: X_INTRODUCED_48 ::var_is_introduced :: is_defined_var;
var 3..40: X_INTRODUCED_49 ::var_is_introduced :: is_defined_var;
var 3..40: X_INTRODUCED_50 ::var_is_introduced :: is_defined_var;
var 3..40: X_INTRODUCED_51 ::var_is_introduced :: is_defined_var;
var 3..40: X_INTRODUCED_52 ::var_is_introduced :: is_defined_var;
array [1..5] of var int: amount:: output_array([1..5]) = [X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9];
array [1..2] of var int: amount_gcc:: output_array([3..4]) = [X_INTRODUCED_10,X_INTRODUCED_11];
array [1..12] of var int: X_INTRODUCED_12 ::var_is_introduced  = [1,2,3,5,10,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11];
constraint array_bool_or([X_INTRODUCED_16,X_INTRODUCED_20],true);
constraint int_lin_le(X_INTRODUCED_22,[X_INTRODUCED_10,X_INTRODUCED_11],5);
constraint int_lin_eq(X_INTRODUCED_34,[X_INTRODUCED_10,X_INTRODUCED_24,X_INTRODUCED_26,X_INTRODUCED_28,X_INTRODUCED_30,X_INTRODUCED_32],0):: defines_var(X_INTRODUCED_10);
constraint int_lin_eq(X_INTRODUCED_34,[X_INTRODUCED_11,X_INTRODUCED_36,X_INTRODUCED_38,X_INTRODUCED_40,X_INTRODUCED_42,X_INTRODUCED_44],0):: defines_var(X_INTRODUCED_11);
constraint int_mod(cents,10,0);
constraint int_lin_eq(X_INTRODUCED_34,[cents,X_INTRODUCED_48,X_INTRODUCED_49,X_INTRODUCED_50,X_INTRODUCED_51,X_INTRODUCED_52],0):: defines_var(cents);
constraint int_eq_reif(X_INTRODUCED_10,3,X_INTRODUCED_14):: defines_var(X_INTRODUCED_14);
constraint int_eq_reif(X_INTRODUCED_11,2,X_INTRODUCED_15):: defines_var(X_INTRODUCED_15);
constraint array_bool_and([X_INTRODUCED_14,X_INTRODUCED_15],X_INTRODUCED_16):: defines_var(X_INTRODUCED_16);
constraint int_eq_reif(X_INTRODUCED_10,2,X_INTRODUCED_18):: defines_var(X_INTRODUCED_18);
constraint int_eq_reif(X_INTRODUCED_11,3,X_INTRODUCED_19):: defines_var(X_INTRODUCED_19);
constraint array_bool_and([X_INTRODUCED_18,X_INTRODUCED_19],X_INTRODUCED_20):: defines_var(X_INTRODUCED_20);
constraint int_eq_reif(X_INTRODUCED_5,3,X_INTRODUCED_23):: defines_var(X_INTRODUCED_23);
constraint bool2int(X_INTRODUCED_23,X_INTRODUCED_24):: defines_var(X_INTRODUCED_24);
constraint int_eq_reif(X_INTRODUCED_6,3,X_INTRODUCED_25):: defines_var(X_INTRODUCED_25);
constraint bool2int(X_INTRODUCED_25,X_INTRODUCED_26):: defines_var(X_INTRODUCED_26);
constraint int_eq_reif(X_INTRODUCED_7,3,X_INTRODUCED_27):: defines_var(X_INTRODUCED_27);
constraint bool2int(X_INTRODUCED_27,X_INTRODUCED_28):: defines_var(X_INTRODUCED_28);
constraint int_eq_reif(X_INTRODUCED_8,3,X_INTRODUCED_29):: defines_var(X_INTRODUCED_29);
constraint bool2int(X_INTRODUCED_29,X_INTRODUCED_30):: defines_var(X_INTRODUCED_30);
constraint int_eq_reif(X_INTRODUCED_9,3,X_INTRODUCED_31):: defines_var(X_INTRODUCED_31);
constraint bool2int(X_INTRODUCED_31,X_INTRODUCED_32):: defines_var(X_INTRODUCED_32);
constraint int_eq_reif(X_INTRODUCED_5,4,X_INTRODUCED_35):: defines_var(X_INTRODUCED_35);
constraint bool2int(X_INTRODUCED_35,X_INTRODUCED_36):: defines_var(X_INTRODUCED_36);
constraint int_eq_reif(X_INTRODUCED_6,4,X_INTRODUCED_37):: defines_var(X_INTRODUCED_37);
constraint bool2int(X_INTRODUCED_37,X_INTRODUCED_38):: defines_var(X_INTRODUCED_38);
constraint int_eq_reif(X_INTRODUCED_7,4,X_INTRODUCED_39):: defines_var(X_INTRODUCED_39);
constraint bool2int(X_INTRODUCED_39,X_INTRODUCED_40):: defines_var(X_INTRODUCED_40);
constraint int_eq_reif(X_INTRODUCED_8,4,X_INTRODUCED_41):: defines_var(X_INTRODUCED_41);
constraint bool2int(X_INTRODUCED_41,X_INTRODUCED_42):: defines_var(X_INTRODUCED_42);
constraint int_eq_reif(X_INTRODUCED_9,4,X_INTRODUCED_43):: defines_var(X_INTRODUCED_43);
constraint bool2int(X_INTRODUCED_43,X_INTRODUCED_44):: defines_var(X_INTRODUCED_44);
constraint int_times(1,X_INTRODUCED_5,X_INTRODUCED_48):: defines_var(X_INTRODUCED_48);
constraint int_times(2,X_INTRODUCED_6,X_INTRODUCED_49):: defines_var(X_INTRODUCED_49);
constraint int_times(3,X_INTRODUCED_7,X_INTRODUCED_50):: defines_var(X_INTRODUCED_50);
constraint int_times(5,X_INTRODUCED_8,X_INTRODUCED_51):: defines_var(X_INTRODUCED_51);
constraint int_times(10,X_INTRODUCED_9,X_INTRODUCED_52):: defines_var(X_INTRODUCED_52);
solve :: int_search(X_INTRODUCED_12,first_fail,indomain_max,complete) satisfy;
