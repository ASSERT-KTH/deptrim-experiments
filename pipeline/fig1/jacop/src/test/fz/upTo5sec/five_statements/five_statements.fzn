array [1..5] of int: X_INTRODUCED_6 = [-1,-1,-1,-1,-1];
array [1..5] of int: X_INTRODUCED_19 = [1,1,1,1,1];
var 0..1: X_INTRODUCED_0;
var 0..1: X_INTRODUCED_1;
var 0..1: X_INTRODUCED_2;
var 0..1: X_INTRODUCED_3;
var 0..1: X_INTRODUCED_4;
var bool: X_INTRODUCED_7 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_8 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_9 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_10 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_11 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_12 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_13 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_14 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_15 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_16 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_17 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_20 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_21 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_22 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_23 ::var_is_introduced :: is_defined_var;
array [1..5] of var int: x:: output_array([1..5]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4];
constraint int_lin_le(X_INTRODUCED_6,[X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4],-1);
constraint int_lin_eq_reif(X_INTRODUCED_19,[X_INTRODUCED_9,X_INTRODUCED_11,X_INTRODUCED_13,X_INTRODUCED_15,X_INTRODUCED_17],1,X_INTRODUCED_7):: defines_var(X_INTRODUCED_7);
constraint int_lin_eq_reif(X_INTRODUCED_19,[X_INTRODUCED_9,X_INTRODUCED_11,X_INTRODUCED_13,X_INTRODUCED_15,X_INTRODUCED_17],2,X_INTRODUCED_20):: defines_var(X_INTRODUCED_20);
constraint int_lin_eq_reif(X_INTRODUCED_19,[X_INTRODUCED_9,X_INTRODUCED_11,X_INTRODUCED_13,X_INTRODUCED_15,X_INTRODUCED_17],3,X_INTRODUCED_21):: defines_var(X_INTRODUCED_21);
constraint int_lin_eq_reif(X_INTRODUCED_19,[X_INTRODUCED_9,X_INTRODUCED_11,X_INTRODUCED_13,X_INTRODUCED_15,X_INTRODUCED_17],4,X_INTRODUCED_22):: defines_var(X_INTRODUCED_22);
constraint int_lin_eq_reif(X_INTRODUCED_19,[X_INTRODUCED_9,X_INTRODUCED_11,X_INTRODUCED_13,X_INTRODUCED_15,X_INTRODUCED_17],5,X_INTRODUCED_23):: defines_var(X_INTRODUCED_23);
constraint int_eq_reif(X_INTRODUCED_0,1,X_INTRODUCED_7):: defines_var(X_INTRODUCED_7);
constraint int_eq_reif(X_INTRODUCED_0,0,X_INTRODUCED_8):: defines_var(X_INTRODUCED_8);
constraint bool2int(X_INTRODUCED_8,X_INTRODUCED_9):: defines_var(X_INTRODUCED_9);
constraint int_eq_reif(X_INTRODUCED_1,0,X_INTRODUCED_10):: defines_var(X_INTRODUCED_10);
constraint bool2int(X_INTRODUCED_10,X_INTRODUCED_11):: defines_var(X_INTRODUCED_11);
constraint int_eq_reif(X_INTRODUCED_2,0,X_INTRODUCED_12):: defines_var(X_INTRODUCED_12);
constraint bool2int(X_INTRODUCED_12,X_INTRODUCED_13):: defines_var(X_INTRODUCED_13);
constraint int_eq_reif(X_INTRODUCED_3,0,X_INTRODUCED_14):: defines_var(X_INTRODUCED_14);
constraint bool2int(X_INTRODUCED_14,X_INTRODUCED_15):: defines_var(X_INTRODUCED_15);
constraint int_eq_reif(X_INTRODUCED_4,0,X_INTRODUCED_16):: defines_var(X_INTRODUCED_16);
constraint bool2int(X_INTRODUCED_16,X_INTRODUCED_17):: defines_var(X_INTRODUCED_17);
constraint int_eq_reif(X_INTRODUCED_1,1,X_INTRODUCED_20):: defines_var(X_INTRODUCED_20);
constraint int_eq_reif(X_INTRODUCED_2,1,X_INTRODUCED_21):: defines_var(X_INTRODUCED_21);
constraint int_eq_reif(X_INTRODUCED_3,1,X_INTRODUCED_22):: defines_var(X_INTRODUCED_22);
constraint int_eq_reif(X_INTRODUCED_4,1,X_INTRODUCED_23):: defines_var(X_INTRODUCED_23);
solve :: int_search(x,first_fail,indomain_min,complete) satisfy;
