var 0..1: X_INTRODUCED_0;
var 0..1: X_INTRODUCED_3;
var 0..1: X_INTRODUCED_5;
var 0..1: X_INTRODUCED_7;
var 0..1: X_INTRODUCED_8;
var 0..1: X_INTRODUCED_9;
var 0..1: X_INTRODUCED_10;
var 0..1: X_INTRODUCED_12;
var 0..1: X_INTRODUCED_13;
var 0..1: X_INTRODUCED_15;
var 0..1: X_INTRODUCED_16;
var 0..1: X_INTRODUCED_17;
var 0..1: X_INTRODUCED_20;
var 0..1: X_INTRODUCED_21;
var 0..1: X_INTRODUCED_22;
var 0..1: X_INTRODUCED_24;
var 0..1: X_INTRODUCED_27;
var 0..1: X_INTRODUCED_28;
var 0..1: X_INTRODUCED_31;
var 0..1: X_INTRODUCED_33;
var 0..1: X_INTRODUCED_34;
var 0..1: X_INTRODUCED_36;
var 0..1: X_INTRODUCED_38;
var 0..1: X_INTRODUCED_39;
var 0..1: X_INTRODUCED_40;
var 0..1: X_INTRODUCED_41;
var 0..1: X_INTRODUCED_44;
var 0..1: X_INTRODUCED_45;
var 0..1: X_INTRODUCED_46;
var 0..1: X_INTRODUCED_47;
var 0..1: X_INTRODUCED_52;
var 0..1: X_INTRODUCED_53;
var 0..1: X_INTRODUCED_54;
var 0..1: X_INTRODUCED_55;
var 0..1: X_INTRODUCED_58;
var 0..1: X_INTRODUCED_59;
var 0..1: X_INTRODUCED_60;
var 0..1: X_INTRODUCED_61;
var 0..1: X_INTRODUCED_63;
var 0..1: X_INTRODUCED_65;
var 0..1: X_INTRODUCED_66;
var 0..1: X_INTRODUCED_68;
var 0..1: X_INTRODUCED_71;
var 0..1: X_INTRODUCED_72;
var 0..1: X_INTRODUCED_75;
var 0..1: X_INTRODUCED_77;
var 0..1: X_INTRODUCED_78;
var 0..1: X_INTRODUCED_79;
var 0..1: X_INTRODUCED_82;
var 0..1: X_INTRODUCED_83;
var 0..1: X_INTRODUCED_84;
var 0..1: X_INTRODUCED_86;
var 0..1: X_INTRODUCED_87;
var 0..1: X_INTRODUCED_89;
var 0..1: X_INTRODUCED_90;
var 0..1: X_INTRODUCED_91;
var 0..1: X_INTRODUCED_92;
var 0..1: X_INTRODUCED_94;
var 0..1: X_INTRODUCED_96;
var 0..1: X_INTRODUCED_99;
array [1..100] of var int: mines:: output_array([1..10,1..10]) = [X_INTRODUCED_0,0,0,X_INTRODUCED_3,0,X_INTRODUCED_5,0,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,0,X_INTRODUCED_12,X_INTRODUCED_13,0,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,0,0,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,0,X_INTRODUCED_24,0,0,X_INTRODUCED_27,X_INTRODUCED_28,0,0,X_INTRODUCED_31,0,X_INTRODUCED_33,X_INTRODUCED_34,0,X_INTRODUCED_36,0,X_INTRODUCED_38,X_INTRODUCED_39,X_INTRODUCED_40,X_INTRODUCED_41,0,0,X_INTRODUCED_44,X_INTRODUCED_45,X_INTRODUCED_46,X_INTRODUCED_47,0,0,0,0,X_INTRODUCED_52,X_INTRODUCED_53,X_INTRODUCED_54,X_INTRODUCED_55,0,0,X_INTRODUCED_58,X_INTRODUCED_59,X_INTRODUCED_60,X_INTRODUCED_61,0,X_INTRODUCED_63,0,X_INTRODUCED_65,X_INTRODUCED_66,0,X_INTRODUCED_68,0,0,X_INTRODUCED_71,X_INTRODUCED_72,0,0,X_INTRODUCED_75,0,X_INTRODUCED_77,X_INTRODUCED_78,X_INTRODUCED_79,0,0,X_INTRODUCED_82,X_INTRODUCED_83,X_INTRODUCED_84,0,X_INTRODUCED_86,X_INTRODUCED_87,0,X_INTRODUCED_89,X_INTRODUCED_90,X_INTRODUCED_91,X_INTRODUCED_92,0,X_INTRODUCED_94,0,X_INTRODUCED_96,0,0,X_INTRODUCED_99];
array [1..100] of var int: X_INTRODUCED_143 ::var_is_introduced  = [X_INTRODUCED_0,0,0,X_INTRODUCED_3,0,X_INTRODUCED_5,0,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,0,X_INTRODUCED_12,X_INTRODUCED_13,0,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,0,0,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,0,X_INTRODUCED_24,0,0,X_INTRODUCED_27,X_INTRODUCED_28,0,0,X_INTRODUCED_31,0,X_INTRODUCED_33,X_INTRODUCED_34,0,X_INTRODUCED_36,0,X_INTRODUCED_38,X_INTRODUCED_39,X_INTRODUCED_40,X_INTRODUCED_41,0,0,X_INTRODUCED_44,X_INTRODUCED_45,X_INTRODUCED_46,X_INTRODUCED_47,0,0,0,0,X_INTRODUCED_52,X_INTRODUCED_53,X_INTRODUCED_54,X_INTRODUCED_55,0,0,X_INTRODUCED_58,X_INTRODUCED_59,X_INTRODUCED_60,X_INTRODUCED_61,0,X_INTRODUCED_63,0,X_INTRODUCED_65,X_INTRODUCED_66,0,X_INTRODUCED_68,0,0,X_INTRODUCED_71,X_INTRODUCED_72,0,0,X_INTRODUCED_75,0,X_INTRODUCED_77,X_INTRODUCED_78,X_INTRODUCED_79,0,0,X_INTRODUCED_82,X_INTRODUCED_83,X_INTRODUCED_84,0,X_INTRODUCED_86,X_INTRODUCED_87,0,X_INTRODUCED_89,X_INTRODUCED_90,X_INTRODUCED_91,X_INTRODUCED_92,0,X_INTRODUCED_94,0,X_INTRODUCED_96,0,0,X_INTRODUCED_99];
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1],[X_INTRODUCED_0,X_INTRODUCED_10,X_INTRODUCED_12],-2);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1],[X_INTRODUCED_3,X_INTRODUCED_12,X_INTRODUCED_13],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1],[X_INTRODUCED_3,X_INTRODUCED_5,X_INTRODUCED_13,X_INTRODUCED_15],-2);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1],[X_INTRODUCED_5,X_INTRODUCED_7,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17],-2);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1],[X_INTRODUCED_0,X_INTRODUCED_10,X_INTRODUCED_12,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22],-4);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1],[X_INTRODUCED_3,X_INTRODUCED_5,X_INTRODUCED_13,X_INTRODUCED_15,X_INTRODUCED_24],-3);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1],[X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_17,X_INTRODUCED_27,X_INTRODUCED_28],-5);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1],[X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_28],-3);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1],[X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_22,X_INTRODUCED_24,X_INTRODUCED_33,X_INTRODUCED_34],-4);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1],[X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_24,X_INTRODUCED_34,X_INTRODUCED_36],-4);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1],[X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_27,X_INTRODUCED_36],-4);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1],[X_INTRODUCED_28,X_INTRODUCED_38,X_INTRODUCED_39],-3);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1],[X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_31,X_INTRODUCED_40,X_INTRODUCED_41],-4);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1],[X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_31,X_INTRODUCED_33,X_INTRODUCED_41],-4);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1],[X_INTRODUCED_24,X_INTRODUCED_34,X_INTRODUCED_36,X_INTRODUCED_44,X_INTRODUCED_45,X_INTRODUCED_46],-5);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1],[X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_36,X_INTRODUCED_38,X_INTRODUCED_46,X_INTRODUCED_47],-6);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1],[X_INTRODUCED_31,X_INTRODUCED_33,X_INTRODUCED_41,X_INTRODUCED_52,X_INTRODUCED_53],-4);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1],[X_INTRODUCED_33,X_INTRODUCED_34,X_INTRODUCED_44,X_INTRODUCED_52,X_INTRODUCED_53,X_INTRODUCED_54],-5);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1],[X_INTRODUCED_38,X_INTRODUCED_39,X_INTRODUCED_47,X_INTRODUCED_58,X_INTRODUCED_59],-5);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1],[X_INTRODUCED_38,X_INTRODUCED_39,X_INTRODUCED_58,X_INTRODUCED_59],-4);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1],[X_INTRODUCED_40,X_INTRODUCED_41,X_INTRODUCED_60,X_INTRODUCED_61],-3);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1],[X_INTRODUCED_40,X_INTRODUCED_41,X_INTRODUCED_52,X_INTRODUCED_60,X_INTRODUCED_61],-4);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1],[X_INTRODUCED_45,X_INTRODUCED_46,X_INTRODUCED_47,X_INTRODUCED_55,X_INTRODUCED_65,X_INTRODUCED_66],-5);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1],[X_INTRODUCED_46,X_INTRODUCED_47,X_INTRODUCED_58,X_INTRODUCED_66,X_INTRODUCED_68],-5);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1],[X_INTRODUCED_52,X_INTRODUCED_53,X_INTRODUCED_61,X_INTRODUCED_63,X_INTRODUCED_71,X_INTRODUCED_72],-4);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1],[X_INTRODUCED_53,X_INTRODUCED_54,X_INTRODUCED_55,X_INTRODUCED_63,X_INTRODUCED_65,X_INTRODUCED_75],-4);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1],[X_INTRODUCED_58,X_INTRODUCED_66,X_INTRODUCED_68,X_INTRODUCED_77,X_INTRODUCED_78],-5);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1],[X_INTRODUCED_58,X_INTRODUCED_59,X_INTRODUCED_68,X_INTRODUCED_78,X_INTRODUCED_79],-5);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1],[X_INTRODUCED_60,X_INTRODUCED_61,X_INTRODUCED_71],-2);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1],[X_INTRODUCED_63,X_INTRODUCED_72,X_INTRODUCED_82,X_INTRODUCED_83,X_INTRODUCED_84],-3);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1],[X_INTRODUCED_63,X_INTRODUCED_65,X_INTRODUCED_75,X_INTRODUCED_83,X_INTRODUCED_84],-3);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1],[X_INTRODUCED_65,X_INTRODUCED_66,X_INTRODUCED_75,X_INTRODUCED_77,X_INTRODUCED_86,X_INTRODUCED_87],-6);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1],[X_INTRODUCED_71,X_INTRODUCED_90,X_INTRODUCED_91],-3);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1],[X_INTRODUCED_71,X_INTRODUCED_72,X_INTRODUCED_82,X_INTRODUCED_90,X_INTRODUCED_91,X_INTRODUCED_92],-6);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1],[X_INTRODUCED_75,X_INTRODUCED_84,X_INTRODUCED_86,X_INTRODUCED_94,X_INTRODUCED_96],-3);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1],[X_INTRODUCED_77,X_INTRODUCED_78,X_INTRODUCED_79,X_INTRODUCED_87,X_INTRODUCED_89,X_INTRODUCED_99],-4);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1,-1],[X_INTRODUCED_82,X_INTRODUCED_83,X_INTRODUCED_84,X_INTRODUCED_92,X_INTRODUCED_94],-4);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1],[X_INTRODUCED_84,X_INTRODUCED_86,X_INTRODUCED_94,X_INTRODUCED_96],-2);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1],[X_INTRODUCED_86,X_INTRODUCED_87,X_INTRODUCED_96],-2);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1],[X_INTRODUCED_87,X_INTRODUCED_89,X_INTRODUCED_99],-1);
solve :: int_search(X_INTRODUCED_143,first_fail,indomain_min,complete) satisfy;
