var 2..2: npairs:: output_var;
var 0..1: X_INTRODUCED_11 ::var_is_introduced ;
var 0..1: X_INTRODUCED_13 ::var_is_introduced ;
var 0..1: X_INTRODUCED_14 ::var_is_introduced ;
var 0..1: X_INTRODUCED_15 ::var_is_introduced ;
var bool: X_INTRODUCED_23 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_30 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_40 ::var_is_introduced :: is_defined_var;
array [1..10] of var int: pairs:: output_array([1..5,1..2]) = [3,1,1,5,3,1,3,1,1,5];
constraint int_lin_eq([-1,-1,-1,-1],[X_INTRODUCED_11,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15],-1);
constraint array_bool_and([false,true],X_INTRODUCED_23):: defines_var(X_INTRODUCED_23);
constraint array_bool_and([false,true,false],X_INTRODUCED_30):: defines_var(X_INTRODUCED_30);
constraint array_bool_and([true,false,true,true],X_INTRODUCED_40):: defines_var(X_INTRODUCED_40);
constraint int_eq(X_INTRODUCED_11,1);
constraint int_eq_reif(X_INTRODUCED_13,1,X_INTRODUCED_23):: defines_var(X_INTRODUCED_23);
constraint int_eq_reif(X_INTRODUCED_14,1,X_INTRODUCED_30):: defines_var(X_INTRODUCED_30);
constraint int_eq_reif(X_INTRODUCED_15,1,X_INTRODUCED_40):: defines_var(X_INTRODUCED_40);
solve  satisfy;
