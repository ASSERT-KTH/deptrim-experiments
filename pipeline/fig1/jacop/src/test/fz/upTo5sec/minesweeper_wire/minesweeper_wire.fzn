var 0..1: X_INTRODUCED_0;
var 0..1: X_INTRODUCED_13;
var 0..1: X_INTRODUCED_14;
var 0..1: X_INTRODUCED_27;
var 0..1: X_INTRODUCED_28;
var 0..1: X_INTRODUCED_29;
var 0..1: X_INTRODUCED_31;
var 0..1: X_INTRODUCED_32;
var 0..1: X_INTRODUCED_34;
var 0..1: X_INTRODUCED_35;
var 0..1: X_INTRODUCED_37;
var 0..1: X_INTRODUCED_38;
var 0..1: X_INTRODUCED_40;
var 0..1: X_INTRODUCED_41;
var 0..1: X_INTRODUCED_42;
var 0..1: X_INTRODUCED_55;
var 0..1: X_INTRODUCED_56;
var 0..1: X_INTRODUCED_69;
array [1..70] of var int: mines:: output_array([1..5,1..14]) = [X_INTRODUCED_0,0,0,0,0,0,0,0,0,0,0,0,0,X_INTRODUCED_13,X_INTRODUCED_14,0,0,0,0,0,0,0,0,0,0,0,0,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29,0,X_INTRODUCED_31,X_INTRODUCED_32,0,X_INTRODUCED_34,X_INTRODUCED_35,0,X_INTRODUCED_37,X_INTRODUCED_38,0,X_INTRODUCED_40,X_INTRODUCED_41,X_INTRODUCED_42,0,0,0,0,0,0,0,0,0,0,0,0,X_INTRODUCED_55,X_INTRODUCED_56,0,0,0,0,0,0,0,0,0,0,0,0,X_INTRODUCED_69];
array [1..70] of var int: X_INTRODUCED_125 ::var_is_introduced  = [X_INTRODUCED_0,0,0,0,0,0,0,0,0,0,0,0,0,X_INTRODUCED_13,X_INTRODUCED_14,0,0,0,0,0,0,0,0,0,0,0,0,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29,0,X_INTRODUCED_31,X_INTRODUCED_32,0,X_INTRODUCED_34,X_INTRODUCED_35,0,X_INTRODUCED_37,X_INTRODUCED_38,0,X_INTRODUCED_40,X_INTRODUCED_41,X_INTRODUCED_42,0,0,0,0,0,0,0,0,0,0,0,0,X_INTRODUCED_55,X_INTRODUCED_56,0,0,0,0,0,0,0,0,0,0,0,0,X_INTRODUCED_69];
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_0,X_INTRODUCED_14],0);
constraint int_ne(0,1);
constraint int_ne(0,1);
constraint int_ne(0,1);
constraint int_ne(0,1);
constraint int_ne(0,1);
constraint int_ne(0,1);
constraint int_ne(0,1);
constraint int_ne(0,1);
constraint int_ne(0,1);
constraint int_ne(0,1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_13,X_INTRODUCED_27],0);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1],[X_INTRODUCED_0,X_INTRODUCED_14,X_INTRODUCED_28,X_INTRODUCED_29],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_29,X_INTRODUCED_31],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_31,X_INTRODUCED_32],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_31,X_INTRODUCED_32],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_32,X_INTRODUCED_34],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_34,X_INTRODUCED_35],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_34,X_INTRODUCED_35],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_35,X_INTRODUCED_37],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_37,X_INTRODUCED_38],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_37,X_INTRODUCED_38],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_38,X_INTRODUCED_40],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1],[X_INTRODUCED_13,X_INTRODUCED_27,X_INTRODUCED_40,X_INTRODUCED_41],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_29,X_INTRODUCED_31],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_32,X_INTRODUCED_34],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_35,X_INTRODUCED_37],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_38,X_INTRODUCED_40],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1],[X_INTRODUCED_28,X_INTRODUCED_29,X_INTRODUCED_42,X_INTRODUCED_56],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_29,X_INTRODUCED_31],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_31,X_INTRODUCED_32],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_31,X_INTRODUCED_32],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_32,X_INTRODUCED_34],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_34,X_INTRODUCED_35],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_34,X_INTRODUCED_35],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_35,X_INTRODUCED_37],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_37,X_INTRODUCED_38],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_37,X_INTRODUCED_38],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_38,X_INTRODUCED_40],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1],[X_INTRODUCED_40,X_INTRODUCED_41,X_INTRODUCED_55,X_INTRODUCED_69],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_42,X_INTRODUCED_56],0);
constraint int_ne(0,1);
constraint int_ne(0,1);
constraint int_ne(0,1);
constraint int_ne(0,1);
constraint int_ne(0,1);
constraint int_ne(0,1);
constraint int_ne(0,1);
constraint int_ne(0,1);
constraint int_ne(0,1);
constraint int_ne(0,1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_55,X_INTRODUCED_69],0);
solve :: int_search(X_INTRODUCED_125,first_fail,indomain_min,complete) satisfy;
