array [1..2] of int: X_INTRODUCED_7 = [1,-1];
array [1..9] of int: X_INTRODUCED_41 = [1,-1,-1,-1,-1,-1,-1,-1,-1];
var 1..7: X_INTRODUCED_0;
var 1..7: X_INTRODUCED_1;
var 1..7: X_INTRODUCED_2;
var 1..7: X_INTRODUCED_3;
var 1..7: X_INTRODUCED_4;
var 1..7: X_INTRODUCED_5;
var 1..7: X_INTRODUCED_6;
var 0..8: z:: output_var:: is_defined_var;
var -6..6: X_INTRODUCED_8 ::var_is_introduced :: is_defined_var;
var 0..6: X_INTRODUCED_9 ::var_is_introduced ;
var bool: X_INTRODUCED_10 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_11 ::var_is_introduced :: is_defined_var;
var -6..6: X_INTRODUCED_12 ::var_is_introduced :: is_defined_var;
var 0..6: X_INTRODUCED_13 ::var_is_introduced ;
var bool: X_INTRODUCED_14 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_15 ::var_is_introduced :: is_defined_var;
var -6..6: X_INTRODUCED_16 ::var_is_introduced :: is_defined_var;
var 0..6: X_INTRODUCED_17 ::var_is_introduced ;
var bool: X_INTRODUCED_18 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_19 ::var_is_introduced :: is_defined_var;
var -6..6: X_INTRODUCED_20 ::var_is_introduced :: is_defined_var;
var 0..6: X_INTRODUCED_21 ::var_is_introduced ;
var bool: X_INTRODUCED_22 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_23 ::var_is_introduced :: is_defined_var;
var -6..6: X_INTRODUCED_24 ::var_is_introduced :: is_defined_var;
var 0..6: X_INTRODUCED_25 ::var_is_introduced ;
var bool: X_INTRODUCED_26 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_27 ::var_is_introduced :: is_defined_var;
var -6..6: X_INTRODUCED_28 ::var_is_introduced :: is_defined_var;
var 0..6: X_INTRODUCED_29 ::var_is_introduced ;
var bool: X_INTRODUCED_30 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_31 ::var_is_introduced :: is_defined_var;
var -6..6: X_INTRODUCED_32 ::var_is_introduced :: is_defined_var;
var 0..6: X_INTRODUCED_33 ::var_is_introduced ;
var bool: X_INTRODUCED_34 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_35 ::var_is_introduced :: is_defined_var;
var -6..6: X_INTRODUCED_36 ::var_is_introduced :: is_defined_var;
var 0..6: X_INTRODUCED_37 ::var_is_introduced ;
var bool: X_INTRODUCED_38 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_39 ::var_is_introduced :: is_defined_var;
array [1..7] of var int: positions:: output_array([1..7]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6];
constraint int_abs(X_INTRODUCED_8,X_INTRODUCED_9);
constraint int_abs(X_INTRODUCED_12,X_INTRODUCED_13);
constraint int_abs(X_INTRODUCED_16,X_INTRODUCED_17);
constraint int_abs(X_INTRODUCED_20,X_INTRODUCED_21);
constraint int_abs(X_INTRODUCED_24,X_INTRODUCED_25);
constraint int_abs(X_INTRODUCED_28,X_INTRODUCED_29);
constraint int_abs(X_INTRODUCED_32,X_INTRODUCED_33);
constraint int_abs(X_INTRODUCED_36,X_INTRODUCED_37);
constraint int_lin_eq(X_INTRODUCED_41,[z,X_INTRODUCED_11,X_INTRODUCED_15,X_INTRODUCED_19,X_INTRODUCED_23,X_INTRODUCED_27,X_INTRODUCED_31,X_INTRODUCED_35,X_INTRODUCED_39],0):: defines_var(z);
constraint int_lin_ne(X_INTRODUCED_7,[X_INTRODUCED_0,X_INTRODUCED_1],0);
constraint int_lin_ne(X_INTRODUCED_7,[X_INTRODUCED_0,X_INTRODUCED_2],0);
constraint int_lin_ne(X_INTRODUCED_7,[X_INTRODUCED_0,X_INTRODUCED_3],0);
constraint int_lin_ne(X_INTRODUCED_7,[X_INTRODUCED_0,X_INTRODUCED_4],0);
constraint int_lin_ne(X_INTRODUCED_7,[X_INTRODUCED_0,X_INTRODUCED_5],0);
constraint int_lin_ne(X_INTRODUCED_7,[X_INTRODUCED_0,X_INTRODUCED_6],0);
constraint int_lin_ne(X_INTRODUCED_7,[X_INTRODUCED_1,X_INTRODUCED_2],0);
constraint int_lin_ne(X_INTRODUCED_7,[X_INTRODUCED_1,X_INTRODUCED_3],0);
constraint int_lin_ne(X_INTRODUCED_7,[X_INTRODUCED_1,X_INTRODUCED_4],0);
constraint int_lin_ne(X_INTRODUCED_7,[X_INTRODUCED_1,X_INTRODUCED_5],0);
constraint int_lin_ne(X_INTRODUCED_7,[X_INTRODUCED_1,X_INTRODUCED_6],0);
constraint int_lin_ne(X_INTRODUCED_7,[X_INTRODUCED_2,X_INTRODUCED_3],0);
constraint int_lin_ne(X_INTRODUCED_7,[X_INTRODUCED_2,X_INTRODUCED_4],0);
constraint int_lin_ne(X_INTRODUCED_7,[X_INTRODUCED_2,X_INTRODUCED_5],0);
constraint int_lin_ne(X_INTRODUCED_7,[X_INTRODUCED_2,X_INTRODUCED_6],0);
constraint int_lin_ne(X_INTRODUCED_7,[X_INTRODUCED_3,X_INTRODUCED_4],0);
constraint int_lin_ne(X_INTRODUCED_7,[X_INTRODUCED_3,X_INTRODUCED_5],0);
constraint int_lin_ne(X_INTRODUCED_7,[X_INTRODUCED_3,X_INTRODUCED_6],0);
constraint int_lin_ne(X_INTRODUCED_7,[X_INTRODUCED_4,X_INTRODUCED_5],0);
constraint int_lin_ne(X_INTRODUCED_7,[X_INTRODUCED_4,X_INTRODUCED_6],0);
constraint int_lin_ne(X_INTRODUCED_7,[X_INTRODUCED_5,X_INTRODUCED_6],0);
constraint int_lin_eq([1,-1,-1],[X_INTRODUCED_0,X_INTRODUCED_4,X_INTRODUCED_8],0):: defines_var(X_INTRODUCED_8);
constraint int_eq_reif(X_INTRODUCED_9,1,X_INTRODUCED_10):: defines_var(X_INTRODUCED_10);
constraint bool2int(X_INTRODUCED_10,X_INTRODUCED_11):: defines_var(X_INTRODUCED_11);
constraint int_lin_eq([1,-1,-1],[X_INTRODUCED_0,X_INTRODUCED_5,X_INTRODUCED_12],0):: defines_var(X_INTRODUCED_12);
constraint int_eq_reif(X_INTRODUCED_13,1,X_INTRODUCED_14):: defines_var(X_INTRODUCED_14);
constraint bool2int(X_INTRODUCED_14,X_INTRODUCED_15):: defines_var(X_INTRODUCED_15);
constraint int_lin_eq([1,-1,-1],[X_INTRODUCED_1,X_INTRODUCED_0,X_INTRODUCED_16],0):: defines_var(X_INTRODUCED_16);
constraint int_eq_reif(X_INTRODUCED_17,1,X_INTRODUCED_18):: defines_var(X_INTRODUCED_18);
constraint bool2int(X_INTRODUCED_18,X_INTRODUCED_19):: defines_var(X_INTRODUCED_19);
constraint int_lin_eq([1,-1,-1],[X_INTRODUCED_1,X_INTRODUCED_4,X_INTRODUCED_20],0):: defines_var(X_INTRODUCED_20);
constraint int_eq_reif(X_INTRODUCED_21,1,X_INTRODUCED_22):: defines_var(X_INTRODUCED_22);
constraint bool2int(X_INTRODUCED_22,X_INTRODUCED_23):: defines_var(X_INTRODUCED_23);
constraint int_lin_eq([1,-1,-1],[X_INTRODUCED_3,X_INTRODUCED_2,X_INTRODUCED_24],0):: defines_var(X_INTRODUCED_24);
constraint int_eq_reif(X_INTRODUCED_25,1,X_INTRODUCED_26):: defines_var(X_INTRODUCED_26);
constraint bool2int(X_INTRODUCED_26,X_INTRODUCED_27):: defines_var(X_INTRODUCED_27);
constraint int_lin_eq([1,-1,-1],[X_INTRODUCED_3,X_INTRODUCED_5,X_INTRODUCED_28],0):: defines_var(X_INTRODUCED_28);
constraint int_eq_reif(X_INTRODUCED_29,1,X_INTRODUCED_30):: defines_var(X_INTRODUCED_30);
constraint bool2int(X_INTRODUCED_30,X_INTRODUCED_31):: defines_var(X_INTRODUCED_31);
constraint int_lin_eq([1,-1,-1],[X_INTRODUCED_6,X_INTRODUCED_2,X_INTRODUCED_32],0):: defines_var(X_INTRODUCED_32);
constraint int_eq_reif(X_INTRODUCED_33,1,X_INTRODUCED_34):: defines_var(X_INTRODUCED_34);
constraint bool2int(X_INTRODUCED_34,X_INTRODUCED_35):: defines_var(X_INTRODUCED_35);
constraint int_lin_eq([1,-1,-1],[X_INTRODUCED_6,X_INTRODUCED_3,X_INTRODUCED_36],0):: defines_var(X_INTRODUCED_36);
constraint int_eq_reif(X_INTRODUCED_37,1,X_INTRODUCED_38):: defines_var(X_INTRODUCED_38);
constraint bool2int(X_INTRODUCED_38,X_INTRODUCED_39):: defines_var(X_INTRODUCED_39);
solve :: int_search(positions,first_fail,indomain_min,complete) maximize z;
