array [1..2] of int: X_INTRODUCED_1 = [1,-1];
array [1..2] of int: X_INTRODUCED_4 = [-10,-1];
array [1..5] of int: X_INTRODUCED_11 = [1,-10,-1,-10,-1];
var 0..9: D0:: output_var;
var 0..9: D1:: output_var;
var 0..9: D2:: output_var;
var 1..9: D3:: output_var;
var 0..198: Sum:: is_defined_var;
var int: X_INTRODUCED_6 ::var_is_introduced :: is_defined_var;
var 0..9999: X_INTRODUCED_8 ::var_is_introduced :: is_defined_var;
constraint int_lin_ne(X_INTRODUCED_1,[D0,D1],0);
constraint int_lin_ne(X_INTRODUCED_1,[D0,D2],0);
constraint int_lin_ne(X_INTRODUCED_1,[D0,D3],0);
constraint int_lin_ne(X_INTRODUCED_1,[D1,D2],0);
constraint int_lin_ne(X_INTRODUCED_1,[D1,D3],0);
constraint int_lin_ne(X_INTRODUCED_1,[D2,D3],0);
constraint int_lin_ne(X_INTRODUCED_4,[D1,D0],-25);
constraint int_lin_ne(X_INTRODUCED_4,[D3,D2],-25);
constraint int_lin_ne(X_INTRODUCED_4,[D1,D0],-30);
constraint int_lin_ne(X_INTRODUCED_4,[D3,D2],-30);
constraint int_eq(X_INTRODUCED_6,X_INTRODUCED_8);
constraint int_lin_eq(X_INTRODUCED_11,[Sum,D1,D2,D3,D0],0):: defines_var(Sum);
constraint int_times(Sum,Sum,X_INTRODUCED_6):: defines_var(X_INTRODUCED_6);
constraint int_lin_eq([10,100,1000,1,-1],[D1,D2,D3,D0,X_INTRODUCED_8],0):: defines_var(X_INTRODUCED_8);
solve  satisfy;
