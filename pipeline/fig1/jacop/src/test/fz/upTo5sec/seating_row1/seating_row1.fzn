array [1..2] of int: X_INTRODUCED_109 = [1,-1];
var 1..6: X_INTRODUCED_0;
var 1..6: X_INTRODUCED_1;
var 1..6: X_INTRODUCED_2;
var 1..6: X_INTRODUCED_3;
var 1..6: X_INTRODUCED_4;
var 1..6: X_INTRODUCED_5;
var bool: X_INTRODUCED_6 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_7 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_8 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_9 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_10 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_11 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_13 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_14 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_15 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_16 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_17 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_18 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_20 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_21 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_22 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_23 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_24 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_25 ::var_is_introduced :: is_defined_var;
var -2..2: X_INTRODUCED_29 ::var_is_introduced ;
var -2..2: X_INTRODUCED_31 ::var_is_introduced ;
var bool: X_INTRODUCED_32 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_33 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_34 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_35 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_36 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_38 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_39 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_40 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_41 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_43 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_44 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_45 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_46 ::var_is_introduced :: is_defined_var;
var -2..2: X_INTRODUCED_50 ::var_is_introduced ;
var bool: X_INTRODUCED_51 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_52 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_53 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_54 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_55 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_57 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_58 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_59 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_60 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_62 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_63 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_64 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_65 ::var_is_introduced :: is_defined_var;
var -2..2: X_INTRODUCED_69 ::var_is_introduced ;
var bool: X_INTRODUCED_70 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_71 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_72 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_73 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_74 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_76 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_77 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_78 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_79 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_81 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_82 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_83 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_84 ::var_is_introduced :: is_defined_var;
var -2..2: X_INTRODUCED_88 ::var_is_introduced ;
var bool: X_INTRODUCED_89 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_90 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_91 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_92 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_93 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_95 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_96 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_97 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_98 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_100 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_101 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_102 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_103 ::var_is_introduced :: is_defined_var;
var -2..2: X_INTRODUCED_107 ::var_is_introduced ;
var bool: X_INTRODUCED_108 ::var_is_introduced :: is_defined_var;
array [1..6] of var int: x:: output_array([1..6]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5];
constraint int_mod(X_INTRODUCED_1,2,X_INTRODUCED_29);
constraint int_mod(X_INTRODUCED_0,2,X_INTRODUCED_31);
constraint array_bool_or([X_INTRODUCED_8,X_INTRODUCED_11,X_INTRODUCED_15,X_INTRODUCED_18,X_INTRODUCED_22,X_INTRODUCED_25,X_INTRODUCED_32],true);
constraint int_mod(X_INTRODUCED_2,2,X_INTRODUCED_50);
constraint array_bool_or([X_INTRODUCED_34,X_INTRODUCED_36,X_INTRODUCED_39,X_INTRODUCED_41,X_INTRODUCED_44,X_INTRODUCED_46,X_INTRODUCED_51],true);
constraint int_mod(X_INTRODUCED_3,2,X_INTRODUCED_69);
constraint array_bool_or([X_INTRODUCED_53,X_INTRODUCED_55,X_INTRODUCED_58,X_INTRODUCED_60,X_INTRODUCED_63,X_INTRODUCED_65,X_INTRODUCED_70],true);
constraint int_mod(X_INTRODUCED_4,2,X_INTRODUCED_88);
constraint array_bool_or([X_INTRODUCED_72,X_INTRODUCED_74,X_INTRODUCED_77,X_INTRODUCED_79,X_INTRODUCED_82,X_INTRODUCED_84,X_INTRODUCED_89],true);
constraint int_mod(X_INTRODUCED_5,2,X_INTRODUCED_107);
constraint array_bool_or([X_INTRODUCED_91,X_INTRODUCED_93,X_INTRODUCED_96,X_INTRODUCED_98,X_INTRODUCED_101,X_INTRODUCED_103,X_INTRODUCED_108],true);
constraint int_lin_ne(X_INTRODUCED_109,[X_INTRODUCED_0,X_INTRODUCED_1],0);
constraint int_lin_ne(X_INTRODUCED_109,[X_INTRODUCED_0,X_INTRODUCED_2],0);
constraint int_lin_ne(X_INTRODUCED_109,[X_INTRODUCED_0,X_INTRODUCED_3],0);
constraint int_lin_ne(X_INTRODUCED_109,[X_INTRODUCED_0,X_INTRODUCED_4],0);
constraint int_lin_ne(X_INTRODUCED_109,[X_INTRODUCED_0,X_INTRODUCED_5],0);
constraint int_lin_ne(X_INTRODUCED_109,[X_INTRODUCED_1,X_INTRODUCED_2],0);
constraint int_lin_ne(X_INTRODUCED_109,[X_INTRODUCED_1,X_INTRODUCED_3],0);
constraint int_lin_ne(X_INTRODUCED_109,[X_INTRODUCED_1,X_INTRODUCED_4],0);
constraint int_lin_ne(X_INTRODUCED_109,[X_INTRODUCED_1,X_INTRODUCED_5],0);
constraint int_lin_ne(X_INTRODUCED_109,[X_INTRODUCED_2,X_INTRODUCED_3],0);
constraint int_lin_ne(X_INTRODUCED_109,[X_INTRODUCED_2,X_INTRODUCED_4],0);
constraint int_lin_ne(X_INTRODUCED_109,[X_INTRODUCED_2,X_INTRODUCED_5],0);
constraint int_lin_ne(X_INTRODUCED_109,[X_INTRODUCED_3,X_INTRODUCED_4],0);
constraint int_lin_ne(X_INTRODUCED_109,[X_INTRODUCED_3,X_INTRODUCED_5],0);
constraint int_lin_ne(X_INTRODUCED_109,[X_INTRODUCED_4,X_INTRODUCED_5],0);
constraint int_eq_reif(X_INTRODUCED_1,2,X_INTRODUCED_6):: defines_var(X_INTRODUCED_6);
constraint int_eq_reif(X_INTRODUCED_0,1,X_INTRODUCED_7):: defines_var(X_INTRODUCED_7);
constraint array_bool_and([X_INTRODUCED_6,X_INTRODUCED_7],X_INTRODUCED_8):: defines_var(X_INTRODUCED_8);
constraint int_eq_reif(X_INTRODUCED_0,2,X_INTRODUCED_9):: defines_var(X_INTRODUCED_9);
constraint int_eq_reif(X_INTRODUCED_1,1,X_INTRODUCED_10):: defines_var(X_INTRODUCED_10);
constraint array_bool_and([X_INTRODUCED_9,X_INTRODUCED_10],X_INTRODUCED_11):: defines_var(X_INTRODUCED_11);
constraint int_eq_reif(X_INTRODUCED_1,4,X_INTRODUCED_13):: defines_var(X_INTRODUCED_13);
constraint int_eq_reif(X_INTRODUCED_0,3,X_INTRODUCED_14):: defines_var(X_INTRODUCED_14);
constraint array_bool_and([X_INTRODUCED_13,X_INTRODUCED_14],X_INTRODUCED_15):: defines_var(X_INTRODUCED_15);
constraint int_eq_reif(X_INTRODUCED_0,4,X_INTRODUCED_16):: defines_var(X_INTRODUCED_16);
constraint int_eq_reif(X_INTRODUCED_1,3,X_INTRODUCED_17):: defines_var(X_INTRODUCED_17);
constraint array_bool_and([X_INTRODUCED_16,X_INTRODUCED_17],X_INTRODUCED_18):: defines_var(X_INTRODUCED_18);
constraint int_eq_reif(X_INTRODUCED_1,6,X_INTRODUCED_20):: defines_var(X_INTRODUCED_20);
constraint int_eq_reif(X_INTRODUCED_0,5,X_INTRODUCED_21):: defines_var(X_INTRODUCED_21);
constraint array_bool_and([X_INTRODUCED_20,X_INTRODUCED_21],X_INTRODUCED_22):: defines_var(X_INTRODUCED_22);
constraint int_eq_reif(X_INTRODUCED_0,6,X_INTRODUCED_23):: defines_var(X_INTRODUCED_23);
constraint int_eq_reif(X_INTRODUCED_1,5,X_INTRODUCED_24):: defines_var(X_INTRODUCED_24);
constraint array_bool_and([X_INTRODUCED_23,X_INTRODUCED_24],X_INTRODUCED_25):: defines_var(X_INTRODUCED_25);
constraint int_eq_reif(X_INTRODUCED_29,X_INTRODUCED_31,X_INTRODUCED_32):: defines_var(X_INTRODUCED_32);
constraint int_eq_reif(X_INTRODUCED_2,2,X_INTRODUCED_33):: defines_var(X_INTRODUCED_33);
constraint array_bool_and([X_INTRODUCED_10,X_INTRODUCED_33],X_INTRODUCED_34):: defines_var(X_INTRODUCED_34);
constraint int_eq_reif(X_INTRODUCED_2,1,X_INTRODUCED_35):: defines_var(X_INTRODUCED_35);
constraint array_bool_and([X_INTRODUCED_6,X_INTRODUCED_35],X_INTRODUCED_36):: defines_var(X_INTRODUCED_36);
constraint int_eq_reif(X_INTRODUCED_2,4,X_INTRODUCED_38):: defines_var(X_INTRODUCED_38);
constraint array_bool_and([X_INTRODUCED_17,X_INTRODUCED_38],X_INTRODUCED_39):: defines_var(X_INTRODUCED_39);
constraint int_eq_reif(X_INTRODUCED_2,3,X_INTRODUCED_40):: defines_var(X_INTRODUCED_40);
constraint array_bool_and([X_INTRODUCED_13,X_INTRODUCED_40],X_INTRODUCED_41):: defines_var(X_INTRODUCED_41);
constraint int_eq_reif(X_INTRODUCED_2,6,X_INTRODUCED_43):: defines_var(X_INTRODUCED_43);
constraint array_bool_and([X_INTRODUCED_24,X_INTRODUCED_43],X_INTRODUCED_44):: defines_var(X_INTRODUCED_44);
constraint int_eq_reif(X_INTRODUCED_2,5,X_INTRODUCED_45):: defines_var(X_INTRODUCED_45);
constraint array_bool_and([X_INTRODUCED_20,X_INTRODUCED_45],X_INTRODUCED_46):: defines_var(X_INTRODUCED_46);
constraint int_eq_reif(X_INTRODUCED_50,X_INTRODUCED_29,X_INTRODUCED_51):: defines_var(X_INTRODUCED_51);
constraint int_eq_reif(X_INTRODUCED_3,2,X_INTRODUCED_52):: defines_var(X_INTRODUCED_52);
constraint array_bool_and([X_INTRODUCED_35,X_INTRODUCED_52],X_INTRODUCED_53):: defines_var(X_INTRODUCED_53);
constraint int_eq_reif(X_INTRODUCED_3,1,X_INTRODUCED_54):: defines_var(X_INTRODUCED_54);
constraint array_bool_and([X_INTRODUCED_33,X_INTRODUCED_54],X_INTRODUCED_55):: defines_var(X_INTRODUCED_55);
constraint int_eq_reif(X_INTRODUCED_3,4,X_INTRODUCED_57):: defines_var(X_INTRODUCED_57);
constraint array_bool_and([X_INTRODUCED_40,X_INTRODUCED_57],X_INTRODUCED_58):: defines_var(X_INTRODUCED_58);
constraint int_eq_reif(X_INTRODUCED_3,3,X_INTRODUCED_59):: defines_var(X_INTRODUCED_59);
constraint array_bool_and([X_INTRODUCED_38,X_INTRODUCED_59],X_INTRODUCED_60):: defines_var(X_INTRODUCED_60);
constraint int_eq_reif(X_INTRODUCED_3,6,X_INTRODUCED_62):: defines_var(X_INTRODUCED_62);
constraint array_bool_and([X_INTRODUCED_45,X_INTRODUCED_62],X_INTRODUCED_63):: defines_var(X_INTRODUCED_63);
constraint int_eq_reif(X_INTRODUCED_3,5,X_INTRODUCED_64):: defines_var(X_INTRODUCED_64);
constraint array_bool_and([X_INTRODUCED_43,X_INTRODUCED_64],X_INTRODUCED_65):: defines_var(X_INTRODUCED_65);
constraint int_eq_reif(X_INTRODUCED_69,X_INTRODUCED_50,X_INTRODUCED_70):: defines_var(X_INTRODUCED_70);
constraint int_eq_reif(X_INTRODUCED_4,2,X_INTRODUCED_71):: defines_var(X_INTRODUCED_71);
constraint array_bool_and([X_INTRODUCED_54,X_INTRODUCED_71],X_INTRODUCED_72):: defines_var(X_INTRODUCED_72);
constraint int_eq_reif(X_INTRODUCED_4,1,X_INTRODUCED_73):: defines_var(X_INTRODUCED_73);
constraint array_bool_and([X_INTRODUCED_52,X_INTRODUCED_73],X_INTRODUCED_74):: defines_var(X_INTRODUCED_74);
constraint int_eq_reif(X_INTRODUCED_4,4,X_INTRODUCED_76):: defines_var(X_INTRODUCED_76);
constraint array_bool_and([X_INTRODUCED_59,X_INTRODUCED_76],X_INTRODUCED_77):: defines_var(X_INTRODUCED_77);
constraint int_eq_reif(X_INTRODUCED_4,3,X_INTRODUCED_78):: defines_var(X_INTRODUCED_78);
constraint array_bool_and([X_INTRODUCED_57,X_INTRODUCED_78],X_INTRODUCED_79):: defines_var(X_INTRODUCED_79);
constraint int_eq_reif(X_INTRODUCED_4,6,X_INTRODUCED_81):: defines_var(X_INTRODUCED_81);
constraint array_bool_and([X_INTRODUCED_64,X_INTRODUCED_81],X_INTRODUCED_82):: defines_var(X_INTRODUCED_82);
constraint int_eq_reif(X_INTRODUCED_4,5,X_INTRODUCED_83):: defines_var(X_INTRODUCED_83);
constraint array_bool_and([X_INTRODUCED_62,X_INTRODUCED_83],X_INTRODUCED_84):: defines_var(X_INTRODUCED_84);
constraint int_eq_reif(X_INTRODUCED_88,X_INTRODUCED_69,X_INTRODUCED_89):: defines_var(X_INTRODUCED_89);
constraint int_eq_reif(X_INTRODUCED_5,2,X_INTRODUCED_90):: defines_var(X_INTRODUCED_90);
constraint array_bool_and([X_INTRODUCED_73,X_INTRODUCED_90],X_INTRODUCED_91):: defines_var(X_INTRODUCED_91);
constraint int_eq_reif(X_INTRODUCED_5,1,X_INTRODUCED_92):: defines_var(X_INTRODUCED_92);
constraint array_bool_and([X_INTRODUCED_71,X_INTRODUCED_92],X_INTRODUCED_93):: defines_var(X_INTRODUCED_93);
constraint int_eq_reif(X_INTRODUCED_5,4,X_INTRODUCED_95):: defines_var(X_INTRODUCED_95);
constraint array_bool_and([X_INTRODUCED_78,X_INTRODUCED_95],X_INTRODUCED_96):: defines_var(X_INTRODUCED_96);
constraint int_eq_reif(X_INTRODUCED_5,3,X_INTRODUCED_97):: defines_var(X_INTRODUCED_97);
constraint array_bool_and([X_INTRODUCED_76,X_INTRODUCED_97],X_INTRODUCED_98):: defines_var(X_INTRODUCED_98);
constraint int_eq_reif(X_INTRODUCED_5,6,X_INTRODUCED_100):: defines_var(X_INTRODUCED_100);
constraint array_bool_and([X_INTRODUCED_83,X_INTRODUCED_100],X_INTRODUCED_101):: defines_var(X_INTRODUCED_101);
constraint int_eq_reif(X_INTRODUCED_5,5,X_INTRODUCED_102):: defines_var(X_INTRODUCED_102);
constraint array_bool_and([X_INTRODUCED_81,X_INTRODUCED_102],X_INTRODUCED_103):: defines_var(X_INTRODUCED_103);
constraint int_eq_reif(X_INTRODUCED_107,X_INTRODUCED_88,X_INTRODUCED_108):: defines_var(X_INTRODUCED_108);
solve :: int_search(x,first_fail,indomain_split,complete) satisfy;
