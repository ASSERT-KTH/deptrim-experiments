var 0..1: X_INTRODUCED_0;
var 0..1: X_INTRODUCED_1;
var 0..1: X_INTRODUCED_2;
var 0..1: X_INTRODUCED_4;
var 0..1: X_INTRODUCED_5;
var 0..1: X_INTRODUCED_6;
var 0..1: X_INTRODUCED_8;
var 0..1: X_INTRODUCED_9;
var 0..1: X_INTRODUCED_10;
var 0..1: X_INTRODUCED_11;
var 0..1: X_INTRODUCED_12;
var 0..1: X_INTRODUCED_16;
var 0..1: X_INTRODUCED_20;
var 0..1: X_INTRODUCED_21;
var 0..1: X_INTRODUCED_22;
var 0..1: X_INTRODUCED_27;
var 0..1: X_INTRODUCED_32;
var 0..1: X_INTRODUCED_44;
var 0..1: X_INTRODUCED_49;
var 0..1: X_INTRODUCED_54;
var 0..1: X_INTRODUCED_55;
var 0..1: X_INTRODUCED_56;
var 0..1: X_INTRODUCED_57;
var 0..1: X_INTRODUCED_59;
var 0..1: X_INTRODUCED_61;
var 0..1: X_INTRODUCED_63;
var 0..1: X_INTRODUCED_64;
var 0..1: X_INTRODUCED_65;
var 0..1: X_INTRODUCED_66;
var 0..1: X_INTRODUCED_71;
var 0..1: X_INTRODUCED_76;
var 0..1: X_INTRODUCED_88;
var 0..1: X_INTRODUCED_93;
var 0..1: X_INTRODUCED_98;
var 0..1: X_INTRODUCED_99;
var 0..1: X_INTRODUCED_100;
var 0..1: X_INTRODUCED_104;
var 0..1: X_INTRODUCED_108;
var 0..1: X_INTRODUCED_109;
var 0..1: X_INTRODUCED_110;
var 0..1: X_INTRODUCED_111;
var 0..1: X_INTRODUCED_112;
var 0..1: X_INTRODUCED_114;
var 0..1: X_INTRODUCED_115;
var 0..1: X_INTRODUCED_116;
var 0..1: X_INTRODUCED_118;
var 0..1: X_INTRODUCED_119;
var 0..1: X_INTRODUCED_120;
array [1..121] of var int: mines:: output_array([1..11,1..11]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,0,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,0,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,0,0,0,X_INTRODUCED_16,0,0,0,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,0,0,0,0,X_INTRODUCED_27,0,0,0,0,X_INTRODUCED_32,0,0,0,0,0,0,0,0,0,0,0,X_INTRODUCED_44,0,0,0,0,X_INTRODUCED_49,0,0,0,0,X_INTRODUCED_54,X_INTRODUCED_55,X_INTRODUCED_56,X_INTRODUCED_57,0,X_INTRODUCED_59,0,X_INTRODUCED_61,0,X_INTRODUCED_63,X_INTRODUCED_64,X_INTRODUCED_65,X_INTRODUCED_66,0,0,0,0,X_INTRODUCED_71,0,0,0,0,X_INTRODUCED_76,0,0,0,0,0,0,0,0,0,0,0,X_INTRODUCED_88,0,0,0,0,X_INTRODUCED_93,0,0,0,0,X_INTRODUCED_98,X_INTRODUCED_99,X_INTRODUCED_100,0,0,0,X_INTRODUCED_104,0,0,0,X_INTRODUCED_108,X_INTRODUCED_109,X_INTRODUCED_110,X_INTRODUCED_111,X_INTRODUCED_112,0,X_INTRODUCED_114,X_INTRODUCED_115,X_INTRODUCED_116,0,X_INTRODUCED_118,X_INTRODUCED_119,X_INTRODUCED_120];
array [1..121] of var int: X_INTRODUCED_185 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,0,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,0,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,0,0,0,X_INTRODUCED_16,0,0,0,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,0,0,0,0,X_INTRODUCED_27,0,0,0,0,X_INTRODUCED_32,0,0,0,0,0,0,0,0,0,0,0,X_INTRODUCED_44,0,0,0,0,X_INTRODUCED_49,0,0,0,0,X_INTRODUCED_54,X_INTRODUCED_55,X_INTRODUCED_56,X_INTRODUCED_57,0,X_INTRODUCED_59,0,X_INTRODUCED_61,0,X_INTRODUCED_63,X_INTRODUCED_64,X_INTRODUCED_65,X_INTRODUCED_66,0,0,0,0,X_INTRODUCED_71,0,0,0,0,X_INTRODUCED_76,0,0,0,0,0,0,0,0,0,0,0,X_INTRODUCED_88,0,0,0,0,X_INTRODUCED_93,0,0,0,0,X_INTRODUCED_98,X_INTRODUCED_99,X_INTRODUCED_100,0,0,0,X_INTRODUCED_104,0,0,0,X_INTRODUCED_108,X_INTRODUCED_109,X_INTRODUCED_110,X_INTRODUCED_111,X_INTRODUCED_112,0,X_INTRODUCED_114,X_INTRODUCED_115,X_INTRODUCED_116,0,X_INTRODUCED_118,X_INTRODUCED_119,X_INTRODUCED_120];
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_2,X_INTRODUCED_4],0);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_6,X_INTRODUCED_8],0);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_2,X_INTRODUCED_4],0);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1],[X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_16,X_INTRODUCED_27],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1],[X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_16,X_INTRODUCED_27],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_6,X_INTRODUCED_8],0);
constraint int_ne(0,1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_16,X_INTRODUCED_27],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_16,X_INTRODUCED_27],-1);
constraint int_ne(0,1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_22,X_INTRODUCED_44],0);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_22,X_INTRODUCED_44],0);
constraint int_ne(0,1);
constraint int_ne(0,1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_27,X_INTRODUCED_49],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_27,X_INTRODUCED_49],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_27,X_INTRODUCED_49],-1);
constraint int_ne(0,1);
constraint int_ne(0,1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_32,X_INTRODUCED_54],0);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_32,X_INTRODUCED_54],0);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1],[X_INTRODUCED_44,X_INTRODUCED_55,X_INTRODUCED_56,X_INTRODUCED_57],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_56,X_INTRODUCED_57],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_57,X_INTRODUCED_59],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_49,X_INTRODUCED_59],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_49,X_INTRODUCED_61],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_61,X_INTRODUCED_63],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_63,X_INTRODUCED_64],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1],[X_INTRODUCED_54,X_INTRODUCED_63,X_INTRODUCED_64,X_INTRODUCED_65],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_57,X_INTRODUCED_59],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1],[X_INTRODUCED_49,X_INTRODUCED_59,X_INTRODUCED_61,X_INTRODUCED_71],-2);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_61,X_INTRODUCED_63],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1],[X_INTRODUCED_55,X_INTRODUCED_56,X_INTRODUCED_57,X_INTRODUCED_66],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_56,X_INTRODUCED_57],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_57,X_INTRODUCED_59],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_59,X_INTRODUCED_71],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_61,X_INTRODUCED_71],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_61,X_INTRODUCED_63],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_63,X_INTRODUCED_64],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1],[X_INTRODUCED_63,X_INTRODUCED_64,X_INTRODUCED_65,X_INTRODUCED_76],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_66,X_INTRODUCED_88],0);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_66,X_INTRODUCED_88],0);
constraint int_ne(0,1);
constraint int_ne(0,1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_71,X_INTRODUCED_93],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_71,X_INTRODUCED_93],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_71,X_INTRODUCED_93],-1);
constraint int_ne(0,1);
constraint int_ne(0,1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_76,X_INTRODUCED_98],0);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_76,X_INTRODUCED_98],0);
constraint int_ne(0,1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_93,X_INTRODUCED_104],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_93,X_INTRODUCED_104],-1);
constraint int_ne(0,1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_112,X_INTRODUCED_114],0);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1],[X_INTRODUCED_93,X_INTRODUCED_104,X_INTRODUCED_114,X_INTRODUCED_115],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1,-1,-1],[X_INTRODUCED_93,X_INTRODUCED_104,X_INTRODUCED_115,X_INTRODUCED_116],-1);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_116,X_INTRODUCED_118],0);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_112,X_INTRODUCED_114],0);
constraint int_ne(0,1);
constraint int_lin_eq([-1,-1],[X_INTRODUCED_116,X_INTRODUCED_118],0);
solve :: int_search(X_INTRODUCED_185,first_fail,indomain_min,complete) satisfy;
