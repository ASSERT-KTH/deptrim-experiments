array [1..26] of int: X_INTRODUCED_63 = [1,-7,-8,-5,-9,-10,-6,-7,-4,-8,-9,-9,-10,-7,-11,-12,-8,-9,-6,-10,-11,-4,-5,-2,-6,-7];
array [1..5] of int: X_INTRODUCED_65 = [1,1,1,1,1];
var 0..1: X_INTRODUCED_0;
var 0..1: X_INTRODUCED_1;
var 0..1: X_INTRODUCED_2;
var 0..1: X_INTRODUCED_3;
var 0..1: X_INTRODUCED_4;
var 0..1: X_INTRODUCED_5;
var 0..1: X_INTRODUCED_6;
var 0..1: X_INTRODUCED_7;
var 0..1: X_INTRODUCED_8;
var 0..1: X_INTRODUCED_9;
var 0..1: X_INTRODUCED_10;
var 0..1: X_INTRODUCED_11;
var 0..1: X_INTRODUCED_12;
var 0..1: X_INTRODUCED_13;
var 0..1: X_INTRODUCED_14;
var 0..1: X_INTRODUCED_15;
var 0..1: X_INTRODUCED_16;
var 0..1: X_INTRODUCED_17;
var 0..1: X_INTRODUCED_18;
var 0..1: X_INTRODUCED_19;
var 0..1: X_INTRODUCED_20;
var 0..1: X_INTRODUCED_21;
var 0..1: X_INTRODUCED_22;
var 0..1: X_INTRODUCED_23;
var 0..1: X_INTRODUCED_24;
var 0..190: the_sum:: output_var:: is_defined_var;
array [1..25] of var int: x:: output_array([1..5,1..5]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24];
array [1..26] of var int: X_INTRODUCED_62 ::var_is_introduced  = [the_sum,X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24];
constraint int_lin_eq(X_INTRODUCED_63,X_INTRODUCED_62,0):: defines_var(the_sum);
constraint int_lin_eq(X_INTRODUCED_65,[X_INTRODUCED_0,X_INTRODUCED_5,X_INTRODUCED_10,X_INTRODUCED_15,X_INTRODUCED_20],1);
constraint int_lin_eq(X_INTRODUCED_65,[X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4],1);
constraint int_lin_eq(X_INTRODUCED_65,[X_INTRODUCED_1,X_INTRODUCED_6,X_INTRODUCED_11,X_INTRODUCED_16,X_INTRODUCED_21],1);
constraint int_lin_eq(X_INTRODUCED_65,[X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9],1);
constraint int_lin_eq(X_INTRODUCED_65,[X_INTRODUCED_2,X_INTRODUCED_7,X_INTRODUCED_12,X_INTRODUCED_17,X_INTRODUCED_22],1);
constraint int_lin_eq(X_INTRODUCED_65,[X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14],1);
constraint int_lin_eq(X_INTRODUCED_65,[X_INTRODUCED_3,X_INTRODUCED_8,X_INTRODUCED_13,X_INTRODUCED_18,X_INTRODUCED_23],1);
constraint int_lin_eq(X_INTRODUCED_65,[X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19],1);
constraint int_lin_eq(X_INTRODUCED_65,[X_INTRODUCED_4,X_INTRODUCED_9,X_INTRODUCED_14,X_INTRODUCED_19,X_INTRODUCED_24],1);
constraint int_lin_eq(X_INTRODUCED_65,[X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24],1);
solve  satisfy;
