predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_9 = [1,-1];
var 0..0: X_INTRODUCED_0;
var 1..9: X_INTRODUCED_1;
var 0..9: X_INTRODUCED_2;
var 0..0: X_INTRODUCED_3;
var 1..9: X_INTRODUCED_4;
var 0..9: X_INTRODUCED_5;
var 0..0: X_INTRODUCED_6;
var 1..9: X_INTRODUCED_7;
var 0..9: X_INTRODUCED_8;
var 0..9: X_INTRODUCED_12 ::var_is_introduced :: is_defined_var;
var 0..9: X_INTRODUCED_15 ::var_is_introduced :: is_defined_var;
var 0..9: X_INTRODUCED_18 ::var_is_introduced :: is_defined_var;
array [1..3] of var int: mark1:: output_array([1..3]) = [0,X_INTRODUCED_1,X_INTRODUCED_2];
array [1..3] of var int: mark2:: output_array([1..3]) = [0,X_INTRODUCED_4,X_INTRODUCED_5];
array [1..3] of var int: mark3:: output_array([1..3]) = [0,X_INTRODUCED_7,X_INTRODUCED_8];
array [1..3] of var int: differences1 = [X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_12];
array [1..3] of var int: differences2 = [X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_15];
array [1..3] of var int: differences3 = [X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_18];
array [1..3] of var int: X_INTRODUCED_20 ::var_is_introduced  = [1,1,1];
array [1..3] of var int: X_INTRODUCED_21 ::var_is_introduced  = [11,11,11];
array [1..3] of var int: X_INTRODUCED_29 ::var_is_introduced  = [X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_12];
array [1..3] of var int: X_INTRODUCED_30 ::var_is_introduced  = [1,1,1];
array [1..3] of var int: X_INTRODUCED_31 ::var_is_introduced  = [11,11,11];
array [1..3] of var int: X_INTRODUCED_39 ::var_is_introduced  = [X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_15];
array [1..3] of var int: X_INTRODUCED_40 ::var_is_introduced  = [1,1,1];
array [1..3] of var int: X_INTRODUCED_41 ::var_is_introduced  = [11,11,11];
array [1..3] of var int: X_INTRODUCED_49 ::var_is_introduced  = [X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_18];
constraint int_lin_le([2,-1],[X_INTRODUCED_1,X_INTRODUCED_2],-1);
constraint jacop_cumulative(X_INTRODUCED_29,X_INTRODUCED_20,X_INTRODUCED_21,15):: bounds;
constraint int_lin_le(X_INTRODUCED_9,[X_INTRODUCED_1,X_INTRODUCED_2],-1);
constraint int_lin_le([2,-1],[X_INTRODUCED_4,X_INTRODUCED_5],-1);
constraint jacop_cumulative(X_INTRODUCED_39,X_INTRODUCED_30,X_INTRODUCED_31,15):: bounds;
constraint int_lin_le(X_INTRODUCED_9,[X_INTRODUCED_4,X_INTRODUCED_5],-1);
constraint int_lin_le([2,-1],[X_INTRODUCED_7,X_INTRODUCED_8],-1);
constraint jacop_cumulative(X_INTRODUCED_49,X_INTRODUCED_40,X_INTRODUCED_41,15):: bounds;
constraint int_lin_le(X_INTRODUCED_9,[X_INTRODUCED_7,X_INTRODUCED_8],-1);
constraint int_lin_eq([1,-1,-1],[X_INTRODUCED_2,X_INTRODUCED_1,X_INTRODUCED_12],0):: defines_var(X_INTRODUCED_12);
constraint int_lin_eq([1,-1,-1],[X_INTRODUCED_5,X_INTRODUCED_4,X_INTRODUCED_15],0):: defines_var(X_INTRODUCED_15);
constraint int_lin_eq([1,-1,-1],[X_INTRODUCED_8,X_INTRODUCED_7,X_INTRODUCED_18],0):: defines_var(X_INTRODUCED_18);
solve :: int_search([X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8],input_order,indomain_min,complete) minimize X_INTRODUCED_5;
