predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_13 = [1,-1];
var 1..9: X_INTRODUCED_1;
var 0..9: X_INTRODUCED_2;
var 1..16: X_INTRODUCED_4;
var 0..16: X_INTRODUCED_5;
var 0..16: X_INTRODUCED_6;
var 1..36: X_INTRODUCED_8;
var 0..36: X_INTRODUCED_9;
var 0..36: X_INTRODUCED_10;
var 0..36: X_INTRODUCED_11;
var 0..36: X_INTRODUCED_12;
var 0..9: X_INTRODUCED_16 ::var_is_introduced :: is_defined_var;
var 0..16: X_INTRODUCED_20 ::var_is_introduced :: is_defined_var;
var 0..16: X_INTRODUCED_21 ::var_is_introduced :: is_defined_var;
var 0..16: X_INTRODUCED_22 ::var_is_introduced :: is_defined_var;
var 0..36: X_INTRODUCED_28 ::var_is_introduced :: is_defined_var;
var 0..36: X_INTRODUCED_29 ::var_is_introduced :: is_defined_var;
var 0..36: X_INTRODUCED_30 ::var_is_introduced :: is_defined_var;
var 0..36: X_INTRODUCED_31 ::var_is_introduced :: is_defined_var;
var 0..36: X_INTRODUCED_32 ::var_is_introduced :: is_defined_var;
var 0..36: X_INTRODUCED_33 ::var_is_introduced :: is_defined_var;
var 0..36: X_INTRODUCED_34 ::var_is_introduced :: is_defined_var;
var 0..36: X_INTRODUCED_35 ::var_is_introduced :: is_defined_var;
var 0..36: X_INTRODUCED_36 ::var_is_introduced :: is_defined_var;
var 0..36: X_INTRODUCED_37 ::var_is_introduced :: is_defined_var;
array [1..3] of var int: mark1:: output_array([1..3]) = [0,X_INTRODUCED_1,X_INTRODUCED_2];
array [1..4] of var int: mark2:: output_array([1..4]) = [0,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6];
array [1..6] of var int: mark3:: output_array([1..6]) = [0,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12];
array [1..3] of var int: differences1 = [X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_16];
array [1..6] of var int: differences2 = [X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22];
array [1..15] of var int: differences3 = [X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_28,X_INTRODUCED_29,X_INTRODUCED_30,X_INTRODUCED_31,X_INTRODUCED_32,X_INTRODUCED_33,X_INTRODUCED_34,X_INTRODUCED_35,X_INTRODUCED_36,X_INTRODUCED_37];
array [1..3] of var int: X_INTRODUCED_39 ::var_is_introduced  = [1,1,1];
array [1..3] of var int: X_INTRODUCED_40 ::var_is_introduced  = [11,11,11];
array [1..3] of var int: X_INTRODUCED_48 ::var_is_introduced  = [X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_16];
array [1..6] of var int: X_INTRODUCED_50 ::var_is_introduced  = [1,1,1,1,1,1];
array [1..6] of var int: X_INTRODUCED_51 ::var_is_introduced  = [11,11,11,11,11,11];
array [1..6] of var int: X_INTRODUCED_65 ::var_is_introduced  = [X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22];
array [1..15] of var int: X_INTRODUCED_66 ::var_is_introduced  = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];
array [1..15] of var int: X_INTRODUCED_67 ::var_is_introduced  = [11,11,11,11,11,11,11,11,11,11,11,11,11,11,11];
array [1..15] of var int: X_INTRODUCED_99 ::var_is_introduced  = [X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_28,X_INTRODUCED_29,X_INTRODUCED_30,X_INTRODUCED_31,X_INTRODUCED_32,X_INTRODUCED_33,X_INTRODUCED_34,X_INTRODUCED_35,X_INTRODUCED_36,X_INTRODUCED_37];
array [1..13] of var int: X_INTRODUCED_100 ::var_is_introduced  = [0,X_INTRODUCED_1,X_INTRODUCED_2,0,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,0,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12];
constraint int_lin_le([2,-1],[X_INTRODUCED_1,X_INTRODUCED_2],-1);
constraint jacop_cumulative(X_INTRODUCED_48,X_INTRODUCED_39,X_INTRODUCED_40,15):: bounds;
constraint int_lin_le(X_INTRODUCED_13,[X_INTRODUCED_1,X_INTRODUCED_2],-1);
constraint int_lin_le([1,-1,1],[X_INTRODUCED_4,X_INTRODUCED_6,X_INTRODUCED_5],-1);
constraint jacop_cumulative(X_INTRODUCED_65,X_INTRODUCED_50,X_INTRODUCED_51,15):: bounds;
constraint int_lin_le(X_INTRODUCED_13,[X_INTRODUCED_4,X_INTRODUCED_5],-1);
constraint int_lin_le(X_INTRODUCED_13,[X_INTRODUCED_5,X_INTRODUCED_6],-1);
constraint int_lin_le([1,-1,1],[X_INTRODUCED_8,X_INTRODUCED_12,X_INTRODUCED_11],-1);
constraint jacop_cumulative(X_INTRODUCED_99,X_INTRODUCED_66,X_INTRODUCED_67,15):: bounds;
constraint int_lin_le(X_INTRODUCED_13,[X_INTRODUCED_8,X_INTRODUCED_9],-1);
constraint int_lin_le(X_INTRODUCED_13,[X_INTRODUCED_9,X_INTRODUCED_10],-1);
constraint int_lin_le(X_INTRODUCED_13,[X_INTRODUCED_10,X_INTRODUCED_11],-1);
constraint int_lin_le(X_INTRODUCED_13,[X_INTRODUCED_11,X_INTRODUCED_12],-1);
constraint int_lin_eq([1,-1,-1],[X_INTRODUCED_2,X_INTRODUCED_1,X_INTRODUCED_16],0):: defines_var(X_INTRODUCED_16);
constraint int_lin_eq([1,-1,-1],[X_INTRODUCED_5,X_INTRODUCED_4,X_INTRODUCED_20],0):: defines_var(X_INTRODUCED_20);
constraint int_lin_eq([1,-1,-1],[X_INTRODUCED_6,X_INTRODUCED_4,X_INTRODUCED_21],0):: defines_var(X_INTRODUCED_21);
constraint int_lin_eq([1,-1,-1],[X_INTRODUCED_6,X_INTRODUCED_5,X_INTRODUCED_22],0):: defines_var(X_INTRODUCED_22);
constraint int_lin_eq([1,-1,-1],[X_INTRODUCED_9,X_INTRODUCED_8,X_INTRODUCED_28],0):: defines_var(X_INTRODUCED_28);
constraint int_lin_eq([1,-1,-1],[X_INTRODUCED_10,X_INTRODUCED_8,X_INTRODUCED_29],0):: defines_var(X_INTRODUCED_29);
constraint int_lin_eq([1,-1,-1],[X_INTRODUCED_11,X_INTRODUCED_8,X_INTRODUCED_30],0):: defines_var(X_INTRODUCED_30);
constraint int_lin_eq([1,-1,-1],[X_INTRODUCED_12,X_INTRODUCED_8,X_INTRODUCED_31],0):: defines_var(X_INTRODUCED_31);
constraint int_lin_eq([1,-1,-1],[X_INTRODUCED_10,X_INTRODUCED_9,X_INTRODUCED_32],0):: defines_var(X_INTRODUCED_32);
constraint int_lin_eq([1,-1,-1],[X_INTRODUCED_11,X_INTRODUCED_9,X_INTRODUCED_33],0):: defines_var(X_INTRODUCED_33);
constraint int_lin_eq([1,-1,-1],[X_INTRODUCED_12,X_INTRODUCED_9,X_INTRODUCED_34],0):: defines_var(X_INTRODUCED_34);
constraint int_lin_eq([1,-1,-1],[X_INTRODUCED_11,X_INTRODUCED_10,X_INTRODUCED_35],0):: defines_var(X_INTRODUCED_35);
constraint int_lin_eq([1,-1,-1],[X_INTRODUCED_12,X_INTRODUCED_10,X_INTRODUCED_36],0):: defines_var(X_INTRODUCED_36);
constraint int_lin_eq([1,-1,-1],[X_INTRODUCED_12,X_INTRODUCED_11,X_INTRODUCED_37],0):: defines_var(X_INTRODUCED_37);
solve :: int_search(X_INTRODUCED_100,input_order,indomain_min,complete) minimize X_INTRODUCED_6;
