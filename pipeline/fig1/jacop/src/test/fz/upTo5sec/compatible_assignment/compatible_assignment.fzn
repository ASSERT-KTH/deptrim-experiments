array [1..2] of int: X_INTRODUCED_4 = [1,-1];
array [1..6] of int: X_INTRODUCED_35 = [2,3,4,2,3,1];
array [1..6] of int: X_INTRODUCED_38 = [6,6,7,3,1,2];
array [1..6] of int: X_INTRODUCED_41 = [8,7,8,4,3,1];
array [1..6] of int: X_INTRODUCED_44 = [7,7,6,3,1,2];
var 1..6: X_INTRODUCED_0;
var 1..6: X_INTRODUCED_1;
var 1..6: X_INTRODUCED_2;
var 1..6: X_INTRODUCED_3;
var bool: X_INTRODUCED_7 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_8 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_10 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_12 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_15 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_16 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_18 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_20 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_23 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_24 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_26 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_29 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_30 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_32 ::var_is_introduced :: is_defined_var;
var 1..4: X_INTRODUCED_37 ::var_is_introduced :: is_defined_var;
var 1..7: X_INTRODUCED_40 ::var_is_introduced :: is_defined_var;
var 1..8: X_INTRODUCED_43 ::var_is_introduced :: is_defined_var;
var 1..7: X_INTRODUCED_46 ::var_is_introduced :: is_defined_var;
var 4..26: X_INTRODUCED_47 ::var_is_introduced :: is_defined_var;
array [1..4] of var int: task:: output_array([1..4]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3];
constraint int_lin_ne(X_INTRODUCED_4,[X_INTRODUCED_0,X_INTRODUCED_1],0);
constraint int_lin_ne(X_INTRODUCED_4,[X_INTRODUCED_0,X_INTRODUCED_2],0);
constraint int_lin_ne(X_INTRODUCED_4,[X_INTRODUCED_0,X_INTRODUCED_3],0);
constraint int_lin_ne(X_INTRODUCED_4,[X_INTRODUCED_1,X_INTRODUCED_2],0);
constraint int_lin_ne(X_INTRODUCED_4,[X_INTRODUCED_1,X_INTRODUCED_3],0);
constraint int_lin_ne(X_INTRODUCED_4,[X_INTRODUCED_2,X_INTRODUCED_3],0);
constraint array_int_element(X_INTRODUCED_0,X_INTRODUCED_35,X_INTRODUCED_37):: defines_var(X_INTRODUCED_37);
constraint array_int_element(X_INTRODUCED_1,X_INTRODUCED_38,X_INTRODUCED_40):: defines_var(X_INTRODUCED_40);
constraint array_int_element(X_INTRODUCED_2,X_INTRODUCED_41,X_INTRODUCED_43):: defines_var(X_INTRODUCED_43);
constraint array_int_element(X_INTRODUCED_3,X_INTRODUCED_44,X_INTRODUCED_46):: defines_var(X_INTRODUCED_46);
constraint bool_clause([],[X_INTRODUCED_7,X_INTRODUCED_8]);
constraint bool_clause([],[X_INTRODUCED_8,X_INTRODUCED_10]);
constraint bool_clause([],[X_INTRODUCED_8,X_INTRODUCED_12]);
constraint bool_clause([],[X_INTRODUCED_15,X_INTRODUCED_16]);
constraint bool_clause([],[X_INTRODUCED_16,X_INTRODUCED_18]);
constraint bool_clause([],[X_INTRODUCED_16,X_INTRODUCED_20]);
constraint bool_clause([],[X_INTRODUCED_23,X_INTRODUCED_24]);
constraint bool_clause([],[X_INTRODUCED_24,X_INTRODUCED_26]);
constraint bool_clause([],[X_INTRODUCED_29,X_INTRODUCED_30]);
constraint bool_clause([],[X_INTRODUCED_30,X_INTRODUCED_32]);
constraint int_lin_eq_reif(X_INTRODUCED_4,[X_INTRODUCED_1,X_INTRODUCED_0],1,X_INTRODUCED_7):: defines_var(X_INTRODUCED_7);
constraint int_ne_reif(X_INTRODUCED_0,3,X_INTRODUCED_8):: defines_var(X_INTRODUCED_8);
constraint int_lin_eq_reif(X_INTRODUCED_4,[X_INTRODUCED_2,X_INTRODUCED_0],1,X_INTRODUCED_10):: defines_var(X_INTRODUCED_10);
constraint int_lin_eq_reif(X_INTRODUCED_4,[X_INTRODUCED_3,X_INTRODUCED_0],1,X_INTRODUCED_12):: defines_var(X_INTRODUCED_12);
constraint int_lin_eq_reif(X_INTRODUCED_4,[X_INTRODUCED_0,X_INTRODUCED_1],1,X_INTRODUCED_15):: defines_var(X_INTRODUCED_15);
constraint int_ne_reif(X_INTRODUCED_1,3,X_INTRODUCED_16):: defines_var(X_INTRODUCED_16);
constraint int_lin_eq_reif(X_INTRODUCED_4,[X_INTRODUCED_2,X_INTRODUCED_1],1,X_INTRODUCED_18):: defines_var(X_INTRODUCED_18);
constraint int_lin_eq_reif(X_INTRODUCED_4,[X_INTRODUCED_3,X_INTRODUCED_1],1,X_INTRODUCED_20):: defines_var(X_INTRODUCED_20);
constraint int_lin_eq_reif(X_INTRODUCED_4,[X_INTRODUCED_0,X_INTRODUCED_2],1,X_INTRODUCED_23):: defines_var(X_INTRODUCED_23);
constraint int_ne_reif(X_INTRODUCED_2,3,X_INTRODUCED_24):: defines_var(X_INTRODUCED_24);
constraint int_lin_eq_reif(X_INTRODUCED_4,[X_INTRODUCED_1,X_INTRODUCED_2],1,X_INTRODUCED_26):: defines_var(X_INTRODUCED_26);
constraint int_lin_eq_reif(X_INTRODUCED_4,[X_INTRODUCED_0,X_INTRODUCED_3],1,X_INTRODUCED_29):: defines_var(X_INTRODUCED_29);
constraint int_ne_reif(X_INTRODUCED_3,3,X_INTRODUCED_30):: defines_var(X_INTRODUCED_30);
constraint int_lin_eq_reif(X_INTRODUCED_4,[X_INTRODUCED_1,X_INTRODUCED_3],1,X_INTRODUCED_32):: defines_var(X_INTRODUCED_32);
constraint int_lin_eq([1,1,1,1,-1],[X_INTRODUCED_37,X_INTRODUCED_40,X_INTRODUCED_43,X_INTRODUCED_46,X_INTRODUCED_47],0):: defines_var(X_INTRODUCED_47);
solve  maximize X_INTRODUCED_47;
