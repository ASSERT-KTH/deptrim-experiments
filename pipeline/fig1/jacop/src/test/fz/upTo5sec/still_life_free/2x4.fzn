array [1..9] of int: X_INTRODUCED_37 = [1,-1,-1,-1,-1,-1,-1,-1,-1];
var 0..1: X_INTRODUCED_0;
var 0..1: X_INTRODUCED_1;
var 0..1: X_INTRODUCED_2;
var 0..1: X_INTRODUCED_3;
var 0..1: X_INTRODUCED_4;
var 0..1: X_INTRODUCED_5;
var 0..1: X_INTRODUCED_6;
var 0..1: X_INTRODUCED_7;
var 0..1: X_INTRODUCED_8;
var 0..1: X_INTRODUCED_9;
var 0..1: X_INTRODUCED_10;
var 0..1: X_INTRODUCED_11;
var 0..1: X_INTRODUCED_12;
var 0..1: X_INTRODUCED_13;
var 0..1: X_INTRODUCED_14;
var 0..1: X_INTRODUCED_15;
var 0..1: X_INTRODUCED_16;
var 0..1: X_INTRODUCED_17;
var 0..1: X_INTRODUCED_18;
var 0..1: X_INTRODUCED_19;
var 0..1: X_INTRODUCED_20;
var 0..1: X_INTRODUCED_21;
var 0..1: X_INTRODUCED_22;
var 0..1: X_INTRODUCED_23;
var 0..8: X_INTRODUCED_24:: is_defined_var;
var 0..8: X_INTRODUCED_25:: is_defined_var;
var 0..8: X_INTRODUCED_26:: is_defined_var;
var 0..8: X_INTRODUCED_27:: is_defined_var;
var 0..8: X_INTRODUCED_28:: is_defined_var;
var 0..8: X_INTRODUCED_29:: is_defined_var;
var 0..8: X_INTRODUCED_30:: is_defined_var;
var 0..8: X_INTRODUCED_31:: is_defined_var;
var 0..8: cost:: output_var:: is_defined_var;
var bool: X_INTRODUCED_32 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_33 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_34 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_38 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_39 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_40 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_42 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_43 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_44 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_46 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_47 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_48 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_50 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_51 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_52 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_54 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_55 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_56 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_58 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_59 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_60 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_62 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_63 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_64 ::var_is_introduced :: is_defined_var;
array [1..24] of var int: a:: output_array([0..3,0..5]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23];
constraint array_bool_and([X_INTRODUCED_33,X_INTRODUCED_34],X_INTRODUCED_32):: defines_var(X_INTRODUCED_32);
constraint int_lin_eq(X_INTRODUCED_37,[X_INTRODUCED_24,X_INTRODUCED_13,X_INTRODUCED_12,X_INTRODUCED_8,X_INTRODUCED_6,X_INTRODUCED_2,X_INTRODUCED_1,X_INTRODUCED_0,X_INTRODUCED_14],0):: defines_var(X_INTRODUCED_24);
constraint array_bool_and([X_INTRODUCED_39,X_INTRODUCED_40],X_INTRODUCED_38):: defines_var(X_INTRODUCED_38);
constraint int_lin_eq(X_INTRODUCED_37,[X_INTRODUCED_25,X_INTRODUCED_14,X_INTRODUCED_13,X_INTRODUCED_9,X_INTRODUCED_7,X_INTRODUCED_3,X_INTRODUCED_2,X_INTRODUCED_1,X_INTRODUCED_15],0):: defines_var(X_INTRODUCED_25);
constraint array_bool_and([X_INTRODUCED_43,X_INTRODUCED_44],X_INTRODUCED_42):: defines_var(X_INTRODUCED_42);
constraint int_lin_eq(X_INTRODUCED_37,[X_INTRODUCED_26,X_INTRODUCED_15,X_INTRODUCED_14,X_INTRODUCED_10,X_INTRODUCED_8,X_INTRODUCED_4,X_INTRODUCED_3,X_INTRODUCED_2,X_INTRODUCED_16],0):: defines_var(X_INTRODUCED_26);
constraint array_bool_and([X_INTRODUCED_47,X_INTRODUCED_48],X_INTRODUCED_46):: defines_var(X_INTRODUCED_46);
constraint int_lin_eq(X_INTRODUCED_37,[X_INTRODUCED_27,X_INTRODUCED_16,X_INTRODUCED_15,X_INTRODUCED_11,X_INTRODUCED_9,X_INTRODUCED_5,X_INTRODUCED_4,X_INTRODUCED_3,X_INTRODUCED_17],0):: defines_var(X_INTRODUCED_27);
constraint array_bool_and([X_INTRODUCED_51,X_INTRODUCED_52],X_INTRODUCED_50):: defines_var(X_INTRODUCED_50);
constraint int_lin_eq(X_INTRODUCED_37,[X_INTRODUCED_28,X_INTRODUCED_19,X_INTRODUCED_18,X_INTRODUCED_14,X_INTRODUCED_12,X_INTRODUCED_8,X_INTRODUCED_7,X_INTRODUCED_6,X_INTRODUCED_20],0):: defines_var(X_INTRODUCED_28);
constraint array_bool_and([X_INTRODUCED_55,X_INTRODUCED_56],X_INTRODUCED_54):: defines_var(X_INTRODUCED_54);
constraint int_lin_eq(X_INTRODUCED_37,[X_INTRODUCED_29,X_INTRODUCED_20,X_INTRODUCED_19,X_INTRODUCED_15,X_INTRODUCED_13,X_INTRODUCED_9,X_INTRODUCED_8,X_INTRODUCED_7,X_INTRODUCED_21],0):: defines_var(X_INTRODUCED_29);
constraint array_bool_and([X_INTRODUCED_59,X_INTRODUCED_60],X_INTRODUCED_58):: defines_var(X_INTRODUCED_58);
constraint int_lin_eq(X_INTRODUCED_37,[X_INTRODUCED_30,X_INTRODUCED_21,X_INTRODUCED_20,X_INTRODUCED_16,X_INTRODUCED_14,X_INTRODUCED_10,X_INTRODUCED_9,X_INTRODUCED_8,X_INTRODUCED_22],0):: defines_var(X_INTRODUCED_30);
constraint array_bool_and([X_INTRODUCED_63,X_INTRODUCED_64],X_INTRODUCED_62):: defines_var(X_INTRODUCED_62);
constraint int_lin_eq(X_INTRODUCED_37,[X_INTRODUCED_31,X_INTRODUCED_22,X_INTRODUCED_21,X_INTRODUCED_17,X_INTRODUCED_15,X_INTRODUCED_11,X_INTRODUCED_10,X_INTRODUCED_9,X_INTRODUCED_23],0):: defines_var(X_INTRODUCED_31);
constraint int_lin_eq(X_INTRODUCED_37,[cost,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16],0):: defines_var(cost);
constraint int_eq_reif(X_INTRODUCED_7,1,X_INTRODUCED_32):: defines_var(X_INTRODUCED_32);
constraint int_le_reif(X_INTRODUCED_24,3,X_INTRODUCED_33):: defines_var(X_INTRODUCED_33);
constraint int_le_reif(2,X_INTRODUCED_24,X_INTRODUCED_34):: defines_var(X_INTRODUCED_34);
constraint int_eq_reif(X_INTRODUCED_8,1,X_INTRODUCED_38):: defines_var(X_INTRODUCED_38);
constraint int_le_reif(X_INTRODUCED_25,3,X_INTRODUCED_39):: defines_var(X_INTRODUCED_39);
constraint int_le_reif(2,X_INTRODUCED_25,X_INTRODUCED_40):: defines_var(X_INTRODUCED_40);
constraint int_eq_reif(X_INTRODUCED_9,1,X_INTRODUCED_42):: defines_var(X_INTRODUCED_42);
constraint int_le_reif(X_INTRODUCED_26,3,X_INTRODUCED_43):: defines_var(X_INTRODUCED_43);
constraint int_le_reif(2,X_INTRODUCED_26,X_INTRODUCED_44):: defines_var(X_INTRODUCED_44);
constraint int_eq_reif(X_INTRODUCED_10,1,X_INTRODUCED_46):: defines_var(X_INTRODUCED_46);
constraint int_le_reif(X_INTRODUCED_27,3,X_INTRODUCED_47):: defines_var(X_INTRODUCED_47);
constraint int_le_reif(2,X_INTRODUCED_27,X_INTRODUCED_48):: defines_var(X_INTRODUCED_48);
constraint int_eq_reif(X_INTRODUCED_13,1,X_INTRODUCED_50):: defines_var(X_INTRODUCED_50);
constraint int_le_reif(X_INTRODUCED_28,3,X_INTRODUCED_51):: defines_var(X_INTRODUCED_51);
constraint int_le_reif(2,X_INTRODUCED_28,X_INTRODUCED_52):: defines_var(X_INTRODUCED_52);
constraint int_eq_reif(X_INTRODUCED_14,1,X_INTRODUCED_54):: defines_var(X_INTRODUCED_54);
constraint int_le_reif(X_INTRODUCED_29,3,X_INTRODUCED_55):: defines_var(X_INTRODUCED_55);
constraint int_le_reif(2,X_INTRODUCED_29,X_INTRODUCED_56):: defines_var(X_INTRODUCED_56);
constraint int_eq_reif(X_INTRODUCED_15,1,X_INTRODUCED_58):: defines_var(X_INTRODUCED_58);
constraint int_le_reif(X_INTRODUCED_30,3,X_INTRODUCED_59):: defines_var(X_INTRODUCED_59);
constraint int_le_reif(2,X_INTRODUCED_30,X_INTRODUCED_60):: defines_var(X_INTRODUCED_60);
constraint int_eq_reif(X_INTRODUCED_16,1,X_INTRODUCED_62):: defines_var(X_INTRODUCED_62);
constraint int_le_reif(X_INTRODUCED_31,3,X_INTRODUCED_63):: defines_var(X_INTRODUCED_63);
constraint int_le_reif(2,X_INTRODUCED_31,X_INTRODUCED_64):: defines_var(X_INTRODUCED_64);
solve :: int_search([X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16],input_order,indomain_max,complete) maximize cost;
