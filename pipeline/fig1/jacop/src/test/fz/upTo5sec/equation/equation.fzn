array [1..7] of int: X_INTRODUCED_10 = [1,1,1,1,1,1,-1];
array [1..6] of int: X_INTRODUCED_22 = [-100000,-10000,-1000,-100,-10,-1];
array [1..6] of int: X_INTRODUCED_30 = [1,1,1,1,1,1];
var 36..36: x1:: output_var;
var 0..54: x2:: output_var:: is_defined_var;
var 64..64: x3:: output_var;
var 108..108: x4:: output_var;
var 0..9: X_INTRODUCED_3 ::var_is_introduced ;
var 0..9: X_INTRODUCED_4 ::var_is_introduced ;
var 0..9: X_INTRODUCED_5 ::var_is_introduced ;
var 0..9: X_INTRODUCED_6 ::var_is_introduced ;
var 0..9: X_INTRODUCED_7 ::var_is_introduced ;
var 0..9: X_INTRODUCED_8 ::var_is_introduced ;
var 0..9: X_INTRODUCED_23 ::var_is_introduced ;
var 0..9: X_INTRODUCED_24 ::var_is_introduced ;
var 0..9: X_INTRODUCED_25 ::var_is_introduced ;
var 0..9: X_INTRODUCED_26 ::var_is_introduced ;
var 0..9: X_INTRODUCED_27 ::var_is_introduced ;
var 0..9: X_INTRODUCED_28 ::var_is_introduced ;
var 0..9: X_INTRODUCED_37 ::var_is_introduced ;
var 0..9: X_INTRODUCED_38 ::var_is_introduced ;
var 0..9: X_INTRODUCED_39 ::var_is_introduced ;
var 0..9: X_INTRODUCED_40 ::var_is_introduced ;
var 0..9: X_INTRODUCED_41 ::var_is_introduced ;
var 0..9: X_INTRODUCED_42 ::var_is_introduced ;
constraint int_lin_eq(X_INTRODUCED_10,[X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,x2],0):: defines_var(x2);
constraint int_lin_eq(X_INTRODUCED_22,[X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8],-1089);
constraint int_lin_eq(X_INTRODUCED_30,[X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28],16);
constraint int_lin_eq(X_INTRODUCED_22,[X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28],-484);
constraint int_lin_eq(X_INTRODUCED_30,[X_INTRODUCED_37,X_INTRODUCED_38,X_INTRODUCED_39,X_INTRODUCED_40,X_INTRODUCED_41,X_INTRODUCED_42],4);
constraint int_lin_eq(X_INTRODUCED_22,[X_INTRODUCED_37,X_INTRODUCED_38,X_INTRODUCED_39,X_INTRODUCED_40,X_INTRODUCED_41,X_INTRODUCED_42],-121);
solve  satisfy;
