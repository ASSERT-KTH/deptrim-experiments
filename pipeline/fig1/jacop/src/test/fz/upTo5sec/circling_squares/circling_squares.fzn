array [1..4] of int: X_INTRODUCED_7 = [1,1,-1,-1];
array [1..2] of int: X_INTRODUCED_23 = [1,-1];
var 16..16: A:: output_var;
var 2..2: B:: output_var;
var 1..99: C:: output_var;
var 1..99: D:: output_var;
var 1..99: E:: output_var;
var 8..8: F:: output_var;
var 14..14: G:: output_var;
var 1..99: H:: output_var;
var 1..99: I:: output_var;
var 1..99: K:: output_var;
var 1..9801: X_INTRODUCED_0 ::var_is_introduced :: is_defined_var;
var 1..9801: X_INTRODUCED_1 ::var_is_introduced :: is_defined_var;
var 1..9801: X_INTRODUCED_4 ::var_is_introduced :: is_defined_var;
var 1..9801: X_INTRODUCED_5 ::var_is_introduced :: is_defined_var;
var 1..9801: X_INTRODUCED_8 ::var_is_introduced :: is_defined_var;
var 1..9801: X_INTRODUCED_10 ::var_is_introduced :: is_defined_var;
var 1..9801: X_INTRODUCED_12 ::var_is_introduced :: is_defined_var;
var 1..9801: X_INTRODUCED_14 ::var_is_introduced :: is_defined_var;
var 1..9801: X_INTRODUCED_16 ::var_is_introduced :: is_defined_var;
var 1..9801: X_INTRODUCED_18 ::var_is_introduced :: is_defined_var;
array [1..10] of var int: LD = [16,2,C,D,E,8,14,H,I,K];
constraint int_lin_eq(X_INTRODUCED_7,[X_INTRODUCED_1,X_INTRODUCED_0,X_INTRODUCED_5,X_INTRODUCED_4],0);
constraint int_lin_eq(X_INTRODUCED_7,[X_INTRODUCED_8,X_INTRODUCED_1,X_INTRODUCED_10,X_INTRODUCED_5],0);
constraint int_lin_eq(X_INTRODUCED_7,[X_INTRODUCED_12,X_INTRODUCED_8,X_INTRODUCED_14,X_INTRODUCED_10],0);
constraint int_lin_eq(X_INTRODUCED_7,[X_INTRODUCED_16,X_INTRODUCED_12,X_INTRODUCED_18,X_INTRODUCED_14],0);
constraint int_lin_eq(X_INTRODUCED_7,[X_INTRODUCED_4,X_INTRODUCED_16,X_INTRODUCED_0,X_INTRODUCED_18],0);
constraint int_lin_ne([-1],[C],-16);
constraint int_lin_ne([-1],[D],-16);
constraint int_lin_ne([-1],[E],-16);
constraint int_lin_ne([-1],[H],-16);
constraint int_lin_ne([-1],[I],-16);
constraint int_lin_ne([-1],[K],-16);
constraint int_lin_ne([-1],[C],-2);
constraint int_lin_ne([-1],[D],-2);
constraint int_lin_ne([-1],[E],-2);
constraint int_lin_ne([-1],[H],-2);
constraint int_lin_ne([-1],[I],-2);
constraint int_lin_ne([-1],[K],-2);
constraint int_lin_ne(X_INTRODUCED_23,[C,D],0);
constraint int_lin_ne(X_INTRODUCED_23,[C,E],0);
constraint int_lin_ne([1],[C],8);
constraint int_lin_ne([1],[C],14);
constraint int_lin_ne(X_INTRODUCED_23,[C,H],0);
constraint int_lin_ne(X_INTRODUCED_23,[C,I],0);
constraint int_lin_ne(X_INTRODUCED_23,[C,K],0);
constraint int_lin_ne(X_INTRODUCED_23,[D,E],0);
constraint int_lin_ne([1],[D],8);
constraint int_lin_ne([1],[D],14);
constraint int_lin_ne(X_INTRODUCED_23,[D,H],0);
constraint int_lin_ne(X_INTRODUCED_23,[D,I],0);
constraint int_lin_ne(X_INTRODUCED_23,[D,K],0);
constraint int_lin_ne([1],[E],8);
constraint int_lin_ne([1],[E],14);
constraint int_lin_ne(X_INTRODUCED_23,[E,H],0);
constraint int_lin_ne(X_INTRODUCED_23,[E,I],0);
constraint int_lin_ne(X_INTRODUCED_23,[E,K],0);
constraint int_lin_ne([-1],[H],-8);
constraint int_lin_ne([-1],[I],-8);
constraint int_lin_ne([-1],[K],-8);
constraint int_lin_ne([-1],[H],-14);
constraint int_lin_ne([-1],[I],-14);
constraint int_lin_ne([-1],[K],-14);
constraint int_lin_ne(X_INTRODUCED_23,[H,I],0);
constraint int_lin_ne(X_INTRODUCED_23,[H,K],0);
constraint int_lin_ne(X_INTRODUCED_23,[I,K],0);
constraint int_times(8,8,X_INTRODUCED_0):: defines_var(X_INTRODUCED_0);
constraint int_times(E,E,X_INTRODUCED_1):: defines_var(X_INTRODUCED_1);
constraint int_times(16,16,X_INTRODUCED_4):: defines_var(X_INTRODUCED_4);
constraint int_times(K,K,X_INTRODUCED_5):: defines_var(X_INTRODUCED_5);
constraint int_times(D,D,X_INTRODUCED_8):: defines_var(X_INTRODUCED_8);
constraint int_times(I,I,X_INTRODUCED_10):: defines_var(X_INTRODUCED_10);
constraint int_times(C,C,X_INTRODUCED_12):: defines_var(X_INTRODUCED_12);
constraint int_times(H,H,X_INTRODUCED_14):: defines_var(X_INTRODUCED_14);
constraint int_times(2,2,X_INTRODUCED_16):: defines_var(X_INTRODUCED_16);
constraint int_times(14,14,X_INTRODUCED_18):: defines_var(X_INTRODUCED_18);
solve :: int_search(LD,first_fail,indomain_min,complete) satisfy;
