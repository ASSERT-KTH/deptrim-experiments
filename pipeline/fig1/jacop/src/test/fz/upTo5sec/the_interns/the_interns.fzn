array [1..6] of int: X_INTRODUCED_40 = [1,1,1,1,1,1];
array [1..7] of int: X_INTRODUCED_68 = [1,1,1,1,1,1,1];
array [1..3] of int: X_INTRODUCED_71 = [1,1,1];
array [1..3] of int: X_INTRODUCED_72 = [-1,-1,-1];
var 0..1: X_INTRODUCED_1;
var 0..1: X_INTRODUCED_3;
var 0..1: X_INTRODUCED_5;
var 0..1: X_INTRODUCED_6;
var 0..1: X_INTRODUCED_7;
var 0..1: X_INTRODUCED_8;
var 0..1: X_INTRODUCED_9;
var 0..1: X_INTRODUCED_10;
var 0..1: X_INTRODUCED_12;
var 0..1: X_INTRODUCED_15;
var 0..1: X_INTRODUCED_16;
var 0..1: X_INTRODUCED_17;
var 0..1: X_INTRODUCED_18;
var 0..1: X_INTRODUCED_19;
var 0..1: X_INTRODUCED_20;
var bool: X_INTRODUCED_21 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_22 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_23 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_24 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_25 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_26 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_27 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_28 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_29 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_30 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_31 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_32 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_33 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_34 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_35 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_36 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_37 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_38 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_41 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_42 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_43 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_44 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_45 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_46 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_47 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_48 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_49 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_50 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_51 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_52 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_53 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_54 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_55 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_56 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_58 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_59 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_60 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_61 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_62 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_63 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_64 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_65 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_66 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_90 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_91 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_93 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_94 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_96 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_97 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_99 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_100 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_102 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_103 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_105 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_106 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_108 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_109 ::var_is_introduced :: is_defined_var;
array [1..21] of var int: interns:: output_array([1..3,1..7]) = [0,X_INTRODUCED_1,0,X_INTRODUCED_3,0,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,0,X_INTRODUCED_12,0,0,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20];
constraint int_lin_eq(X_INTRODUCED_40,[X_INTRODUCED_22,X_INTRODUCED_26,X_INTRODUCED_28,X_INTRODUCED_32,X_INTRODUCED_36,X_INTRODUCED_38],0);
constraint int_lin_eq(X_INTRODUCED_40,[X_INTRODUCED_43,X_INTRODUCED_45,X_INTRODUCED_48,X_INTRODUCED_50,X_INTRODUCED_53,X_INTRODUCED_56],0);
constraint int_lin_eq(X_INTRODUCED_68,[X_INTRODUCED_22,X_INTRODUCED_59,X_INTRODUCED_61,X_INTRODUCED_63,X_INTRODUCED_50,X_INTRODUCED_65,X_INTRODUCED_66],1);
constraint int_lin_le([1,1],[X_INTRODUCED_1,X_INTRODUCED_3],2);
constraint int_lin_le([-1,-1],[X_INTRODUCED_1,X_INTRODUCED_3],0);
constraint int_lin_le([1,1],[X_INTRODUCED_3,X_INTRODUCED_5],2);
constraint int_lin_le([-1,-1],[X_INTRODUCED_3,X_INTRODUCED_5],0);
constraint int_lin_le([1,1],[X_INTRODUCED_5,X_INTRODUCED_6],2);
constraint int_lin_le([-1,-1],[X_INTRODUCED_5,X_INTRODUCED_6],0);
constraint int_lin_le(X_INTRODUCED_71,[X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9],2);
constraint int_lin_le(X_INTRODUCED_72,[X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9],0);
constraint int_lin_le(X_INTRODUCED_71,[X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10],2);
constraint int_lin_le(X_INTRODUCED_72,[X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10],0);
constraint int_lin_le([1,1],[X_INTRODUCED_9,X_INTRODUCED_10],2);
constraint int_lin_le([-1,-1],[X_INTRODUCED_9,X_INTRODUCED_10],0);
constraint int_lin_le([1,1],[X_INTRODUCED_10,X_INTRODUCED_12],2);
constraint int_lin_le([-1,-1],[X_INTRODUCED_10,X_INTRODUCED_12],0);
constraint int_lin_le([1,1],[X_INTRODUCED_15,X_INTRODUCED_16],2);
constraint int_lin_le([-1,-1],[X_INTRODUCED_15,X_INTRODUCED_16],0);
constraint int_lin_le(X_INTRODUCED_71,[X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17],2);
constraint int_lin_le(X_INTRODUCED_72,[X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17],0);
constraint int_lin_le(X_INTRODUCED_71,[X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18],2);
constraint int_lin_le(X_INTRODUCED_72,[X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18],0);
constraint int_lin_le(X_INTRODUCED_71,[X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19],2);
constraint int_lin_le(X_INTRODUCED_72,[X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19],0);
constraint int_lin_le(X_INTRODUCED_71,[X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20],2);
constraint int_lin_le(X_INTRODUCED_72,[X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20],0);
constraint int_lin_eq(X_INTRODUCED_68,[X_INTRODUCED_91,X_INTRODUCED_94,X_INTRODUCED_97,X_INTRODUCED_100,X_INTRODUCED_103,X_INTRODUCED_106,X_INTRODUCED_109],1);
constraint int_eq_reif(X_INTRODUCED_7,0,X_INTRODUCED_21):: defines_var(X_INTRODUCED_21);
constraint bool2int(X_INTRODUCED_21,X_INTRODUCED_22):: defines_var(X_INTRODUCED_22);
constraint int_eq_reif(X_INTRODUCED_8,0,X_INTRODUCED_23):: defines_var(X_INTRODUCED_23);
constraint int_eq_reif(X_INTRODUCED_1,0,X_INTRODUCED_24):: defines_var(X_INTRODUCED_24);
constraint array_bool_and([X_INTRODUCED_23,X_INTRODUCED_24],X_INTRODUCED_25):: defines_var(X_INTRODUCED_25);
constraint bool2int(X_INTRODUCED_25,X_INTRODUCED_26):: defines_var(X_INTRODUCED_26);
constraint int_eq_reif(X_INTRODUCED_9,0,X_INTRODUCED_27):: defines_var(X_INTRODUCED_27);
constraint bool2int(X_INTRODUCED_27,X_INTRODUCED_28):: defines_var(X_INTRODUCED_28);
constraint int_eq_reif(X_INTRODUCED_10,0,X_INTRODUCED_29):: defines_var(X_INTRODUCED_29);
constraint int_eq_reif(X_INTRODUCED_3,0,X_INTRODUCED_30):: defines_var(X_INTRODUCED_30);
constraint array_bool_and([X_INTRODUCED_29,X_INTRODUCED_30],X_INTRODUCED_31):: defines_var(X_INTRODUCED_31);
constraint bool2int(X_INTRODUCED_31,X_INTRODUCED_32):: defines_var(X_INTRODUCED_32);
constraint int_eq_reif(X_INTRODUCED_12,0,X_INTRODUCED_33):: defines_var(X_INTRODUCED_33);
constraint int_eq_reif(X_INTRODUCED_5,0,X_INTRODUCED_34):: defines_var(X_INTRODUCED_34);
constraint array_bool_and([X_INTRODUCED_33,X_INTRODUCED_34],X_INTRODUCED_35):: defines_var(X_INTRODUCED_35);
constraint bool2int(X_INTRODUCED_35,X_INTRODUCED_36):: defines_var(X_INTRODUCED_36);
constraint int_eq_reif(X_INTRODUCED_6,0,X_INTRODUCED_37):: defines_var(X_INTRODUCED_37);
constraint bool2int(X_INTRODUCED_37,X_INTRODUCED_38):: defines_var(X_INTRODUCED_38);
constraint int_eq_reif(X_INTRODUCED_15,0,X_INTRODUCED_41):: defines_var(X_INTRODUCED_41);
constraint array_bool_and([X_INTRODUCED_24,X_INTRODUCED_41],X_INTRODUCED_42):: defines_var(X_INTRODUCED_42);
constraint bool2int(X_INTRODUCED_42,X_INTRODUCED_43):: defines_var(X_INTRODUCED_43);
constraint int_eq_reif(X_INTRODUCED_16,0,X_INTRODUCED_44):: defines_var(X_INTRODUCED_44);
constraint bool2int(X_INTRODUCED_44,X_INTRODUCED_45):: defines_var(X_INTRODUCED_45);
constraint int_eq_reif(X_INTRODUCED_17,0,X_INTRODUCED_46):: defines_var(X_INTRODUCED_46);
constraint array_bool_and([X_INTRODUCED_30,X_INTRODUCED_46],X_INTRODUCED_47):: defines_var(X_INTRODUCED_47);
constraint bool2int(X_INTRODUCED_47,X_INTRODUCED_48):: defines_var(X_INTRODUCED_48);
constraint int_eq_reif(X_INTRODUCED_18,0,X_INTRODUCED_49):: defines_var(X_INTRODUCED_49);
constraint bool2int(X_INTRODUCED_49,X_INTRODUCED_50):: defines_var(X_INTRODUCED_50);
constraint int_eq_reif(X_INTRODUCED_19,0,X_INTRODUCED_51):: defines_var(X_INTRODUCED_51);
constraint array_bool_and([X_INTRODUCED_34,X_INTRODUCED_51],X_INTRODUCED_52):: defines_var(X_INTRODUCED_52);
constraint bool2int(X_INTRODUCED_52,X_INTRODUCED_53):: defines_var(X_INTRODUCED_53);
constraint int_eq_reif(X_INTRODUCED_20,0,X_INTRODUCED_54):: defines_var(X_INTRODUCED_54);
constraint array_bool_and([X_INTRODUCED_37,X_INTRODUCED_54],X_INTRODUCED_55):: defines_var(X_INTRODUCED_55);
constraint bool2int(X_INTRODUCED_55,X_INTRODUCED_56):: defines_var(X_INTRODUCED_56);
constraint array_bool_and([X_INTRODUCED_23,X_INTRODUCED_41],X_INTRODUCED_58):: defines_var(X_INTRODUCED_58);
constraint bool2int(X_INTRODUCED_58,X_INTRODUCED_59):: defines_var(X_INTRODUCED_59);
constraint array_bool_and([X_INTRODUCED_27,X_INTRODUCED_44],X_INTRODUCED_60):: defines_var(X_INTRODUCED_60);
constraint bool2int(X_INTRODUCED_60,X_INTRODUCED_61):: defines_var(X_INTRODUCED_61);
constraint array_bool_and([X_INTRODUCED_29,X_INTRODUCED_46],X_INTRODUCED_62):: defines_var(X_INTRODUCED_62);
constraint bool2int(X_INTRODUCED_62,X_INTRODUCED_63):: defines_var(X_INTRODUCED_63);
constraint array_bool_and([X_INTRODUCED_33,X_INTRODUCED_51],X_INTRODUCED_64):: defines_var(X_INTRODUCED_64);
constraint bool2int(X_INTRODUCED_64,X_INTRODUCED_65):: defines_var(X_INTRODUCED_65);
constraint bool2int(X_INTRODUCED_54,X_INTRODUCED_66):: defines_var(X_INTRODUCED_66);
constraint int_lin_eq_reif([1],[X_INTRODUCED_7],3,X_INTRODUCED_90):: defines_var(X_INTRODUCED_90);
constraint bool2int(X_INTRODUCED_90,X_INTRODUCED_91):: defines_var(X_INTRODUCED_91);
constraint int_lin_eq_reif(X_INTRODUCED_71,[X_INTRODUCED_1,X_INTRODUCED_8,X_INTRODUCED_15],3,X_INTRODUCED_93):: defines_var(X_INTRODUCED_93);
constraint bool2int(X_INTRODUCED_93,X_INTRODUCED_94):: defines_var(X_INTRODUCED_94);
constraint int_lin_eq_reif([1,1],[X_INTRODUCED_9,X_INTRODUCED_16],3,X_INTRODUCED_96):: defines_var(X_INTRODUCED_96);
constraint bool2int(X_INTRODUCED_96,X_INTRODUCED_97):: defines_var(X_INTRODUCED_97);
constraint int_lin_eq_reif(X_INTRODUCED_71,[X_INTRODUCED_3,X_INTRODUCED_10,X_INTRODUCED_17],3,X_INTRODUCED_99):: defines_var(X_INTRODUCED_99);
constraint bool2int(X_INTRODUCED_99,X_INTRODUCED_100):: defines_var(X_INTRODUCED_100);
constraint int_lin_eq_reif([1],[X_INTRODUCED_18],3,X_INTRODUCED_102):: defines_var(X_INTRODUCED_102);
constraint bool2int(X_INTRODUCED_102,X_INTRODUCED_103):: defines_var(X_INTRODUCED_103);
constraint int_lin_eq_reif(X_INTRODUCED_71,[X_INTRODUCED_5,X_INTRODUCED_12,X_INTRODUCED_19],3,X_INTRODUCED_105):: defines_var(X_INTRODUCED_105);
constraint bool2int(X_INTRODUCED_105,X_INTRODUCED_106):: defines_var(X_INTRODUCED_106);
constraint int_lin_eq_reif([1,1],[X_INTRODUCED_6,X_INTRODUCED_20],3,X_INTRODUCED_108):: defines_var(X_INTRODUCED_108);
constraint bool2int(X_INTRODUCED_108,X_INTRODUCED_109):: defines_var(X_INTRODUCED_109);
solve  satisfy;
