array [1..2] of int: X_INTRODUCED_0 = [1,-1];
array [1..6] of int: X_INTRODUCED_27 = [-1,-2,-1,-1,-1,-1];
array [1..5] of int: X_INTRODUCED_47 = [-2,-1,-1,-1,-1];
var {2,4}: p1:: output_var;
var {1,3,4}: p2:: output_var;
var {1,3,4}: p3:: output_var;
var 1..4: p4:: output_var;
var 1..4: p5:: output_var;
var {1,2,4}: p7:: output_var;
var bool: X_INTRODUCED_1 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_2 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_3 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_4 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_5 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_6 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_7 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_8 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_9 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_10 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_14 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_15 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_16 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_17 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_18 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_19 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_20 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_21 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_22 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_23 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_24 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_25 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_28 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_29 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_30 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_31 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_32 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_33 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_34 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_35 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_36 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_37 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_38 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_39 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_41 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_42 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_43 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_44 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_45 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_48 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_49 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_50 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_51 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_52 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_53 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_54 ::var_is_introduced :: is_defined_var;
array [1..7] of var int: x = [p1,p2,p3,p4,p5,p2,p7];
constraint int_lin_ne(X_INTRODUCED_0,[p1,p7],0);
constraint bool_clause([X_INTRODUCED_2],[X_INTRODUCED_1]);
constraint bool_clause([X_INTRODUCED_4],[X_INTRODUCED_3]);
constraint bool_clause([X_INTRODUCED_6],[X_INTRODUCED_5]);
constraint bool_clause([X_INTRODUCED_8],[X_INTRODUCED_7]);
constraint bool_clause([X_INTRODUCED_9],[X_INTRODUCED_1]);
constraint bool_clause([X_INTRODUCED_4],[X_INTRODUCED_10]);
constraint int_lin_eq(X_INTRODUCED_27,[X_INTRODUCED_15,X_INTRODUCED_17,X_INTRODUCED_19,X_INTRODUCED_21,X_INTRODUCED_23,X_INTRODUCED_25],-1);
constraint int_lin_eq(X_INTRODUCED_27,[X_INTRODUCED_29,X_INTRODUCED_31,X_INTRODUCED_33,X_INTRODUCED_35,X_INTRODUCED_37,X_INTRODUCED_39],-1);
constraint int_lin_eq(X_INTRODUCED_47,[X_INTRODUCED_41,X_INTRODUCED_42,X_INTRODUCED_43,X_INTRODUCED_44,X_INTRODUCED_45],-2);
constraint int_lin_eq(X_INTRODUCED_27,[X_INTRODUCED_48,X_INTRODUCED_49,X_INTRODUCED_50,X_INTRODUCED_51,X_INTRODUCED_52,X_INTRODUCED_54],-3);
constraint int_eq_reif(p2,1,X_INTRODUCED_1):: defines_var(X_INTRODUCED_1);
constraint int_eq_reif(p1,2,X_INTRODUCED_2):: defines_var(X_INTRODUCED_2);
constraint int_eq_reif(p3,1,X_INTRODUCED_3):: defines_var(X_INTRODUCED_3);
constraint int_eq_reif(p2,2,X_INTRODUCED_4):: defines_var(X_INTRODUCED_4);
constraint int_eq_reif(p4,1,X_INTRODUCED_5):: defines_var(X_INTRODUCED_5);
constraint int_eq_reif(p3,2,X_INTRODUCED_6):: defines_var(X_INTRODUCED_6);
constraint int_eq_reif(p5,1,X_INTRODUCED_7):: defines_var(X_INTRODUCED_7);
constraint int_eq_reif(p4,2,X_INTRODUCED_8):: defines_var(X_INTRODUCED_8);
constraint int_eq_reif(p5,2,X_INTRODUCED_9):: defines_var(X_INTRODUCED_9);
constraint int_eq_reif(p7,1,X_INTRODUCED_10):: defines_var(X_INTRODUCED_10);
constraint int_eq_reif(p1,3,X_INTRODUCED_14):: defines_var(X_INTRODUCED_14);
constraint bool2int(X_INTRODUCED_14,X_INTRODUCED_15):: defines_var(X_INTRODUCED_15);
constraint int_eq_reif(p2,3,X_INTRODUCED_16):: defines_var(X_INTRODUCED_16);
constraint bool2int(X_INTRODUCED_16,X_INTRODUCED_17):: defines_var(X_INTRODUCED_17);
constraint int_eq_reif(p3,3,X_INTRODUCED_18):: defines_var(X_INTRODUCED_18);
constraint bool2int(X_INTRODUCED_18,X_INTRODUCED_19):: defines_var(X_INTRODUCED_19);
constraint int_eq_reif(p4,3,X_INTRODUCED_20):: defines_var(X_INTRODUCED_20);
constraint bool2int(X_INTRODUCED_20,X_INTRODUCED_21):: defines_var(X_INTRODUCED_21);
constraint int_eq_reif(p5,3,X_INTRODUCED_22):: defines_var(X_INTRODUCED_22);
constraint bool2int(X_INTRODUCED_22,X_INTRODUCED_23):: defines_var(X_INTRODUCED_23);
constraint int_eq_reif(p7,3,X_INTRODUCED_24):: defines_var(X_INTRODUCED_24);
constraint bool2int(X_INTRODUCED_24,X_INTRODUCED_25):: defines_var(X_INTRODUCED_25);
constraint int_eq_reif(p1,4,X_INTRODUCED_28):: defines_var(X_INTRODUCED_28);
constraint bool2int(X_INTRODUCED_28,X_INTRODUCED_29):: defines_var(X_INTRODUCED_29);
constraint int_eq_reif(p2,4,X_INTRODUCED_30):: defines_var(X_INTRODUCED_30);
constraint bool2int(X_INTRODUCED_30,X_INTRODUCED_31):: defines_var(X_INTRODUCED_31);
constraint int_eq_reif(p3,4,X_INTRODUCED_32):: defines_var(X_INTRODUCED_32);
constraint bool2int(X_INTRODUCED_32,X_INTRODUCED_33):: defines_var(X_INTRODUCED_33);
constraint int_eq_reif(p4,4,X_INTRODUCED_34):: defines_var(X_INTRODUCED_34);
constraint bool2int(X_INTRODUCED_34,X_INTRODUCED_35):: defines_var(X_INTRODUCED_35);
constraint int_eq_reif(p5,4,X_INTRODUCED_36):: defines_var(X_INTRODUCED_36);
constraint bool2int(X_INTRODUCED_36,X_INTRODUCED_37):: defines_var(X_INTRODUCED_37);
constraint int_eq_reif(p7,4,X_INTRODUCED_38):: defines_var(X_INTRODUCED_38);
constraint bool2int(X_INTRODUCED_38,X_INTRODUCED_39):: defines_var(X_INTRODUCED_39);
constraint bool2int(X_INTRODUCED_1,X_INTRODUCED_41):: defines_var(X_INTRODUCED_41);
constraint bool2int(X_INTRODUCED_3,X_INTRODUCED_42):: defines_var(X_INTRODUCED_42);
constraint bool2int(X_INTRODUCED_5,X_INTRODUCED_43):: defines_var(X_INTRODUCED_43);
constraint bool2int(X_INTRODUCED_7,X_INTRODUCED_44):: defines_var(X_INTRODUCED_44);
constraint bool2int(X_INTRODUCED_10,X_INTRODUCED_45):: defines_var(X_INTRODUCED_45);
constraint bool2int(X_INTRODUCED_2,X_INTRODUCED_48):: defines_var(X_INTRODUCED_48);
constraint bool2int(X_INTRODUCED_4,X_INTRODUCED_49):: defines_var(X_INTRODUCED_49);
constraint bool2int(X_INTRODUCED_6,X_INTRODUCED_50):: defines_var(X_INTRODUCED_50);
constraint bool2int(X_INTRODUCED_8,X_INTRODUCED_51):: defines_var(X_INTRODUCED_51);
constraint bool2int(X_INTRODUCED_9,X_INTRODUCED_52):: defines_var(X_INTRODUCED_52);
constraint int_eq_reif(p7,2,X_INTRODUCED_53):: defines_var(X_INTRODUCED_53);
constraint bool2int(X_INTRODUCED_53,X_INTRODUCED_54):: defines_var(X_INTRODUCED_54);
solve  satisfy;
