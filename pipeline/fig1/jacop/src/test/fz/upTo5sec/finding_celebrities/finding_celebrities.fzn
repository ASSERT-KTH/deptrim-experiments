var 0..1: X_INTRODUCED_7;
var 0..1: X_INTRODUCED_10;
var 0..1: X_INTRODUCED_11;
var 0..1: X_INTRODUCED_15;
var 0..1: X_INTRODUCED_16;
var 0..1: X_INTRODUCED_17;
var 0..1: X_INTRODUCED_20;
var 0..1: X_INTRODUCED_21;
var 0..1: X_INTRODUCED_22;
var set of 1..5: celebrities:: output_var;
var 1..5: num_celebrities:: is_defined_var;
var bool: X_INTRODUCED_25 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_27 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_30 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_31 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_32 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_33 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_34 ::var_is_introduced :: is_defined_var;
var 0..5: X_INTRODUCED_35 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_36 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_39 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_40 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_41 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_42 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_43 ::var_is_introduced :: is_defined_var;
var 0..5: X_INTRODUCED_44 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_45 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_47 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_49 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_50 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_51 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_52 ::var_is_introduced :: is_defined_var;
var 0..5: X_INTRODUCED_53 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_54 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_61 ::var_is_introduced :: is_defined_var;
var 0..5: X_INTRODUCED_62 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_63 ::var_is_introduced :: is_defined_var;
var 0..5: X_INTRODUCED_26 ::var_is_introduced  = 5;
constraint bool_clause([X_INTRODUCED_27],[X_INTRODUCED_25]);
constraint bool_clause([X_INTRODUCED_33],[X_INTRODUCED_25]);
constraint bool_clause([X_INTRODUCED_36],[X_INTRODUCED_34]);
constraint bool_clause([X_INTRODUCED_42],[X_INTRODUCED_34]);
constraint bool_clause([X_INTRODUCED_45],[X_INTRODUCED_43]);
constraint bool_clause([X_INTRODUCED_51],[X_INTRODUCED_43]);
constraint bool_clause([X_INTRODUCED_54],[X_INTRODUCED_52]);
constraint bool_clause([X_INTRODUCED_63],[X_INTRODUCED_61]);
constraint int_ne(X_INTRODUCED_7,1);
constraint int_ne(X_INTRODUCED_10,1);
constraint int_ne(X_INTRODUCED_11,1);
constraint int_ne(X_INTRODUCED_15,1);
constraint int_ne(X_INTRODUCED_16,1);
constraint int_ne(X_INTRODUCED_17,1);
constraint int_ne(X_INTRODUCED_20,1);
constraint int_ne(X_INTRODUCED_21,1);
constraint int_ne(X_INTRODUCED_22,1);
constraint set_card(celebrities,num_celebrities):: defines_var(num_celebrities);
constraint set_in_reif(1,celebrities,X_INTRODUCED_25):: defines_var(X_INTRODUCED_25);
constraint int_eq_reif(X_INTRODUCED_26,num_celebrities,X_INTRODUCED_27):: defines_var(X_INTRODUCED_27);
constraint int_eq_reif(X_INTRODUCED_10,1,X_INTRODUCED_30):: defines_var(X_INTRODUCED_30);
constraint int_eq_reif(X_INTRODUCED_15,1,X_INTRODUCED_31):: defines_var(X_INTRODUCED_31);
constraint int_eq_reif(X_INTRODUCED_20,1,X_INTRODUCED_32):: defines_var(X_INTRODUCED_32);
constraint array_bool_and([X_INTRODUCED_30,X_INTRODUCED_31,X_INTRODUCED_32],X_INTRODUCED_33):: defines_var(X_INTRODUCED_33);
constraint set_in_reif(2,celebrities,X_INTRODUCED_34):: defines_var(X_INTRODUCED_34);
constraint int_lin_eq([1,-1],[X_INTRODUCED_7,X_INTRODUCED_35],-4):: defines_var(X_INTRODUCED_35);
constraint int_eq_reif(X_INTRODUCED_35,num_celebrities,X_INTRODUCED_36):: defines_var(X_INTRODUCED_36);
constraint int_eq_reif(X_INTRODUCED_11,1,X_INTRODUCED_39):: defines_var(X_INTRODUCED_39);
constraint int_eq_reif(X_INTRODUCED_16,1,X_INTRODUCED_40):: defines_var(X_INTRODUCED_40);
constraint int_eq_reif(X_INTRODUCED_21,1,X_INTRODUCED_41):: defines_var(X_INTRODUCED_41);
constraint array_bool_and([X_INTRODUCED_39,X_INTRODUCED_40,X_INTRODUCED_41],X_INTRODUCED_42):: defines_var(X_INTRODUCED_42);
constraint set_in_reif(3,celebrities,X_INTRODUCED_43):: defines_var(X_INTRODUCED_43);
constraint int_lin_eq([1,1,-1],[X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_44],-3):: defines_var(X_INTRODUCED_44);
constraint int_eq_reif(X_INTRODUCED_44,num_celebrities,X_INTRODUCED_45):: defines_var(X_INTRODUCED_45);
constraint int_eq_reif(X_INTRODUCED_7,1,X_INTRODUCED_47):: defines_var(X_INTRODUCED_47);
constraint int_eq_reif(X_INTRODUCED_17,1,X_INTRODUCED_49):: defines_var(X_INTRODUCED_49);
constraint int_eq_reif(X_INTRODUCED_22,1,X_INTRODUCED_50):: defines_var(X_INTRODUCED_50);
constraint array_bool_and([X_INTRODUCED_47,X_INTRODUCED_49,X_INTRODUCED_50],X_INTRODUCED_51):: defines_var(X_INTRODUCED_51);
constraint set_in_reif(4,celebrities,X_INTRODUCED_52):: defines_var(X_INTRODUCED_52);
constraint int_lin_eq([1,1,1,-1],[X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_53],-2):: defines_var(X_INTRODUCED_53);
constraint int_eq_reif(X_INTRODUCED_53,num_celebrities,X_INTRODUCED_54):: defines_var(X_INTRODUCED_54);
constraint set_in_reif(5,celebrities,X_INTRODUCED_61):: defines_var(X_INTRODUCED_61);
constraint int_lin_eq([1,1,1,-1],[X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_62],-2):: defines_var(X_INTRODUCED_62);
constraint int_eq_reif(X_INTRODUCED_62,num_celebrities,X_INTRODUCED_63):: defines_var(X_INTRODUCED_63);
solve :: set_search([celebrities],first_fail,indomain_min,complete) satisfy;
