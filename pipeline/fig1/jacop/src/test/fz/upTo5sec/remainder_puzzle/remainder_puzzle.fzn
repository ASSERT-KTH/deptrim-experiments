array [1..2] of int: X_INTRODUCED_4 = [-6,1];
array [1..2] of int: X_INTRODUCED_6 = [-5,1];
array [1..2] of int: X_INTRODUCED_8 = [-4,1];
array [1..2] of int: X_INTRODUCED_10 = [-3,1];
var int: X_INTRODUCED_0;
var int: X_INTRODUCED_1;
var int: X_INTRODUCED_2;
var int: X_INTRODUCED_3;
var int: n:: output_var;
array [1..4] of var int: x:: output_array([1..4]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3];
constraint int_lin_eq(X_INTRODUCED_4,[X_INTRODUCED_3,n],4);
constraint int_lin_eq(X_INTRODUCED_6,[X_INTRODUCED_2,n],3);
constraint int_lin_eq(X_INTRODUCED_8,[X_INTRODUCED_1,n],2);
constraint int_lin_eq(X_INTRODUCED_10,[X_INTRODUCED_0,n],1);
constraint int_le(1,X_INTRODUCED_0);
constraint int_le(1,X_INTRODUCED_1);
constraint int_le(1,X_INTRODUCED_2);
constraint int_le(1,X_INTRODUCED_3);
constraint int_le(1,n);
solve  minimize n;
