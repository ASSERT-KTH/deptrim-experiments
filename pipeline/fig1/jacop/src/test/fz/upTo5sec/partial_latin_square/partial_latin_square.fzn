array [1..2] of int: X_INTRODUCED_10 = [1,-1];
var 1..3: X_INTRODUCED_0;
var {1,3,4}: X_INTRODUCED_1;
var {2,5,6}: X_INTRODUCED_2;
var {2,3,5}: X_INTRODUCED_3;
var 1..3: X_INTRODUCED_4;
var 4..6: X_INTRODUCED_5;
var {3,4,6}: X_INTRODUCED_6;
var {3,5,6}: X_INTRODUCED_7;
var {2,3,5}: X_INTRODUCED_8;
array [1..9] of var int: x:: output_array([1..3,1..3]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8];
constraint int_lin_ne(X_INTRODUCED_10,[X_INTRODUCED_0,X_INTRODUCED_3],0);
constraint int_lin_ne(X_INTRODUCED_10,[X_INTRODUCED_0,X_INTRODUCED_6],0);
constraint int_lin_ne(X_INTRODUCED_10,[X_INTRODUCED_3,X_INTRODUCED_6],0);
constraint int_lin_ne(X_INTRODUCED_10,[X_INTRODUCED_0,X_INTRODUCED_1],0);
constraint int_lin_ne(X_INTRODUCED_10,[X_INTRODUCED_0,X_INTRODUCED_2],0);
constraint int_lin_ne(X_INTRODUCED_10,[X_INTRODUCED_1,X_INTRODUCED_2],0);
constraint int_lin_ne(X_INTRODUCED_10,[X_INTRODUCED_1,X_INTRODUCED_4],0);
constraint int_lin_ne(X_INTRODUCED_10,[X_INTRODUCED_1,X_INTRODUCED_7],0);
constraint int_lin_ne(X_INTRODUCED_10,[X_INTRODUCED_4,X_INTRODUCED_7],0);
constraint int_lin_ne(X_INTRODUCED_10,[X_INTRODUCED_3,X_INTRODUCED_4],0);
constraint int_lin_ne(X_INTRODUCED_10,[X_INTRODUCED_3,X_INTRODUCED_5],0);
constraint int_lin_ne(X_INTRODUCED_10,[X_INTRODUCED_4,X_INTRODUCED_5],0);
constraint int_lin_ne(X_INTRODUCED_10,[X_INTRODUCED_2,X_INTRODUCED_5],0);
constraint int_lin_ne(X_INTRODUCED_10,[X_INTRODUCED_2,X_INTRODUCED_8],0);
constraint int_lin_ne(X_INTRODUCED_10,[X_INTRODUCED_5,X_INTRODUCED_8],0);
constraint int_lin_ne(X_INTRODUCED_10,[X_INTRODUCED_6,X_INTRODUCED_7],0);
constraint int_lin_ne(X_INTRODUCED_10,[X_INTRODUCED_6,X_INTRODUCED_8],0);
constraint int_lin_ne(X_INTRODUCED_10,[X_INTRODUCED_7,X_INTRODUCED_8],0);
solve :: int_search([X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8],first_fail,indomain_min,complete) satisfy;
