array [1..8] of int: X_INTRODUCED_40 = [1,1,1,1,1,1,1,-2];
var 0..1: X_INTRODUCED_0;
var 0..1: X_INTRODUCED_1;
var 0..1: X_INTRODUCED_2;
var 0..1: X_INTRODUCED_3;
var 0..1: X_INTRODUCED_4;
var 0..1: X_INTRODUCED_5;
var 0..1: X_INTRODUCED_6;
var 0..1: X_INTRODUCED_7;
var 0..1: X_INTRODUCED_8;
var 0..1: X_INTRODUCED_9;
var 0..1: X_INTRODUCED_10;
var 0..1: X_INTRODUCED_11;
var 0..1: X_INTRODUCED_12;
var 0..1: X_INTRODUCED_13;
var 0..1: X_INTRODUCED_14;
var 0..1: X_INTRODUCED_15;
var int: X_INTRODUCED_16;
var int: X_INTRODUCED_17;
var int: X_INTRODUCED_18;
var int: X_INTRODUCED_19;
var int: X_INTRODUCED_20;
var int: X_INTRODUCED_21;
var int: X_INTRODUCED_22;
var int: X_INTRODUCED_23;
var int: X_INTRODUCED_24;
var int: X_INTRODUCED_25;
var int: X_INTRODUCED_26;
var int: X_INTRODUCED_27;
var int: X_INTRODUCED_28;
var int: X_INTRODUCED_29;
var int: X_INTRODUCED_30;
var int: X_INTRODUCED_31;
var 0..16: moves:: is_defined_var;
array [1..16] of var int: x:: output_array([1..4,1..4]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15];
array [1..16] of var int: X_INTRODUCED_32 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15];
array [1..16] of var int: X_INTRODUCED_33 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15];
constraint int_lin_eq(X_INTRODUCED_40,[X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_8,X_INTRODUCED_12,X_INTRODUCED_16],0);
constraint int_lin_eq(X_INTRODUCED_40,[X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_5,X_INTRODUCED_9,X_INTRODUCED_13,X_INTRODUCED_17],1);
constraint int_lin_eq(X_INTRODUCED_40,[X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_6,X_INTRODUCED_10,X_INTRODUCED_14,X_INTRODUCED_18],0);
constraint int_lin_eq(X_INTRODUCED_40,[X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_7,X_INTRODUCED_11,X_INTRODUCED_15,X_INTRODUCED_19],0);
constraint int_lin_eq(X_INTRODUCED_40,[X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_0,X_INTRODUCED_8,X_INTRODUCED_12,X_INTRODUCED_20],1);
constraint int_lin_eq(X_INTRODUCED_40,[X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_1,X_INTRODUCED_9,X_INTRODUCED_13,X_INTRODUCED_21],0);
constraint int_lin_eq(X_INTRODUCED_40,[X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_2,X_INTRODUCED_10,X_INTRODUCED_14,X_INTRODUCED_22],1);
constraint int_lin_eq(X_INTRODUCED_40,[X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_3,X_INTRODUCED_11,X_INTRODUCED_15,X_INTRODUCED_23],0);
constraint int_lin_eq(X_INTRODUCED_40,[X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_0,X_INTRODUCED_4,X_INTRODUCED_12,X_INTRODUCED_24],1);
constraint int_lin_eq(X_INTRODUCED_40,[X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_1,X_INTRODUCED_5,X_INTRODUCED_13,X_INTRODUCED_25],1);
constraint int_lin_eq(X_INTRODUCED_40,[X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_2,X_INTRODUCED_6,X_INTRODUCED_14,X_INTRODUCED_26],0);
constraint int_lin_eq(X_INTRODUCED_40,[X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_3,X_INTRODUCED_7,X_INTRODUCED_15,X_INTRODUCED_27],0);
constraint int_lin_eq(X_INTRODUCED_40,[X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_0,X_INTRODUCED_4,X_INTRODUCED_8,X_INTRODUCED_28],0);
constraint int_lin_eq(X_INTRODUCED_40,[X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_1,X_INTRODUCED_5,X_INTRODUCED_9,X_INTRODUCED_29],1);
constraint int_lin_eq(X_INTRODUCED_40,[X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_2,X_INTRODUCED_6,X_INTRODUCED_10,X_INTRODUCED_30],1);
constraint int_lin_eq(X_INTRODUCED_40,[X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_3,X_INTRODUCED_7,X_INTRODUCED_11,X_INTRODUCED_31],1);
constraint int_le(0,X_INTRODUCED_16);
constraint int_le(0,X_INTRODUCED_17);
constraint int_le(0,X_INTRODUCED_18);
constraint int_le(0,X_INTRODUCED_19);
constraint int_le(0,X_INTRODUCED_20);
constraint int_le(0,X_INTRODUCED_21);
constraint int_le(0,X_INTRODUCED_22);
constraint int_le(0,X_INTRODUCED_23);
constraint int_le(0,X_INTRODUCED_24);
constraint int_le(0,X_INTRODUCED_25);
constraint int_le(0,X_INTRODUCED_26);
constraint int_le(0,X_INTRODUCED_27);
constraint int_le(0,X_INTRODUCED_28);
constraint int_le(0,X_INTRODUCED_29);
constraint int_le(0,X_INTRODUCED_30);
constraint int_le(0,X_INTRODUCED_31);
constraint int_lin_eq([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,moves],0):: defines_var(moves);
solve :: int_search(X_INTRODUCED_33,first_fail,indomain_min,complete) minimize moves;
