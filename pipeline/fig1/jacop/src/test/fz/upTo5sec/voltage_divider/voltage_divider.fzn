array [1..3] of float: X_INTRODUCED_12 = [1.0,-1.0,-1.0];
var -94.59999999999999..100.0: V:: output_var:: is_defined_var;
var -100.0..100.0: R1:: output_var;
var -100.0..100.0: R2:: output_var;
var 5.4..5.5: VD:: output_var:: is_defined_var;
var 0.1..0.1: ID:: output_var;
var -99.90000000000001..100.0: I:: output_var:: is_defined_var;
var bool: X_INTRODUCED_0 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_1 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_2 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_3 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_4 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_5 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_6 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_7 ::var_is_introduced :: is_defined_var;
var -100.0..100.0: X_INTRODUCED_9 ::var_is_introduced ;
var -100.0..100.0: X_INTRODUCED_15 ::var_is_introduced :: is_defined_var;
constraint array_bool_or([X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2],true);
constraint array_bool_or([X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5],true);
constraint array_bool_or([X_INTRODUCED_6,X_INTRODUCED_7],true);
constraint float_lin_eq(X_INTRODUCED_12,[I,X_INTRODUCED_9,ID],0.0):: defines_var(I);
constraint float_lin_eq(X_INTRODUCED_12,[V,X_INTRODUCED_15,VD],0.0):: defines_var(V);
constraint float_times(X_INTRODUCED_9,R2,VD):: defines_var(VD);
constraint float_eq_reif(R2,5.0,X_INTRODUCED_0):: defines_var(X_INTRODUCED_0);
constraint float_eq_reif(R2,9.0,X_INTRODUCED_1):: defines_var(X_INTRODUCED_1);
constraint float_eq_reif(R2,14.0,X_INTRODUCED_2):: defines_var(X_INTRODUCED_2);
constraint float_eq_reif(R1,5.0,X_INTRODUCED_3):: defines_var(X_INTRODUCED_3);
constraint float_eq_reif(R1,9.0,X_INTRODUCED_4):: defines_var(X_INTRODUCED_4);
constraint float_eq_reif(R1,14.0,X_INTRODUCED_5):: defines_var(X_INTRODUCED_5);
constraint float_eq_reif(V,9.0,X_INTRODUCED_6):: defines_var(X_INTRODUCED_6);
constraint float_eq_reif(V,12.0,X_INTRODUCED_7):: defines_var(X_INTRODUCED_7);
constraint float_times(I,R1,X_INTRODUCED_15):: defines_var(X_INTRODUCED_15);
solve :: float_search([V,R1,R2,VD,ID,I],1e-05,input_order,indomain_split,complete) satisfy;
