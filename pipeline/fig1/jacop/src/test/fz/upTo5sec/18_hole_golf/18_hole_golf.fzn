array [1..18] of int: X_INTRODUCED_20 = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];
var 3..5: X_INTRODUCED_0;
var 3..5: X_INTRODUCED_1;
var 3..5: X_INTRODUCED_2;
var 3..5: X_INTRODUCED_3;
var 3..5: X_INTRODUCED_4;
var 3..5: X_INTRODUCED_5;
var 3..5: X_INTRODUCED_6;
var 3..5: X_INTRODUCED_7;
var 3..5: X_INTRODUCED_8;
var 3..5: X_INTRODUCED_9;
var 3..5: X_INTRODUCED_10;
var 3..5: X_INTRODUCED_11;
var 3..5: X_INTRODUCED_12;
var 3..5: X_INTRODUCED_13;
var 3..5: X_INTRODUCED_14;
var 3..5: X_INTRODUCED_15;
var 3..5: X_INTRODUCED_16;
var 3..5: X_INTRODUCED_17;
array [1..18] of var int: x:: output_array([1..18]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17];
array [1..18] of var int: X_INTRODUCED_19 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17];
constraint int_lin_eq(X_INTRODUCED_20,X_INTRODUCED_19,72);
solve  satisfy;
