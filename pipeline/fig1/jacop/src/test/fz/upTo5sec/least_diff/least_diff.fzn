array [1..2] of int: X_INTRODUCED_0 = [1,-1];
array [1..2] of int: X_INTRODUCED_1 = [-1,1];
array [1..6] of int: X_INTRODUCED_15 = [1,-10000,-1000,-100,-10,-1];
var 0..9: A:: output_var;
var 0..9: B:: output_var;
var 0..9: C:: output_var;
var 0..9: D:: output_var;
var 0..9: E:: output_var;
var 0..9: F:: output_var;
var 0..9: G:: output_var;
var 0..9: H:: output_var;
var 0..9: I:: output_var;
var 0..9: J:: output_var;
var 0..99999: X:: output_var:: is_defined_var;
var 0..99999: Y:: output_var:: is_defined_var;
var int: difference:: is_defined_var;
array [1..10] of var int: FD = [A,B,C,D,E,F,G,H,I,J];
constraint int_lin_le(X_INTRODUCED_1,[X,Y],-1);
constraint int_lin_ne(X_INTRODUCED_0,[A,B],0);
constraint int_lin_ne(X_INTRODUCED_0,[A,C],0);
constraint int_lin_ne(X_INTRODUCED_0,[A,D],0);
constraint int_lin_ne(X_INTRODUCED_0,[A,E],0);
constraint int_lin_ne(X_INTRODUCED_0,[A,F],0);
constraint int_lin_ne(X_INTRODUCED_0,[A,G],0);
constraint int_lin_ne(X_INTRODUCED_0,[A,H],0);
constraint int_lin_ne(X_INTRODUCED_0,[A,I],0);
constraint int_lin_ne(X_INTRODUCED_0,[A,J],0);
constraint int_lin_ne(X_INTRODUCED_0,[B,C],0);
constraint int_lin_ne(X_INTRODUCED_0,[B,D],0);
constraint int_lin_ne(X_INTRODUCED_0,[B,E],0);
constraint int_lin_ne(X_INTRODUCED_0,[B,F],0);
constraint int_lin_ne(X_INTRODUCED_0,[B,G],0);
constraint int_lin_ne(X_INTRODUCED_0,[B,H],0);
constraint int_lin_ne(X_INTRODUCED_0,[B,I],0);
constraint int_lin_ne(X_INTRODUCED_0,[B,J],0);
constraint int_lin_ne(X_INTRODUCED_0,[C,D],0);
constraint int_lin_ne(X_INTRODUCED_0,[C,E],0);
constraint int_lin_ne(X_INTRODUCED_0,[C,F],0);
constraint int_lin_ne(X_INTRODUCED_0,[C,G],0);
constraint int_lin_ne(X_INTRODUCED_0,[C,H],0);
constraint int_lin_ne(X_INTRODUCED_0,[C,I],0);
constraint int_lin_ne(X_INTRODUCED_0,[C,J],0);
constraint int_lin_ne(X_INTRODUCED_0,[D,E],0);
constraint int_lin_ne(X_INTRODUCED_0,[D,F],0);
constraint int_lin_ne(X_INTRODUCED_0,[D,G],0);
constraint int_lin_ne(X_INTRODUCED_0,[D,H],0);
constraint int_lin_ne(X_INTRODUCED_0,[D,I],0);
constraint int_lin_ne(X_INTRODUCED_0,[D,J],0);
constraint int_lin_ne(X_INTRODUCED_0,[E,F],0);
constraint int_lin_ne(X_INTRODUCED_0,[E,G],0);
constraint int_lin_ne(X_INTRODUCED_0,[E,H],0);
constraint int_lin_ne(X_INTRODUCED_0,[E,I],0);
constraint int_lin_ne(X_INTRODUCED_0,[E,J],0);
constraint int_lin_ne(X_INTRODUCED_0,[F,G],0);
constraint int_lin_ne(X_INTRODUCED_0,[F,H],0);
constraint int_lin_ne(X_INTRODUCED_0,[F,I],0);
constraint int_lin_ne(X_INTRODUCED_0,[F,J],0);
constraint int_lin_ne(X_INTRODUCED_0,[G,H],0);
constraint int_lin_ne(X_INTRODUCED_0,[G,I],0);
constraint int_lin_ne(X_INTRODUCED_0,[G,J],0);
constraint int_lin_ne(X_INTRODUCED_0,[H,I],0);
constraint int_lin_ne(X_INTRODUCED_0,[H,J],0);
constraint int_lin_ne(X_INTRODUCED_0,[I,J],0);
constraint int_lin_eq(X_INTRODUCED_15,[Y,F,G,H,I,J],0):: defines_var(Y);
constraint int_lin_eq(X_INTRODUCED_15,[X,A,B,C,D,E],0):: defines_var(X);
constraint int_lin_eq([1,-1,-1],[X,Y,difference],0):: defines_var(difference);
solve :: int_search(FD,max_regret,indomain_min,complete) minimize difference;
