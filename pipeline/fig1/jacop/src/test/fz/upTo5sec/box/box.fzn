array [1..3] of float: X_INTRODUCED_15 = [-2.0,-2.0,-2.0];
array [1..3] of float: X_INTRODUCED_16 = [-0.1,-0.1,-2.0];
var float: d:: output_var;
var float: w:: output_var;
var float: h:: output_var;
var float: z:: is_defined_var;
var float: X_INTRODUCED_1 ::var_is_introduced :: is_defined_var;
var float: X_INTRODUCED_2 ::var_is_introduced :: is_defined_var;
var float: X_INTRODUCED_3 ::var_is_introduced :: is_defined_var;
var float: X_INTRODUCED_4 ::var_is_introduced :: is_defined_var;
var float: X_INTRODUCED_8 ::var_is_introduced :: is_defined_var;
var float: X_INTRODUCED_9 ::var_is_introduced :: is_defined_var;
var float: X_INTRODUCED_10 ::var_is_introduced :: is_defined_var;
var float: X_INTRODUCED_11 ::var_is_introduced :: is_defined_var;
constraint float_le(X_INTRODUCED_3,252.0);
constraint float_le(0.518,X_INTRODUCED_8);
constraint float_le(X_INTRODUCED_8,0.718);
constraint float_le(1512.0,X_INTRODUCED_10);
constraint float_lin_le(X_INTRODUCED_15,[X_INTRODUCED_11,X_INTRODUCED_9,X_INTRODUCED_3],-888.0);
constraint float_le(0.0,h);
constraint float_le(0.0,w);
constraint float_le(0.0,d);
constraint float_lin_le(X_INTRODUCED_16,[X_INTRODUCED_4,X_INTRODUCED_3,X_INTRODUCED_2],0.0);
constraint float_lin_eq([0.1,0.1,2.0,-1.0],[X_INTRODUCED_4,X_INTRODUCED_3,X_INTRODUCED_2,z],0.0):: defines_var(z);
constraint float_lin_eq([0.1,-1.0],[w,X_INTRODUCED_1],0.0):: defines_var(X_INTRODUCED_1);
constraint float_times(X_INTRODUCED_1,h,X_INTRODUCED_2):: defines_var(X_INTRODUCED_2);
constraint float_times(d,w,X_INTRODUCED_3):: defines_var(X_INTRODUCED_3);
constraint float_times(d,h,X_INTRODUCED_4):: defines_var(X_INTRODUCED_4);
constraint float_div(h,w,X_INTRODUCED_8):: defines_var(X_INTRODUCED_8);
constraint float_times(h,d,X_INTRODUCED_9):: defines_var(X_INTRODUCED_9);
constraint float_times(X_INTRODUCED_9,w,X_INTRODUCED_10):: defines_var(X_INTRODUCED_10);
constraint float_times(h,w,X_INTRODUCED_11):: defines_var(X_INTRODUCED_11);
solve :: float_search([z,d,w,h],0.01,input_order,indomain_split,complete) minimize z;
