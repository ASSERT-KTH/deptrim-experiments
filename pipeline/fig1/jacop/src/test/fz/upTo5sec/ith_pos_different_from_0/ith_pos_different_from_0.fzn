var 2..2: ith:: output_var;
var 4..4: pos:: output_var;
var bool: X_INTRODUCED_5 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_6 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_10 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_11 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_17 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_18 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_24 ::var_is_introduced  = true;
var bool: X_INTRODUCED_28 ::var_is_introduced  = true;
array [1..5] of var int: x:: output_array([1..5]) = [3,0,0,8,6];
constraint int_ne_reif(3,0,X_INTRODUCED_5):: defines_var(X_INTRODUCED_5);
constraint bool2int(X_INTRODUCED_5,X_INTRODUCED_6):: defines_var(X_INTRODUCED_6);
constraint int_ne_reif(0,0,X_INTRODUCED_10):: defines_var(X_INTRODUCED_10);
constraint bool2int(X_INTRODUCED_10,X_INTRODUCED_11):: defines_var(X_INTRODUCED_11);
constraint int_ne_reif(0,0,X_INTRODUCED_17):: defines_var(X_INTRODUCED_17);
constraint bool2int(X_INTRODUCED_17,X_INTRODUCED_18):: defines_var(X_INTRODUCED_18);
constraint int_ne(8,0);
constraint int_lin_eq([-1,-1,-1],[X_INTRODUCED_6,X_INTRODUCED_11,X_INTRODUCED_18],-1);
solve  satisfy;
