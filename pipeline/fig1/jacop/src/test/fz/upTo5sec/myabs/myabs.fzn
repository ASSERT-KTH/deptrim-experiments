array [1..2] of int: X_INTRODUCED_3 = [1,1];
array [1..2] of int: X_INTRODUCED_5 = [1,-1];
array [1..2] of int: X_INTRODUCED_7 = [-1,-1];
array [1..2] of int: X_INTRODUCED_8 = [-1,1];
var -5..6: a:: output_var;
var 2..5: b:: output_var;
var int: X_INTRODUCED_0 ::var_is_introduced ;
var bool: X_INTRODUCED_4 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_6 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_9 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_10 ::var_is_introduced :: is_defined_var;
constraint array_bool_or([X_INTRODUCED_4,X_INTRODUCED_6],true);
constraint int_lin_le(X_INTRODUCED_7,[X_INTRODUCED_0,a],0);
constraint int_lin_le(X_INTRODUCED_8,[X_INTRODUCED_0,a],0);
constraint bool_clause([X_INTRODUCED_10],[X_INTRODUCED_9]);
constraint int_lin_le_reif(X_INTRODUCED_3,[X_INTRODUCED_0,a],0,X_INTRODUCED_4):: defines_var(X_INTRODUCED_4);
constraint int_lin_le_reif(X_INTRODUCED_5,[X_INTRODUCED_0,a],0,X_INTRODUCED_6):: defines_var(X_INTRODUCED_6);
constraint int_le_reif(5,X_INTRODUCED_0,X_INTRODUCED_9):: defines_var(X_INTRODUCED_9);
constraint int_le_reif(b,3,X_INTRODUCED_10):: defines_var(X_INTRODUCED_10);
solve  satisfy;
