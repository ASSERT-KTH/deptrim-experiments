array [1..2] of int: X_INTRODUCED_11 = [1,-2];
array [1..2] of int: X_INTRODUCED_17 = [1,-3];
array [1..2] of int: X_INTRODUCED_24 = [1,-4];
array [1..2] of int: X_INTRODUCED_30 = [-1,1];
array [1..3] of int: X_INTRODUCED_34 = [1,-1,-1];
var 0..2: X_INTRODUCED_3;
var 2..20: X_INTRODUCED_4;
var 0..3: X_INTRODUCED_5;
var 3..20: X_INTRODUCED_6;
var 0..10: X_INTRODUCED_7;
var 10..20: X_INTRODUCED_8;
var 1..9: size_interval:: output_var;
var bool: X_INTRODUCED_12 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_13 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_14 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_18 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_20 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_21 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_25 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_27 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_28 ::var_is_introduced :: is_defined_var;
array [1..3] of var int: x:: output_array([1..3]) = [2,3,10];
array [1..6] of var int: intervals:: output_array([1..3,1..2]) = [X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8];
constraint array_bool_or([X_INTRODUCED_14,X_INTRODUCED_21,X_INTRODUCED_28],true);
constraint int_lin_eq(X_INTRODUCED_34,[X_INTRODUCED_4,X_INTRODUCED_3,size_interval],-1);
constraint int_lin_eq(X_INTRODUCED_34,[X_INTRODUCED_6,X_INTRODUCED_5,size_interval],-1);
constraint int_lin_eq(X_INTRODUCED_34,[X_INTRODUCED_8,X_INTRODUCED_7,size_interval],-1);
constraint int_lin_le(X_INTRODUCED_30,[X_INTRODUCED_5,X_INTRODUCED_4],-1);
constraint int_lin_le(X_INTRODUCED_30,[X_INTRODUCED_7,X_INTRODUCED_6],-1);
constraint int_lin_eq_reif(X_INTRODUCED_11,[X_INTRODUCED_4,size_interval],-1,X_INTRODUCED_12):: defines_var(X_INTRODUCED_12);
constraint int_eq_reif(X_INTRODUCED_3,size_interval,X_INTRODUCED_13):: defines_var(X_INTRODUCED_13);
constraint array_bool_and([X_INTRODUCED_12,X_INTRODUCED_13],X_INTRODUCED_14):: defines_var(X_INTRODUCED_14);
constraint int_lin_eq_reif(X_INTRODUCED_17,[X_INTRODUCED_6,size_interval],-1,X_INTRODUCED_18):: defines_var(X_INTRODUCED_18);
constraint int_lin_eq_reif(X_INTRODUCED_11,[X_INTRODUCED_5,size_interval],0,X_INTRODUCED_20):: defines_var(X_INTRODUCED_20);
constraint array_bool_and([X_INTRODUCED_18,X_INTRODUCED_20],X_INTRODUCED_21):: defines_var(X_INTRODUCED_21);
constraint int_lin_eq_reif(X_INTRODUCED_24,[X_INTRODUCED_8,size_interval],-1,X_INTRODUCED_25):: defines_var(X_INTRODUCED_25);
constraint int_lin_eq_reif(X_INTRODUCED_17,[X_INTRODUCED_7,size_interval],0,X_INTRODUCED_27):: defines_var(X_INTRODUCED_27);
constraint array_bool_and([X_INTRODUCED_25,X_INTRODUCED_27],X_INTRODUCED_28):: defines_var(X_INTRODUCED_28);
solve  satisfy;
