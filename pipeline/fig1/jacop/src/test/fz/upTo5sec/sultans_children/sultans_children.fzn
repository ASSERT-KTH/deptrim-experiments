array [1..2] of int: X_INTRODUCED_0 = [1,1];
array [1..2] of int: X_INTRODUCED_2 = [-1,-1];
var 1..500: b:: output_var;
var 1..500: g:: output_var;
var 2..1000: X_INTRODUCED_1 ::var_is_introduced :: is_defined_var;
var 0..499: X_INTRODUCED_4 ::var_is_introduced :: is_defined_var;
var 0..249500: X_INTRODUCED_5 ::var_is_introduced :: is_defined_var;
var 0..499000: X_INTRODUCED_7 ::var_is_introduced :: is_defined_var;
var 1..999: X_INTRODUCED_8 ::var_is_introduced :: is_defined_var;
var 2..999000: X_INTRODUCED_9 ::var_is_introduced :: is_defined_var;
constraint int_lin_le(X_INTRODUCED_0,[b,g],500);
constraint int_lin_le(X_INTRODUCED_2,[b,g],-100);
constraint int_eq(X_INTRODUCED_7,X_INTRODUCED_9);
constraint int_lin_eq([1,1,-1],[b,g,X_INTRODUCED_1],0):: defines_var(X_INTRODUCED_1);
constraint int_lin_eq([1,-1],[b,X_INTRODUCED_4],1):: defines_var(X_INTRODUCED_4);
constraint int_times(b,X_INTRODUCED_4,X_INTRODUCED_5):: defines_var(X_INTRODUCED_5);
constraint int_lin_eq([2,-1],[X_INTRODUCED_5,X_INTRODUCED_7],0):: defines_var(X_INTRODUCED_7);
constraint int_lin_eq([1,1,-1],[g,b,X_INTRODUCED_8],1):: defines_var(X_INTRODUCED_8);
constraint int_times(X_INTRODUCED_1,X_INTRODUCED_8,X_INTRODUCED_9):: defines_var(X_INTRODUCED_9);
solve  satisfy;
