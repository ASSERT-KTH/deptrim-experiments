array [1..2] of int: X_INTRODUCED_21 = [1,-1];
var 1..6: arthur:: output_var;
var 1..6: bella:: output_var;
var 1..6: craig:: output_var;
var 1..6: duncan:: output_var;
var 1..6: elizabeth:: output_var;
var 1..6: francesca:: output_var;
var set of 1..6: X_INTRODUCED_0 ::var_is_introduced ;
var 0..6: X_INTRODUCED_1 ::var_is_introduced :: is_defined_var;
var set of 1..6: X_INTRODUCED_3 ::var_is_introduced ;
var 0..6: X_INTRODUCED_4 ::var_is_introduced :: is_defined_var;
var set of 1..6: X_INTRODUCED_9 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_10 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_11 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_12 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_13 ::var_is_introduced :: is_defined_var;
var 0..5: X_INTRODUCED_15 ::var_is_introduced :: is_defined_var;
var -3..3: X_INTRODUCED_17 ::var_is_introduced ;
var 0..5: X_INTRODUCED_18 ::var_is_introduced :: is_defined_var;
var -3..3: X_INTRODUCED_20 ::var_is_introduced ;
var set of 1..6: X_INTRODUCED_22 ::var_is_introduced ;
var 0..6: X_INTRODUCED_23 ::var_is_introduced :: is_defined_var;
var set of 1..6: X_INTRODUCED_25 ::var_is_introduced ;
var 0..6: X_INTRODUCED_26 ::var_is_introduced :: is_defined_var;
var set of 1..6: X_INTRODUCED_31 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_32 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_33 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_34 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_35 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_36 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_37 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_38 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_39 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_40 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_41 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_42 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_43 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_44 ::var_is_introduced :: is_defined_var;
array [1..6] of var int: x = [arthur,bella,craig,duncan,elizabeth,francesca];
constraint int_eq(X_INTRODUCED_1,1);
constraint set_in(craig,X_INTRODUCED_0);
constraint int_eq(X_INTRODUCED_4,1);
constraint set_in(francesca,X_INTRODUCED_3);
constraint array_bool_or([X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13],true);
constraint int_mod(X_INTRODUCED_15,3,X_INTRODUCED_17);
constraint int_mod(X_INTRODUCED_18,3,X_INTRODUCED_20);
constraint int_lin_le(X_INTRODUCED_21,[X_INTRODUCED_17,X_INTRODUCED_20],-1);
constraint int_eq(X_INTRODUCED_23,1);
constraint set_in(bella,X_INTRODUCED_22);
constraint int_eq(X_INTRODUCED_26,1);
constraint set_in(duncan,X_INTRODUCED_25);
constraint array_bool_or([X_INTRODUCED_32,X_INTRODUCED_33,X_INTRODUCED_34,X_INTRODUCED_35],true);
constraint array_bool_or([X_INTRODUCED_38,X_INTRODUCED_41,X_INTRODUCED_44],true);
constraint int_lin_ne(X_INTRODUCED_21,[arthur,bella],0);
constraint int_lin_ne(X_INTRODUCED_21,[arthur,craig],0);
constraint int_lin_ne(X_INTRODUCED_21,[arthur,duncan],0);
constraint int_lin_ne(X_INTRODUCED_21,[arthur,elizabeth],0);
constraint int_lin_ne(X_INTRODUCED_21,[arthur,francesca],0);
constraint int_lin_ne(X_INTRODUCED_21,[bella,craig],0);
constraint int_lin_ne(X_INTRODUCED_21,[bella,duncan],0);
constraint int_lin_ne(X_INTRODUCED_21,[bella,elizabeth],0);
constraint int_lin_ne(X_INTRODUCED_21,[bella,francesca],0);
constraint int_lin_ne(X_INTRODUCED_21,[craig,duncan],0);
constraint int_lin_ne(X_INTRODUCED_21,[craig,elizabeth],0);
constraint int_lin_ne(X_INTRODUCED_21,[craig,francesca],0);
constraint int_lin_ne(X_INTRODUCED_21,[duncan,elizabeth],0);
constraint int_lin_ne(X_INTRODUCED_21,[duncan,francesca],0);
constraint int_lin_ne(X_INTRODUCED_21,[elizabeth,francesca],0);
constraint set_card(X_INTRODUCED_0,X_INTRODUCED_1):: defines_var(X_INTRODUCED_1);
constraint set_card(X_INTRODUCED_3,X_INTRODUCED_4):: defines_var(X_INTRODUCED_4);
constraint set_union(X_INTRODUCED_0,X_INTRODUCED_3,X_INTRODUCED_9):: defines_var(X_INTRODUCED_9);
constraint set_eq_reif(X_INTRODUCED_9,5..6,X_INTRODUCED_10):: defines_var(X_INTRODUCED_10);
constraint set_eq_reif(X_INTRODUCED_9,1..2,X_INTRODUCED_11):: defines_var(X_INTRODUCED_11);
constraint set_eq_reif(X_INTRODUCED_9,2..3,X_INTRODUCED_12):: defines_var(X_INTRODUCED_12);
constraint set_eq_reif(X_INTRODUCED_9,4..5,X_INTRODUCED_13):: defines_var(X_INTRODUCED_13);
constraint int_lin_eq([1,-1],[elizabeth,X_INTRODUCED_15],1):: defines_var(X_INTRODUCED_15);
constraint int_lin_eq([1,-1],[francesca,X_INTRODUCED_18],1):: defines_var(X_INTRODUCED_18);
constraint set_card(X_INTRODUCED_22,X_INTRODUCED_23):: defines_var(X_INTRODUCED_23);
constraint set_card(X_INTRODUCED_25,X_INTRODUCED_26):: defines_var(X_INTRODUCED_26);
constraint set_union(X_INTRODUCED_22,X_INTRODUCED_25,X_INTRODUCED_31):: defines_var(X_INTRODUCED_31);
constraint set_eq_reif(X_INTRODUCED_31,5..6,X_INTRODUCED_32):: defines_var(X_INTRODUCED_32);
constraint set_eq_reif(X_INTRODUCED_31,1..2,X_INTRODUCED_33):: defines_var(X_INTRODUCED_33);
constraint set_eq_reif(X_INTRODUCED_31,2..3,X_INTRODUCED_34):: defines_var(X_INTRODUCED_34);
constraint set_eq_reif(X_INTRODUCED_31,4..5,X_INTRODUCED_35):: defines_var(X_INTRODUCED_35);
constraint int_eq_reif(bella,2,X_INTRODUCED_36):: defines_var(X_INTRODUCED_36);
constraint int_eq_reif(arthur,5,X_INTRODUCED_37):: defines_var(X_INTRODUCED_37);
constraint array_bool_and([X_INTRODUCED_36,X_INTRODUCED_37],X_INTRODUCED_38):: defines_var(X_INTRODUCED_38);
constraint int_eq_reif(bella,3,X_INTRODUCED_39):: defines_var(X_INTRODUCED_39);
constraint int_eq_reif(arthur,6,X_INTRODUCED_40):: defines_var(X_INTRODUCED_40);
constraint array_bool_and([X_INTRODUCED_39,X_INTRODUCED_40],X_INTRODUCED_41):: defines_var(X_INTRODUCED_41);
constraint int_eq_reif(bella,1,X_INTRODUCED_42):: defines_var(X_INTRODUCED_42);
constraint int_eq_reif(arthur,4,X_INTRODUCED_43):: defines_var(X_INTRODUCED_43);
constraint array_bool_and([X_INTRODUCED_42,X_INTRODUCED_43],X_INTRODUCED_44):: defines_var(X_INTRODUCED_44);
solve  satisfy;
