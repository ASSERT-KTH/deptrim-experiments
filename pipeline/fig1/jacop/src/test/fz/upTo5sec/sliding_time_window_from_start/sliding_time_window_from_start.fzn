array [1..4] of int: X_INTRODUCED_35 = [1,-1,-1,-1];
var 0..3: X_INTRODUCED_6:: is_defined_var;
var 0..3: X_INTRODUCED_7:: is_defined_var;
var 0..3: X_INTRODUCED_8:: is_defined_var;
var 6..6: limitx:: output_var;
var bool: X_INTRODUCED_21 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_22 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_23 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_26 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_27 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_28 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_31 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_32 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_33 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_37 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_38 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_39 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_45 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_46 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_47 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_50 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_51 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_52 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_58 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_59 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_60 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_63 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_64 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_65 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_76 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_77 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_78 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_89 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_90 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_91 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_102 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_103 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_104 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_115 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_116 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_117 ::var_is_introduced :: is_defined_var;
array [1..6] of var int: tasks:: output_array([1..3,1..2]) = [10,3,5,1,6,2];
constraint int_lin_le([1,1,1,1,1,1,1,1],[X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_65,X_INTRODUCED_78,X_INTRODUCED_91,X_INTRODUCED_104,X_INTRODUCED_117],6);
constraint int_lin_eq(X_INTRODUCED_35,[X_INTRODUCED_6,X_INTRODUCED_23,X_INTRODUCED_28,X_INTRODUCED_33],0):: defines_var(X_INTRODUCED_6);
constraint int_lin_eq([1,-1,-1],[X_INTRODUCED_7,X_INTRODUCED_39,X_INTRODUCED_47],0):: defines_var(X_INTRODUCED_7);
constraint int_lin_eq([1,-1,-1],[X_INTRODUCED_8,X_INTRODUCED_52,X_INTRODUCED_60],0):: defines_var(X_INTRODUCED_8);
constraint int_le_reif(10,5,X_INTRODUCED_21):: defines_var(X_INTRODUCED_21);
constraint array_bool_and([X_INTRODUCED_21],X_INTRODUCED_22):: defines_var(X_INTRODUCED_22);
constraint bool2int(X_INTRODUCED_22,X_INTRODUCED_23):: defines_var(X_INTRODUCED_23);
constraint int_le_reif(5,5,X_INTRODUCED_26):: defines_var(X_INTRODUCED_26);
constraint array_bool_and([X_INTRODUCED_26],X_INTRODUCED_27):: defines_var(X_INTRODUCED_27);
constraint bool2int(X_INTRODUCED_27,X_INTRODUCED_28):: defines_var(X_INTRODUCED_28);
constraint int_le_reif(6,5,X_INTRODUCED_31):: defines_var(X_INTRODUCED_31);
constraint array_bool_and([X_INTRODUCED_31],X_INTRODUCED_32):: defines_var(X_INTRODUCED_32);
constraint bool2int(X_INTRODUCED_32,X_INTRODUCED_33):: defines_var(X_INTRODUCED_33);
constraint int_le_reif(10,6,X_INTRODUCED_37):: defines_var(X_INTRODUCED_37);
constraint array_bool_and([X_INTRODUCED_37],X_INTRODUCED_38):: defines_var(X_INTRODUCED_38);
constraint bool2int(X_INTRODUCED_38,X_INTRODUCED_39):: defines_var(X_INTRODUCED_39);
constraint int_le_reif(6,6,X_INTRODUCED_45):: defines_var(X_INTRODUCED_45);
constraint array_bool_and([X_INTRODUCED_45],X_INTRODUCED_46):: defines_var(X_INTRODUCED_46);
constraint bool2int(X_INTRODUCED_46,X_INTRODUCED_47):: defines_var(X_INTRODUCED_47);
constraint int_le_reif(10,7,X_INTRODUCED_50):: defines_var(X_INTRODUCED_50);
constraint array_bool_and([X_INTRODUCED_50],X_INTRODUCED_51):: defines_var(X_INTRODUCED_51);
constraint bool2int(X_INTRODUCED_51,X_INTRODUCED_52):: defines_var(X_INTRODUCED_52);
constraint int_le_reif(6,7,X_INTRODUCED_58):: defines_var(X_INTRODUCED_58);
constraint array_bool_and([X_INTRODUCED_58],X_INTRODUCED_59):: defines_var(X_INTRODUCED_59);
constraint bool2int(X_INTRODUCED_59,X_INTRODUCED_60):: defines_var(X_INTRODUCED_60);
constraint int_le_reif(10,8,X_INTRODUCED_63):: defines_var(X_INTRODUCED_63);
constraint array_bool_and([X_INTRODUCED_63],X_INTRODUCED_64):: defines_var(X_INTRODUCED_64);
constraint bool2int(X_INTRODUCED_64,X_INTRODUCED_65):: defines_var(X_INTRODUCED_65);
constraint int_le_reif(10,9,X_INTRODUCED_76):: defines_var(X_INTRODUCED_76);
constraint array_bool_and([X_INTRODUCED_76],X_INTRODUCED_77):: defines_var(X_INTRODUCED_77);
constraint bool2int(X_INTRODUCED_77,X_INTRODUCED_78):: defines_var(X_INTRODUCED_78);
constraint int_le_reif(10,10,X_INTRODUCED_89):: defines_var(X_INTRODUCED_89);
constraint array_bool_and([X_INTRODUCED_89],X_INTRODUCED_90):: defines_var(X_INTRODUCED_90);
constraint bool2int(X_INTRODUCED_90,X_INTRODUCED_91):: defines_var(X_INTRODUCED_91);
constraint int_le_reif(10,11,X_INTRODUCED_102):: defines_var(X_INTRODUCED_102);
constraint array_bool_and([X_INTRODUCED_102],X_INTRODUCED_103):: defines_var(X_INTRODUCED_103);
constraint bool2int(X_INTRODUCED_103,X_INTRODUCED_104):: defines_var(X_INTRODUCED_104);
constraint int_le_reif(10,12,X_INTRODUCED_115):: defines_var(X_INTRODUCED_115);
constraint array_bool_and([X_INTRODUCED_115],X_INTRODUCED_116):: defines_var(X_INTRODUCED_116);
constraint bool2int(X_INTRODUCED_116,X_INTRODUCED_117):: defines_var(X_INTRODUCED_117);
solve  satisfy;
