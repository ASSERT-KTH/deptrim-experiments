predicate jacop_alldiff(array [int] of var int: x);
array [1..25] of int: X_INTRODUCED_10 = [0,4,5,8,-2,4,0,-1,6,0,5,-1,0,9,-4,8,6,9,7,6,-2,0,-4,6,0];
array [1..25] of int: X_INTRODUCED_15 = [0,4,5,8,-2,4,0,-1,6,0,5,-1,0,9,-4,8,6,9,7,6,-2,0,-4,6,0];
array [1..25] of int: X_INTRODUCED_20 = [0,4,5,8,-2,4,0,-1,6,0,5,-1,0,9,-4,8,6,9,7,6,-2,0,-4,6,0];
array [1..25] of int: X_INTRODUCED_25 = [0,4,5,8,-2,4,0,-1,6,0,5,-1,0,9,-4,8,6,9,7,6,-2,0,-4,6,0];
var 1..5: X_INTRODUCED_0;
var 1..5: X_INTRODUCED_1;
var 1..5: X_INTRODUCED_2;
var 1..5: X_INTRODUCED_3;
var 1..5: X_INTRODUCED_4;
var 1..25: X_INTRODUCED_8 ::var_is_introduced :: is_defined_var;
var -4..9: X_INTRODUCED_9 ::var_is_introduced :: is_defined_var;
var 1..25: X_INTRODUCED_13 ::var_is_introduced :: is_defined_var;
var -4..9: X_INTRODUCED_14 ::var_is_introduced :: is_defined_var;
var 1..25: X_INTRODUCED_18 ::var_is_introduced :: is_defined_var;
var -4..9: X_INTRODUCED_19 ::var_is_introduced :: is_defined_var;
var 1..25: X_INTRODUCED_23 ::var_is_introduced :: is_defined_var;
var -4..9: X_INTRODUCED_24 ::var_is_introduced :: is_defined_var;
var -16..36: X_INTRODUCED_26 ::var_is_introduced :: is_defined_var;
array [1..5] of var int: y:: output_array([1..5]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4];
constraint jacop_alldiff(y);
constraint array_int_element(X_INTRODUCED_8,X_INTRODUCED_10,X_INTRODUCED_9):: defines_var(X_INTRODUCED_9);
constraint array_int_element(X_INTRODUCED_13,X_INTRODUCED_15,X_INTRODUCED_14):: defines_var(X_INTRODUCED_14);
constraint array_int_element(X_INTRODUCED_18,X_INTRODUCED_20,X_INTRODUCED_19):: defines_var(X_INTRODUCED_19);
constraint array_int_element(X_INTRODUCED_23,X_INTRODUCED_25,X_INTRODUCED_24):: defines_var(X_INTRODUCED_24);
constraint int_lin_eq([1,5,-1],[X_INTRODUCED_1,X_INTRODUCED_0,X_INTRODUCED_8],5):: domain:: defines_var(X_INTRODUCED_8);
constraint int_lin_eq([1,5,-1],[X_INTRODUCED_2,X_INTRODUCED_1,X_INTRODUCED_13],5):: domain:: defines_var(X_INTRODUCED_13);
constraint int_lin_eq([1,5,-1],[X_INTRODUCED_3,X_INTRODUCED_2,X_INTRODUCED_18],5):: domain:: defines_var(X_INTRODUCED_18);
constraint int_lin_eq([1,5,-1],[X_INTRODUCED_4,X_INTRODUCED_3,X_INTRODUCED_23],5):: domain:: defines_var(X_INTRODUCED_23);
constraint int_lin_eq([1,1,1,1,-1],[X_INTRODUCED_9,X_INTRODUCED_14,X_INTRODUCED_19,X_INTRODUCED_24,X_INTRODUCED_26],0):: defines_var(X_INTRODUCED_26);
solve  maximize X_INTRODUCED_26;
