predicate jacop_alldiff(array [int] of var int: x);
array [1..2] of int: X_INTRODUCED_86 = [-1,-1];
array [1..3] of int: X_INTRODUCED_88 = [-1,-1,-1];
array [1..4] of int: X_INTRODUCED_90 = [-1,-1,-1,-1];
var 1..9: X_INTRODUCED_0;
var 1..9: X_INTRODUCED_1;
var 1..9: X_INTRODUCED_2;
var 1..9: X_INTRODUCED_3;
var 1..9: X_INTRODUCED_4;
var 1..9: X_INTRODUCED_5;
var 1..9: X_INTRODUCED_6;
var 1..9: X_INTRODUCED_7;
var 1..9: X_INTRODUCED_8;
var 1..9: X_INTRODUCED_9;
var 1..9: X_INTRODUCED_10;
var 1..9: X_INTRODUCED_11;
var 1..9: X_INTRODUCED_12;
var 1..9: X_INTRODUCED_13;
var 1..9: X_INTRODUCED_14;
var 1..9: X_INTRODUCED_15;
var 1..9: X_INTRODUCED_16;
var 1..9: X_INTRODUCED_17;
var 1..9: X_INTRODUCED_18;
var 1..9: X_INTRODUCED_19;
var 1..9: X_INTRODUCED_20;
var 1..9: X_INTRODUCED_21;
var 1..9: X_INTRODUCED_22;
var 1..9: X_INTRODUCED_23;
var 1..9: X_INTRODUCED_24;
var 1..9: X_INTRODUCED_25;
var 1..9: X_INTRODUCED_26;
var 1..9: X_INTRODUCED_27;
var 1..9: X_INTRODUCED_28;
var 1..9: X_INTRODUCED_29;
var 1..9: X_INTRODUCED_30;
var 1..9: X_INTRODUCED_31;
var 1..9: X_INTRODUCED_32;
var 1..9: X_INTRODUCED_33;
var 1..9: X_INTRODUCED_34;
var 1..9: X_INTRODUCED_35;
var 1..9: X_INTRODUCED_36;
var 1..9: X_INTRODUCED_37;
var 1..9: X_INTRODUCED_38;
var 1..9: X_INTRODUCED_39;
var 1..9: X_INTRODUCED_40;
var 1..9: X_INTRODUCED_41;
var 1..9: X_INTRODUCED_42;
var 1..9: X_INTRODUCED_43;
var 1..9: X_INTRODUCED_44;
var 1..9: X_INTRODUCED_45;
var 1..9: X_INTRODUCED_46;
var 1..9: X_INTRODUCED_47;
var 1..9: X_INTRODUCED_48;
var 1..9: X_INTRODUCED_49;
var 1..9: X_INTRODUCED_50;
var 1..9: X_INTRODUCED_51;
var 1..9: X_INTRODUCED_52;
var 1..9: X_INTRODUCED_53;
var 1..9: X_INTRODUCED_54;
var 1..9: X_INTRODUCED_55;
var 1..9: X_INTRODUCED_56;
var 1..9: X_INTRODUCED_57;
var 1..9: X_INTRODUCED_58;
var 1..9: X_INTRODUCED_59;
var 1..9: X_INTRODUCED_60;
var 1..9: X_INTRODUCED_61;
var 1..9: X_INTRODUCED_62;
var 1..9: X_INTRODUCED_63;
var 1..9: X_INTRODUCED_64;
var 1..9: X_INTRODUCED_65;
var 1..9: X_INTRODUCED_66;
var 1..9: X_INTRODUCED_67;
var 1..9: X_INTRODUCED_68;
var 1..9: X_INTRODUCED_69;
var 1..9: X_INTRODUCED_70;
var 1..9: X_INTRODUCED_71;
var 1..9: X_INTRODUCED_72;
var 1..9: X_INTRODUCED_73;
var 1..9: X_INTRODUCED_74;
var 1..9: X_INTRODUCED_75;
var 1..9: X_INTRODUCED_76;
var 1..9: X_INTRODUCED_77;
var 1..9: X_INTRODUCED_78;
var 1..9: X_INTRODUCED_79;
var 1..9: X_INTRODUCED_80;
array [1..81] of var int: x:: output_array([1..9,1..9]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29,X_INTRODUCED_30,X_INTRODUCED_31,X_INTRODUCED_32,X_INTRODUCED_33,X_INTRODUCED_34,X_INTRODUCED_35,X_INTRODUCED_36,X_INTRODUCED_37,X_INTRODUCED_38,X_INTRODUCED_39,X_INTRODUCED_40,X_INTRODUCED_41,X_INTRODUCED_42,X_INTRODUCED_43,X_INTRODUCED_44,X_INTRODUCED_45,X_INTRODUCED_46,X_INTRODUCED_47,X_INTRODUCED_48,X_INTRODUCED_49,X_INTRODUCED_50,X_INTRODUCED_51,X_INTRODUCED_52,X_INTRODUCED_53,X_INTRODUCED_54,X_INTRODUCED_55,X_INTRODUCED_56,X_INTRODUCED_57,X_INTRODUCED_58,X_INTRODUCED_59,X_INTRODUCED_60,X_INTRODUCED_61,X_INTRODUCED_62,X_INTRODUCED_63,X_INTRODUCED_64,X_INTRODUCED_65,X_INTRODUCED_66,X_INTRODUCED_67,X_INTRODUCED_68,X_INTRODUCED_69,X_INTRODUCED_70,X_INTRODUCED_71,X_INTRODUCED_72,X_INTRODUCED_73,X_INTRODUCED_74,X_INTRODUCED_75,X_INTRODUCED_76,X_INTRODUCED_77,X_INTRODUCED_78,X_INTRODUCED_79,X_INTRODUCED_80];
array [1..81] of var int: X_INTRODUCED_81 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29,X_INTRODUCED_30,X_INTRODUCED_31,X_INTRODUCED_32,X_INTRODUCED_33,X_INTRODUCED_34,X_INTRODUCED_35,X_INTRODUCED_36,X_INTRODUCED_37,X_INTRODUCED_38,X_INTRODUCED_39,X_INTRODUCED_40,X_INTRODUCED_41,X_INTRODUCED_42,X_INTRODUCED_43,X_INTRODUCED_44,X_INTRODUCED_45,X_INTRODUCED_46,X_INTRODUCED_47,X_INTRODUCED_48,X_INTRODUCED_49,X_INTRODUCED_50,X_INTRODUCED_51,X_INTRODUCED_52,X_INTRODUCED_53,X_INTRODUCED_54,X_INTRODUCED_55,X_INTRODUCED_56,X_INTRODUCED_57,X_INTRODUCED_58,X_INTRODUCED_59,X_INTRODUCED_60,X_INTRODUCED_61,X_INTRODUCED_62,X_INTRODUCED_63,X_INTRODUCED_64,X_INTRODUCED_65,X_INTRODUCED_66,X_INTRODUCED_67,X_INTRODUCED_68,X_INTRODUCED_69,X_INTRODUCED_70,X_INTRODUCED_71,X_INTRODUCED_72,X_INTRODUCED_73,X_INTRODUCED_74,X_INTRODUCED_75,X_INTRODUCED_76,X_INTRODUCED_77,X_INTRODUCED_78,X_INTRODUCED_79,X_INTRODUCED_80];
array [1..9] of var int: X_INTRODUCED_82 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20];
array [1..9] of var int: X_INTRODUCED_83 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_9,X_INTRODUCED_18,X_INTRODUCED_27,X_INTRODUCED_36,X_INTRODUCED_45,X_INTRODUCED_54,X_INTRODUCED_63,X_INTRODUCED_72];
array [1..9] of var int: X_INTRODUCED_84 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8];
constraint jacop_alldiff(X_INTRODUCED_82);
constraint jacop_alldiff([X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23]);
constraint jacop_alldiff([X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26]);
constraint jacop_alldiff([X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29,X_INTRODUCED_36,X_INTRODUCED_37,X_INTRODUCED_38,X_INTRODUCED_45,X_INTRODUCED_46,X_INTRODUCED_47]);
constraint jacop_alldiff([X_INTRODUCED_30,X_INTRODUCED_31,X_INTRODUCED_32,X_INTRODUCED_39,X_INTRODUCED_40,X_INTRODUCED_41,X_INTRODUCED_48,X_INTRODUCED_49,X_INTRODUCED_50]);
constraint jacop_alldiff([X_INTRODUCED_33,X_INTRODUCED_34,X_INTRODUCED_35,X_INTRODUCED_42,X_INTRODUCED_43,X_INTRODUCED_44,X_INTRODUCED_51,X_INTRODUCED_52,X_INTRODUCED_53]);
constraint jacop_alldiff([X_INTRODUCED_54,X_INTRODUCED_55,X_INTRODUCED_56,X_INTRODUCED_63,X_INTRODUCED_64,X_INTRODUCED_65,X_INTRODUCED_72,X_INTRODUCED_73,X_INTRODUCED_74]);
constraint jacop_alldiff([X_INTRODUCED_57,X_INTRODUCED_58,X_INTRODUCED_59,X_INTRODUCED_66,X_INTRODUCED_67,X_INTRODUCED_68,X_INTRODUCED_75,X_INTRODUCED_76,X_INTRODUCED_77]);
constraint jacop_alldiff([X_INTRODUCED_60,X_INTRODUCED_61,X_INTRODUCED_62,X_INTRODUCED_69,X_INTRODUCED_70,X_INTRODUCED_71,X_INTRODUCED_78,X_INTRODUCED_79,X_INTRODUCED_80]);
constraint jacop_alldiff(X_INTRODUCED_83);
constraint jacop_alldiff(X_INTRODUCED_84);
constraint jacop_alldiff([X_INTRODUCED_1,X_INTRODUCED_10,X_INTRODUCED_19,X_INTRODUCED_28,X_INTRODUCED_37,X_INTRODUCED_46,X_INTRODUCED_55,X_INTRODUCED_64,X_INTRODUCED_73]);
constraint jacop_alldiff([X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17]);
constraint jacop_alldiff([X_INTRODUCED_2,X_INTRODUCED_11,X_INTRODUCED_20,X_INTRODUCED_29,X_INTRODUCED_38,X_INTRODUCED_47,X_INTRODUCED_56,X_INTRODUCED_65,X_INTRODUCED_74]);
constraint jacop_alldiff([X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26]);
constraint jacop_alldiff([X_INTRODUCED_3,X_INTRODUCED_12,X_INTRODUCED_21,X_INTRODUCED_30,X_INTRODUCED_39,X_INTRODUCED_48,X_INTRODUCED_57,X_INTRODUCED_66,X_INTRODUCED_75]);
constraint jacop_alldiff([X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29,X_INTRODUCED_30,X_INTRODUCED_31,X_INTRODUCED_32,X_INTRODUCED_33,X_INTRODUCED_34,X_INTRODUCED_35]);
constraint jacop_alldiff([X_INTRODUCED_4,X_INTRODUCED_13,X_INTRODUCED_22,X_INTRODUCED_31,X_INTRODUCED_40,X_INTRODUCED_49,X_INTRODUCED_58,X_INTRODUCED_67,X_INTRODUCED_76]);
constraint jacop_alldiff([X_INTRODUCED_36,X_INTRODUCED_37,X_INTRODUCED_38,X_INTRODUCED_39,X_INTRODUCED_40,X_INTRODUCED_41,X_INTRODUCED_42,X_INTRODUCED_43,X_INTRODUCED_44]);
constraint jacop_alldiff([X_INTRODUCED_5,X_INTRODUCED_14,X_INTRODUCED_23,X_INTRODUCED_32,X_INTRODUCED_41,X_INTRODUCED_50,X_INTRODUCED_59,X_INTRODUCED_68,X_INTRODUCED_77]);
constraint jacop_alldiff([X_INTRODUCED_45,X_INTRODUCED_46,X_INTRODUCED_47,X_INTRODUCED_48,X_INTRODUCED_49,X_INTRODUCED_50,X_INTRODUCED_51,X_INTRODUCED_52,X_INTRODUCED_53]);
constraint jacop_alldiff([X_INTRODUCED_6,X_INTRODUCED_15,X_INTRODUCED_24,X_INTRODUCED_33,X_INTRODUCED_42,X_INTRODUCED_51,X_INTRODUCED_60,X_INTRODUCED_69,X_INTRODUCED_78]);
constraint jacop_alldiff([X_INTRODUCED_54,X_INTRODUCED_55,X_INTRODUCED_56,X_INTRODUCED_57,X_INTRODUCED_58,X_INTRODUCED_59,X_INTRODUCED_60,X_INTRODUCED_61,X_INTRODUCED_62]);
constraint jacop_alldiff([X_INTRODUCED_7,X_INTRODUCED_16,X_INTRODUCED_25,X_INTRODUCED_34,X_INTRODUCED_43,X_INTRODUCED_52,X_INTRODUCED_61,X_INTRODUCED_70,X_INTRODUCED_79]);
constraint jacop_alldiff([X_INTRODUCED_63,X_INTRODUCED_64,X_INTRODUCED_65,X_INTRODUCED_66,X_INTRODUCED_67,X_INTRODUCED_68,X_INTRODUCED_69,X_INTRODUCED_70,X_INTRODUCED_71]);
constraint jacop_alldiff([X_INTRODUCED_8,X_INTRODUCED_17,X_INTRODUCED_26,X_INTRODUCED_35,X_INTRODUCED_44,X_INTRODUCED_53,X_INTRODUCED_62,X_INTRODUCED_71,X_INTRODUCED_80]);
constraint jacop_alldiff([X_INTRODUCED_72,X_INTRODUCED_73,X_INTRODUCED_74,X_INTRODUCED_75,X_INTRODUCED_76,X_INTRODUCED_77,X_INTRODUCED_78,X_INTRODUCED_79,X_INTRODUCED_80]);
constraint int_lin_eq(X_INTRODUCED_86,[X_INTRODUCED_0,X_INTRODUCED_1],-3);
constraint int_lin_eq(X_INTRODUCED_88,[X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4],-15);
constraint int_lin_eq(X_INTRODUCED_90,[X_INTRODUCED_5,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_22],-22);
constraint int_lin_eq(X_INTRODUCED_86,[X_INTRODUCED_6,X_INTRODUCED_15],-4);
constraint int_lin_eq(X_INTRODUCED_86,[X_INTRODUCED_7,X_INTRODUCED_16],-16);
constraint int_lin_eq(X_INTRODUCED_90,[X_INTRODUCED_8,X_INTRODUCED_17,X_INTRODUCED_26,X_INTRODUCED_35],-15);
constraint int_lin_eq(X_INTRODUCED_90,[X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_18,X_INTRODUCED_19],-25);
constraint int_lin_eq(X_INTRODUCED_86,[X_INTRODUCED_11,X_INTRODUCED_12],-17);
constraint int_lin_eq(X_INTRODUCED_88,[X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_30],-9);
constraint int_lin_eq(X_INTRODUCED_88,[X_INTRODUCED_23,X_INTRODUCED_32,X_INTRODUCED_41],-8);
constraint int_lin_eq(X_INTRODUCED_88,[X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_33],-20);
constraint int_lin_eq(X_INTRODUCED_88,[X_INTRODUCED_34,X_INTRODUCED_42,X_INTRODUCED_43],-17);
constraint int_lin_eq(X_INTRODUCED_86,[X_INTRODUCED_27,X_INTRODUCED_36],-6);
constraint int_lin_eq(X_INTRODUCED_86,[X_INTRODUCED_28,X_INTRODUCED_29],-14);
constraint int_lin_eq(X_INTRODUCED_88,[X_INTRODUCED_31,X_INTRODUCED_40,X_INTRODUCED_49],-17);
constraint int_lin_eq(X_INTRODUCED_88,[X_INTRODUCED_37,X_INTRODUCED_38,X_INTRODUCED_46],-13);
constraint int_lin_eq(X_INTRODUCED_88,[X_INTRODUCED_39,X_INTRODUCED_48,X_INTRODUCED_57],-20);
constraint int_lin_eq(X_INTRODUCED_86,[X_INTRODUCED_44,X_INTRODUCED_53],-12);
constraint int_lin_eq(X_INTRODUCED_90,[X_INTRODUCED_45,X_INTRODUCED_54,X_INTRODUCED_63,X_INTRODUCED_72],-27);
constraint int_lin_eq(X_INTRODUCED_88,[X_INTRODUCED_47,X_INTRODUCED_55,X_INTRODUCED_56],-6);
constraint int_lin_eq(X_INTRODUCED_88,[X_INTRODUCED_50,X_INTRODUCED_59,X_INTRODUCED_60],-20);
constraint int_lin_eq(X_INTRODUCED_86,[X_INTRODUCED_51,X_INTRODUCED_52],-6);
constraint int_lin_eq(X_INTRODUCED_90,[X_INTRODUCED_58,X_INTRODUCED_66,X_INTRODUCED_67,X_INTRODUCED_75],-10);
constraint int_lin_eq(X_INTRODUCED_90,[X_INTRODUCED_61,X_INTRODUCED_62,X_INTRODUCED_70,X_INTRODUCED_71],-14);
constraint int_lin_eq(X_INTRODUCED_86,[X_INTRODUCED_64,X_INTRODUCED_73],-8);
constraint int_lin_eq(X_INTRODUCED_86,[X_INTRODUCED_65,X_INTRODUCED_74],-16);
constraint int_lin_eq(X_INTRODUCED_86,[X_INTRODUCED_68,X_INTRODUCED_69],-15);
constraint int_lin_eq(X_INTRODUCED_88,[X_INTRODUCED_76,X_INTRODUCED_77,X_INTRODUCED_78],-13);
constraint int_lin_eq(X_INTRODUCED_86,[X_INTRODUCED_79,X_INTRODUCED_80],-17);
solve :: int_search(X_INTRODUCED_81,first_fail,indomain_min,complete) satisfy;
