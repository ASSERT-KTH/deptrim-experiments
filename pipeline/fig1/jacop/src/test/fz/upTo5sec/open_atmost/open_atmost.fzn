var set of 1..4: s:: output_var;
var 1..1: n:: output_var;
var 2..2: value:: output_var;
var bool: X_INTRODUCED_5 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_6 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_7 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_9 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_10 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_11 ::var_is_introduced :: is_defined_var;
array [1..4] of var int: variables:: output_array([1..4]) = [2,2,4,5];
constraint int_lin_le([1,1],[X_INTRODUCED_7,X_INTRODUCED_11],1);
constraint set_eq(s,2..4);
constraint set_in_reif(1,s,X_INTRODUCED_5):: defines_var(X_INTRODUCED_5);
constraint array_bool_and([X_INTRODUCED_5],X_INTRODUCED_6):: defines_var(X_INTRODUCED_6);
constraint bool2int(X_INTRODUCED_6,X_INTRODUCED_7):: defines_var(X_INTRODUCED_7);
constraint set_in_reif(2,s,X_INTRODUCED_9):: defines_var(X_INTRODUCED_9);
constraint array_bool_and([X_INTRODUCED_9],X_INTRODUCED_10):: defines_var(X_INTRODUCED_10);
constraint bool2int(X_INTRODUCED_10,X_INTRODUCED_11):: defines_var(X_INTRODUCED_11);
solve  satisfy;
