array [1..2] of int: X_INTRODUCED_14 = [1,-1];
var 1..4: X_INTRODUCED_0;
var 1..4: X_INTRODUCED_1;
var 1..4: X_INTRODUCED_2;
var 1..4: X_INTRODUCED_3;
var 1..4: X_INTRODUCED_4;
var 1..4: X_INTRODUCED_5;
var 1..4: X_INTRODUCED_7;
var 1..4: cupids:: output_var;
var 2..4: happy_faces:: output_var;
var 1..4: leprechauns:: output_var;
var 2..4: reindeer:: output_var;
var 1..4: daughter:: output_var;
var 1..4: father_in_law:: output_var;
var 3..3: sister:: output_var;
var 1..3: uncle:: output_var;
var bool: X_INTRODUCED_8 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_9 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_10 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_11 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_12 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_13 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_16 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_17 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_18 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_19 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_20 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_21 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_22 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_23 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_27 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_28 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_29 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_30 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_31 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_32 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_33 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_34 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_35 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_36 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_37 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_38 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_24 ::var_is_introduced :: is_defined_var = false;
array [1..4] of var int: ties_inv:: output_array([1..4]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3];
array [1..4] of var int: relative_inv:: output_array([1..4]) = [X_INTRODUCED_4,X_INTRODUCED_5,3,X_INTRODUCED_7];
array [1..4] of var int: ties = [cupids,happy_faces,leprechauns,reindeer];
array [1..4] of var int: relative = [daughter,father_in_law,3,uncle];
constraint array_bool_or([X_INTRODUCED_10,X_INTRODUCED_13],true);
constraint int_lin_ne([1],[happy_faces],3);
constraint int_lin_ne(X_INTRODUCED_14,[leprechauns,daughter],0);
constraint int_eq_reif(X_INTRODUCED_4,1,X_INTRODUCED_16):: defines_var(X_INTRODUCED_16);
constraint int_eq_reif(X_INTRODUCED_5,1,X_INTRODUCED_17):: defines_var(X_INTRODUCED_17);
constraint int_eq_reif(3,1,X_INTRODUCED_18):: defines_var(X_INTRODUCED_18);
constraint int_eq_reif(X_INTRODUCED_7,1,X_INTRODUCED_19):: defines_var(X_INTRODUCED_19);
constraint int_eq_reif(X_INTRODUCED_4,2,X_INTRODUCED_20):: defines_var(X_INTRODUCED_20);
constraint int_eq_reif(X_INTRODUCED_5,2,X_INTRODUCED_8):: defines_var(X_INTRODUCED_8);
constraint int_eq_reif(3,2,X_INTRODUCED_21):: defines_var(X_INTRODUCED_21);
constraint int_eq_reif(X_INTRODUCED_7,2,X_INTRODUCED_11):: defines_var(X_INTRODUCED_11);
constraint int_ne(X_INTRODUCED_4,3);
constraint int_ne(X_INTRODUCED_5,3);
constraint int_ne(X_INTRODUCED_7,3);
constraint int_eq_reif(X_INTRODUCED_4,4,X_INTRODUCED_22):: defines_var(X_INTRODUCED_22);
constraint int_eq_reif(X_INTRODUCED_5,4,X_INTRODUCED_23):: defines_var(X_INTRODUCED_23);
constraint int_ne(X_INTRODUCED_7,4);
constraint int_eq_reif(X_INTRODUCED_0,1,X_INTRODUCED_27):: defines_var(X_INTRODUCED_27);
constraint int_eq_reif(X_INTRODUCED_1,1,X_INTRODUCED_28):: defines_var(X_INTRODUCED_28);
constraint int_eq_reif(X_INTRODUCED_2,1,X_INTRODUCED_29):: defines_var(X_INTRODUCED_29);
constraint int_eq_reif(X_INTRODUCED_3,1,X_INTRODUCED_30):: defines_var(X_INTRODUCED_30);
constraint int_ne(X_INTRODUCED_0,2);
constraint int_eq_reif(X_INTRODUCED_1,2,X_INTRODUCED_31):: defines_var(X_INTRODUCED_31);
constraint int_eq_reif(X_INTRODUCED_2,2,X_INTRODUCED_32):: defines_var(X_INTRODUCED_32);
constraint int_eq_reif(X_INTRODUCED_3,2,X_INTRODUCED_33):: defines_var(X_INTRODUCED_33);
constraint int_eq_reif(X_INTRODUCED_0,3,X_INTRODUCED_34):: defines_var(X_INTRODUCED_34);
constraint int_eq_reif(X_INTRODUCED_1,3,X_INTRODUCED_12):: defines_var(X_INTRODUCED_12);
constraint int_eq_reif(X_INTRODUCED_2,3,X_INTRODUCED_35):: defines_var(X_INTRODUCED_35);
constraint int_eq_reif(X_INTRODUCED_3,3,X_INTRODUCED_9):: defines_var(X_INTRODUCED_9);
constraint int_ne(X_INTRODUCED_0,4);
constraint int_eq_reif(X_INTRODUCED_1,4,X_INTRODUCED_36):: defines_var(X_INTRODUCED_36);
constraint int_eq_reif(X_INTRODUCED_2,4,X_INTRODUCED_37):: defines_var(X_INTRODUCED_37);
constraint int_eq_reif(X_INTRODUCED_3,4,X_INTRODUCED_38):: defines_var(X_INTRODUCED_38);
constraint int_lin_ne(X_INTRODUCED_14,[daughter,father_in_law],0);
constraint int_lin_ne([1],[daughter],3);
constraint int_lin_ne(X_INTRODUCED_14,[daughter,uncle],0);
constraint int_lin_ne([1],[father_in_law],3);
constraint int_lin_ne(X_INTRODUCED_14,[father_in_law,uncle],0);
constraint int_lin_ne([-1],[uncle],-3);
constraint int_lin_ne(X_INTRODUCED_14,[cupids,happy_faces],0);
constraint int_lin_ne(X_INTRODUCED_14,[cupids,leprechauns],0);
constraint int_lin_ne(X_INTRODUCED_14,[cupids,reindeer],0);
constraint int_lin_ne(X_INTRODUCED_14,[happy_faces,leprechauns],0);
constraint int_lin_ne(X_INTRODUCED_14,[happy_faces,reindeer],0);
constraint int_lin_ne(X_INTRODUCED_14,[leprechauns,reindeer],0);
constraint int_eq_reif(father_in_law,2,X_INTRODUCED_8):: defines_var(X_INTRODUCED_8);
constraint int_eq_reif(leprechauns,4,X_INTRODUCED_9):: defines_var(X_INTRODUCED_9);
constraint array_bool_and([X_INTRODUCED_8,X_INTRODUCED_9],X_INTRODUCED_10):: defines_var(X_INTRODUCED_10);
constraint int_eq_reif(father_in_law,4,X_INTRODUCED_11):: defines_var(X_INTRODUCED_11);
constraint int_eq_reif(leprechauns,2,X_INTRODUCED_12):: defines_var(X_INTRODUCED_12);
constraint array_bool_and([X_INTRODUCED_11,X_INTRODUCED_12],X_INTRODUCED_13):: defines_var(X_INTRODUCED_13);
constraint int_eq_reif(daughter,1,X_INTRODUCED_16):: defines_var(X_INTRODUCED_16);
constraint int_eq_reif(daughter,2,X_INTRODUCED_17):: defines_var(X_INTRODUCED_17);
constraint int_eq_reif(daughter,3,X_INTRODUCED_18):: defines_var(X_INTRODUCED_18);
constraint int_eq_reif(daughter,4,X_INTRODUCED_19):: defines_var(X_INTRODUCED_19);
constraint int_eq_reif(father_in_law,1,X_INTRODUCED_20):: defines_var(X_INTRODUCED_20);
constraint int_eq_reif(father_in_law,3,X_INTRODUCED_21):: defines_var(X_INTRODUCED_21);
constraint int_eq_reif(uncle,1,X_INTRODUCED_22):: defines_var(X_INTRODUCED_22);
constraint int_eq_reif(uncle,2,X_INTRODUCED_23):: defines_var(X_INTRODUCED_23);
constraint int_eq_reif(uncle,3,X_INTRODUCED_24):: defines_var(X_INTRODUCED_24);
constraint int_eq_reif(cupids,1,X_INTRODUCED_27):: defines_var(X_INTRODUCED_27);
constraint int_eq_reif(cupids,2,X_INTRODUCED_28):: defines_var(X_INTRODUCED_28);
constraint int_eq_reif(cupids,3,X_INTRODUCED_29):: defines_var(X_INTRODUCED_29);
constraint int_eq_reif(cupids,4,X_INTRODUCED_30):: defines_var(X_INTRODUCED_30);
constraint int_eq_reif(happy_faces,2,X_INTRODUCED_31):: defines_var(X_INTRODUCED_31);
constraint int_eq_reif(happy_faces,3,X_INTRODUCED_32):: defines_var(X_INTRODUCED_32);
constraint int_eq_reif(happy_faces,4,X_INTRODUCED_33):: defines_var(X_INTRODUCED_33);
constraint int_eq_reif(leprechauns,1,X_INTRODUCED_34):: defines_var(X_INTRODUCED_34);
constraint int_eq_reif(leprechauns,3,X_INTRODUCED_35):: defines_var(X_INTRODUCED_35);
constraint int_eq_reif(reindeer,2,X_INTRODUCED_36):: defines_var(X_INTRODUCED_36);
constraint int_eq_reif(reindeer,3,X_INTRODUCED_37):: defines_var(X_INTRODUCED_37);
constraint int_eq_reif(reindeer,4,X_INTRODUCED_38):: defines_var(X_INTRODUCED_38);
solve  satisfy;
