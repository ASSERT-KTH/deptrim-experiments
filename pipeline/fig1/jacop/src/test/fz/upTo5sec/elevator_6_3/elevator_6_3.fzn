array [1..10] of int: X_INTRODUCED_23 = [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1];
array [1..4] of int: X_INTRODUCED_26 = [-1,-1,-1,-1];
var 0..1: X_INTRODUCED_0;
var 0..1: X_INTRODUCED_1;
var 0..1: X_INTRODUCED_2;
var 0..1: X_INTRODUCED_3;
var 0..1: X_INTRODUCED_4;
var 0..1: X_INTRODUCED_5;
var 0..1: X_INTRODUCED_6;
var 0..1: X_INTRODUCED_7;
var 0..1: X_INTRODUCED_8;
var 0..1: X_INTRODUCED_9;
var 0..1: X_INTRODUCED_10;
var 0..1: X_INTRODUCED_11;
var 0..1: X_INTRODUCED_12;
var 0..1: X_INTRODUCED_13;
var 0..1: X_INTRODUCED_14;
var 0..1: X_INTRODUCED_15;
var 0..1: X_INTRODUCED_16;
var 0..1: X_INTRODUCED_17;
var 0..1: X_INTRODUCED_18;
var 0..1: X_INTRODUCED_19;
var 0..20: sumx:: is_defined_var;
array [1..20] of var int: x:: output_array([1..20]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19];
array [1..20] of var int: X_INTRODUCED_20 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19];
constraint int_lin_le(X_INTRODUCED_23,[X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9],-1);
constraint int_lin_le(X_INTRODUCED_26,[X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3],-1);
constraint int_lin_le(X_INTRODUCED_26,[X_INTRODUCED_0,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6],-1);
constraint int_lin_le(X_INTRODUCED_26,[X_INTRODUCED_1,X_INTRODUCED_4,X_INTRODUCED_7,X_INTRODUCED_8],-1);
constraint int_lin_le(X_INTRODUCED_26,[X_INTRODUCED_2,X_INTRODUCED_5,X_INTRODUCED_7,X_INTRODUCED_9],-1);
constraint int_lin_le(X_INTRODUCED_26,[X_INTRODUCED_3,X_INTRODUCED_6,X_INTRODUCED_8,X_INTRODUCED_9],-1);
constraint int_lin_le(X_INTRODUCED_23,[X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15],-1);
constraint int_lin_le(X_INTRODUCED_26,[X_INTRODUCED_0,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12],-1);
constraint int_lin_le(X_INTRODUCED_26,[X_INTRODUCED_1,X_INTRODUCED_10,X_INTRODUCED_13,X_INTRODUCED_14],-1);
constraint int_lin_le(X_INTRODUCED_26,[X_INTRODUCED_2,X_INTRODUCED_11,X_INTRODUCED_13,X_INTRODUCED_15],-1);
constraint int_lin_le(X_INTRODUCED_26,[X_INTRODUCED_3,X_INTRODUCED_12,X_INTRODUCED_14,X_INTRODUCED_15],-1);
constraint int_lin_le(X_INTRODUCED_23,[X_INTRODUCED_0,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18],-1);
constraint int_lin_le(X_INTRODUCED_26,[X_INTRODUCED_4,X_INTRODUCED_10,X_INTRODUCED_16,X_INTRODUCED_17],-1);
constraint int_lin_le(X_INTRODUCED_26,[X_INTRODUCED_5,X_INTRODUCED_11,X_INTRODUCED_16,X_INTRODUCED_18],-1);
constraint int_lin_le(X_INTRODUCED_26,[X_INTRODUCED_6,X_INTRODUCED_12,X_INTRODUCED_17,X_INTRODUCED_18],-1);
constraint int_lin_le(X_INTRODUCED_23,[X_INTRODUCED_1,X_INTRODUCED_4,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_10,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_19],-1);
constraint int_lin_le(X_INTRODUCED_26,[X_INTRODUCED_7,X_INTRODUCED_13,X_INTRODUCED_16,X_INTRODUCED_19],-1);
constraint int_lin_le(X_INTRODUCED_26,[X_INTRODUCED_8,X_INTRODUCED_14,X_INTRODUCED_17,X_INTRODUCED_19],-1);
constraint int_lin_le(X_INTRODUCED_23,[X_INTRODUCED_2,X_INTRODUCED_5,X_INTRODUCED_7,X_INTRODUCED_9,X_INTRODUCED_11,X_INTRODUCED_13,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_18,X_INTRODUCED_19],-1);
constraint int_lin_le(X_INTRODUCED_26,[X_INTRODUCED_9,X_INTRODUCED_15,X_INTRODUCED_18,X_INTRODUCED_19],-1);
constraint int_lin_le(X_INTRODUCED_23,[X_INTRODUCED_3,X_INTRODUCED_6,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_12,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19],-1);
constraint int_lin_eq([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,sumx],0):: defines_var(sumx);
solve :: int_search(x,first_fail,indomain_min,complete) minimize sumx;
