array [1..3] of int: X_INTRODUCED_38 = [1,1,1];
var 0..1: X_INTRODUCED_1;
var 0..1: X_INTRODUCED_4;
var 0..1: X_INTRODUCED_5;
var 0..1: X_INTRODUCED_7;
var 0..1: X_INTRODUCED_9;
var 0..1: X_INTRODUCED_10;
var 0..1: X_INTRODUCED_11;
var 0..1: X_INTRODUCED_14;
var 0..1: X_INTRODUCED_16;
var 0..1: X_INTRODUCED_17;
var 0..1: X_INTRODUCED_19;
var 0..1: X_INTRODUCED_20;
var 0..1: X_INTRODUCED_21;
var 0..1: X_INTRODUCED_22;
var 0..1: X_INTRODUCED_23;
var bool: X_INTRODUCED_25 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_26 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_27 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_28 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_29 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_30 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_31 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_32 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_33 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_34 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_35 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_36 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_39 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_41 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_42 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_43 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_44 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_45 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_46 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_47 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_48 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_49 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_50 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_56 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_57 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_62 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_63 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_64 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_65 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_66 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_67 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_68 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_70 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_71 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_72 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_77 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_78 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_79 ::var_is_introduced :: is_defined_var;
array [1..25] of var int: x:: output_array([1..5,1..5]) = [1,X_INTRODUCED_1,1,1,X_INTRODUCED_4,X_INTRODUCED_5,1,X_INTRODUCED_7,1,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,1,0,X_INTRODUCED_14,0,X_INTRODUCED_16,X_INTRODUCED_17,1,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,1];
constraint int_lin_eq(X_INTRODUCED_38,[X_INTRODUCED_28,X_INTRODUCED_32,X_INTRODUCED_36],0);
constraint int_lin_eq([1,1,1,1],[X_INTRODUCED_42,X_INTRODUCED_46,X_INTRODUCED_50,X_INTRODUCED_57],1);
constraint int_lin_eq([1,1,1],[X_INTRODUCED_7,X_INTRODUCED_17,X_INTRODUCED_22],0);
constraint int_lin_eq([1,1,1,1],[X_INTRODUCED_4,X_INTRODUCED_9,X_INTRODUCED_14,X_INTRODUCED_19],3);
constraint int_lin_eq([1,1,1,1],[X_INTRODUCED_64,X_INTRODUCED_68,X_INTRODUCED_72,X_INTRODUCED_79],2);
constraint int_lin_eq([1,1],[X_INTRODUCED_1,X_INTRODUCED_4],0);
constraint int_lin_eq([1,1,1],[X_INTRODUCED_5,X_INTRODUCED_7,X_INTRODUCED_9],1);
constraint int_lin_eq([1,1,1],[X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_14],2);
constraint int_lin_eq([1,1,1],[X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_19],2);
constraint int_lin_eq([1,1,1,1],[X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23],2);
constraint int_eq_reif(X_INTRODUCED_20,1,X_INTRODUCED_25):: defines_var(X_INTRODUCED_25);
constraint int_eq_reif(X_INTRODUCED_5,X_INTRODUCED_20,X_INTRODUCED_26):: defines_var(X_INTRODUCED_26);
constraint array_bool_and([X_INTRODUCED_25,X_INTRODUCED_26],X_INTRODUCED_27):: defines_var(X_INTRODUCED_27);
constraint bool2int(X_INTRODUCED_27,X_INTRODUCED_28):: defines_var(X_INTRODUCED_28);
constraint int_eq_reif(X_INTRODUCED_22,1,X_INTRODUCED_29):: defines_var(X_INTRODUCED_29);
constraint int_eq_reif(X_INTRODUCED_7,X_INTRODUCED_22,X_INTRODUCED_30):: defines_var(X_INTRODUCED_30);
constraint array_bool_and([X_INTRODUCED_29,X_INTRODUCED_30],X_INTRODUCED_31):: defines_var(X_INTRODUCED_31);
constraint bool2int(X_INTRODUCED_31,X_INTRODUCED_32):: defines_var(X_INTRODUCED_32);
constraint int_eq_reif(X_INTRODUCED_23,1,X_INTRODUCED_33):: defines_var(X_INTRODUCED_33);
constraint int_eq_reif(1,X_INTRODUCED_23,X_INTRODUCED_34):: defines_var(X_INTRODUCED_34);
constraint array_bool_and([X_INTRODUCED_33,X_INTRODUCED_34],X_INTRODUCED_35):: defines_var(X_INTRODUCED_35);
constraint bool2int(X_INTRODUCED_35,X_INTRODUCED_36):: defines_var(X_INTRODUCED_36);
constraint int_eq_reif(X_INTRODUCED_4,1,X_INTRODUCED_39):: defines_var(X_INTRODUCED_39);
constraint array_bool_and([X_INTRODUCED_39],X_INTRODUCED_41):: defines_var(X_INTRODUCED_41);
constraint bool2int(X_INTRODUCED_41,X_INTRODUCED_42):: defines_var(X_INTRODUCED_42);
constraint int_eq_reif(X_INTRODUCED_9,1,X_INTRODUCED_43):: defines_var(X_INTRODUCED_43);
constraint int_eq_reif(X_INTRODUCED_5,1,X_INTRODUCED_44):: defines_var(X_INTRODUCED_44);
constraint array_bool_and([X_INTRODUCED_43,X_INTRODUCED_44],X_INTRODUCED_45):: defines_var(X_INTRODUCED_45);
constraint bool2int(X_INTRODUCED_45,X_INTRODUCED_46):: defines_var(X_INTRODUCED_46);
constraint int_eq_reif(X_INTRODUCED_14,1,X_INTRODUCED_47):: defines_var(X_INTRODUCED_47);
constraint int_eq_reif(X_INTRODUCED_10,1,X_INTRODUCED_48):: defines_var(X_INTRODUCED_48);
constraint array_bool_and([X_INTRODUCED_47,X_INTRODUCED_48],X_INTRODUCED_49):: defines_var(X_INTRODUCED_49);
constraint bool2int(X_INTRODUCED_49,X_INTRODUCED_50):: defines_var(X_INTRODUCED_50);
constraint array_bool_and([X_INTRODUCED_25],X_INTRODUCED_56):: defines_var(X_INTRODUCED_56);
constraint bool2int(X_INTRODUCED_56,X_INTRODUCED_57):: defines_var(X_INTRODUCED_57);
constraint int_eq_reif(X_INTRODUCED_5,X_INTRODUCED_10,X_INTRODUCED_62):: defines_var(X_INTRODUCED_62);
constraint array_bool_and([X_INTRODUCED_48,X_INTRODUCED_62],X_INTRODUCED_63):: defines_var(X_INTRODUCED_63);
constraint bool2int(X_INTRODUCED_63,X_INTRODUCED_64):: defines_var(X_INTRODUCED_64);
constraint int_eq_reif(X_INTRODUCED_11,1,X_INTRODUCED_65):: defines_var(X_INTRODUCED_65);
constraint int_eq_reif(1,X_INTRODUCED_11,X_INTRODUCED_66):: defines_var(X_INTRODUCED_66);
constraint array_bool_and([X_INTRODUCED_65,X_INTRODUCED_66],X_INTRODUCED_67):: defines_var(X_INTRODUCED_67);
constraint bool2int(X_INTRODUCED_67,X_INTRODUCED_68):: defines_var(X_INTRODUCED_68);
constraint int_eq_reif(X_INTRODUCED_7,1,X_INTRODUCED_70):: defines_var(X_INTRODUCED_70);
constraint array_bool_and([X_INTRODUCED_70],X_INTRODUCED_71):: defines_var(X_INTRODUCED_71);
constraint bool2int(X_INTRODUCED_71,X_INTRODUCED_72):: defines_var(X_INTRODUCED_72);
constraint int_eq_reif(X_INTRODUCED_9,X_INTRODUCED_14,X_INTRODUCED_77):: defines_var(X_INTRODUCED_77);
constraint array_bool_and([X_INTRODUCED_47,X_INTRODUCED_77],X_INTRODUCED_78):: defines_var(X_INTRODUCED_78);
constraint bool2int(X_INTRODUCED_78,X_INTRODUCED_79):: defines_var(X_INTRODUCED_79);
solve  satisfy;
