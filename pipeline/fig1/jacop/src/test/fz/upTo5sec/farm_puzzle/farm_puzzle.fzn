array [1..8] of int: X_INTRODUCED_30 = [1,-1,-1,-1,-1,-1,-1,-1];
array [1..2] of int: X_INTRODUCED_61 = [1,-1];
array [1..7] of int: X_INTRODUCED_63 = [1,1,1,1,1,1,1];
var {2,4}: X_INTRODUCED_0;
var {2,4}: X_INTRODUCED_1;
var {2,4}: X_INTRODUCED_2;
var {2,4}: X_INTRODUCED_3;
var {2,4}: X_INTRODUCED_4;
var {2,4}: X_INTRODUCED_5;
var {2,4}: X_INTRODUCED_6;
var 0..7: X_INTRODUCED_9:: is_defined_var;
var 0..7: X_INTRODUCED_10:: is_defined_var;
var 0..7: X_INTRODUCED_11:: is_defined_var;
var bool: X_INTRODUCED_15 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_16 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_17 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_18 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_19 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_20 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_21 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_22 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_23 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_24 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_25 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_26 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_27 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_28 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_31 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_32 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_33 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_34 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_35 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_36 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_37 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_38 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_39 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_40 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_41 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_42 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_43 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_44 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_46 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_47 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_48 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_49 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_50 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_51 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_52 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_53 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_54 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_55 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_56 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_57 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_58 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_59 ::var_is_introduced :: is_defined_var;
array [1..5] of var int: c:: output_array([0..4]) = [0,0,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11];
constraint int_lin_le([1,1,1],[X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11],7);
constraint int_lin_eq(X_INTRODUCED_30,[X_INTRODUCED_9,X_INTRODUCED_16,X_INTRODUCED_18,X_INTRODUCED_20,X_INTRODUCED_22,X_INTRODUCED_24,X_INTRODUCED_26,X_INTRODUCED_28],0):: defines_var(X_INTRODUCED_9);
constraint int_lin_eq(X_INTRODUCED_30,[X_INTRODUCED_10,X_INTRODUCED_32,X_INTRODUCED_34,X_INTRODUCED_36,X_INTRODUCED_38,X_INTRODUCED_40,X_INTRODUCED_42,X_INTRODUCED_44],0):: defines_var(X_INTRODUCED_10);
constraint int_lin_eq(X_INTRODUCED_30,[X_INTRODUCED_11,X_INTRODUCED_47,X_INTRODUCED_49,X_INTRODUCED_51,X_INTRODUCED_53,X_INTRODUCED_55,X_INTRODUCED_57,X_INTRODUCED_59],0):: defines_var(X_INTRODUCED_11);
constraint int_lin_le(X_INTRODUCED_61,[X_INTRODUCED_0,X_INTRODUCED_1],0);
constraint int_lin_le(X_INTRODUCED_61,[X_INTRODUCED_1,X_INTRODUCED_2],0);
constraint int_lin_le(X_INTRODUCED_61,[X_INTRODUCED_2,X_INTRODUCED_3],0);
constraint int_lin_le(X_INTRODUCED_61,[X_INTRODUCED_3,X_INTRODUCED_4],0);
constraint int_lin_le(X_INTRODUCED_61,[X_INTRODUCED_4,X_INTRODUCED_5],0);
constraint int_lin_le(X_INTRODUCED_61,[X_INTRODUCED_5,X_INTRODUCED_6],0);
constraint int_lin_eq(X_INTRODUCED_63,[X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6],22);
constraint int_eq_reif(X_INTRODUCED_0,2,X_INTRODUCED_15):: defines_var(X_INTRODUCED_15);
constraint bool2int(X_INTRODUCED_15,X_INTRODUCED_16):: defines_var(X_INTRODUCED_16);
constraint int_eq_reif(X_INTRODUCED_1,2,X_INTRODUCED_17):: defines_var(X_INTRODUCED_17);
constraint bool2int(X_INTRODUCED_17,X_INTRODUCED_18):: defines_var(X_INTRODUCED_18);
constraint int_eq_reif(X_INTRODUCED_2,2,X_INTRODUCED_19):: defines_var(X_INTRODUCED_19);
constraint bool2int(X_INTRODUCED_19,X_INTRODUCED_20):: defines_var(X_INTRODUCED_20);
constraint int_eq_reif(X_INTRODUCED_3,2,X_INTRODUCED_21):: defines_var(X_INTRODUCED_21);
constraint bool2int(X_INTRODUCED_21,X_INTRODUCED_22):: defines_var(X_INTRODUCED_22);
constraint int_eq_reif(X_INTRODUCED_4,2,X_INTRODUCED_23):: defines_var(X_INTRODUCED_23);
constraint bool2int(X_INTRODUCED_23,X_INTRODUCED_24):: defines_var(X_INTRODUCED_24);
constraint int_eq_reif(X_INTRODUCED_5,2,X_INTRODUCED_25):: defines_var(X_INTRODUCED_25);
constraint bool2int(X_INTRODUCED_25,X_INTRODUCED_26):: defines_var(X_INTRODUCED_26);
constraint int_eq_reif(X_INTRODUCED_6,2,X_INTRODUCED_27):: defines_var(X_INTRODUCED_27);
constraint bool2int(X_INTRODUCED_27,X_INTRODUCED_28):: defines_var(X_INTRODUCED_28);
constraint int_eq_reif(X_INTRODUCED_0,3,X_INTRODUCED_31):: defines_var(X_INTRODUCED_31);
constraint bool2int(X_INTRODUCED_31,X_INTRODUCED_32):: defines_var(X_INTRODUCED_32);
constraint int_eq_reif(X_INTRODUCED_1,3,X_INTRODUCED_33):: defines_var(X_INTRODUCED_33);
constraint bool2int(X_INTRODUCED_33,X_INTRODUCED_34):: defines_var(X_INTRODUCED_34);
constraint int_eq_reif(X_INTRODUCED_2,3,X_INTRODUCED_35):: defines_var(X_INTRODUCED_35);
constraint bool2int(X_INTRODUCED_35,X_INTRODUCED_36):: defines_var(X_INTRODUCED_36);
constraint int_eq_reif(X_INTRODUCED_3,3,X_INTRODUCED_37):: defines_var(X_INTRODUCED_37);
constraint bool2int(X_INTRODUCED_37,X_INTRODUCED_38):: defines_var(X_INTRODUCED_38);
constraint int_eq_reif(X_INTRODUCED_4,3,X_INTRODUCED_39):: defines_var(X_INTRODUCED_39);
constraint bool2int(X_INTRODUCED_39,X_INTRODUCED_40):: defines_var(X_INTRODUCED_40);
constraint int_eq_reif(X_INTRODUCED_5,3,X_INTRODUCED_41):: defines_var(X_INTRODUCED_41);
constraint bool2int(X_INTRODUCED_41,X_INTRODUCED_42):: defines_var(X_INTRODUCED_42);
constraint int_eq_reif(X_INTRODUCED_6,3,X_INTRODUCED_43):: defines_var(X_INTRODUCED_43);
constraint bool2int(X_INTRODUCED_43,X_INTRODUCED_44):: defines_var(X_INTRODUCED_44);
constraint int_eq_reif(X_INTRODUCED_0,4,X_INTRODUCED_46):: defines_var(X_INTRODUCED_46);
constraint bool2int(X_INTRODUCED_46,X_INTRODUCED_47):: defines_var(X_INTRODUCED_47);
constraint int_eq_reif(X_INTRODUCED_1,4,X_INTRODUCED_48):: defines_var(X_INTRODUCED_48);
constraint bool2int(X_INTRODUCED_48,X_INTRODUCED_49):: defines_var(X_INTRODUCED_49);
constraint int_eq_reif(X_INTRODUCED_2,4,X_INTRODUCED_50):: defines_var(X_INTRODUCED_50);
constraint bool2int(X_INTRODUCED_50,X_INTRODUCED_51):: defines_var(X_INTRODUCED_51);
constraint int_eq_reif(X_INTRODUCED_3,4,X_INTRODUCED_52):: defines_var(X_INTRODUCED_52);
constraint bool2int(X_INTRODUCED_52,X_INTRODUCED_53):: defines_var(X_INTRODUCED_53);
constraint int_eq_reif(X_INTRODUCED_4,4,X_INTRODUCED_54):: defines_var(X_INTRODUCED_54);
constraint bool2int(X_INTRODUCED_54,X_INTRODUCED_55):: defines_var(X_INTRODUCED_55);
constraint int_eq_reif(X_INTRODUCED_5,4,X_INTRODUCED_56):: defines_var(X_INTRODUCED_56);
constraint bool2int(X_INTRODUCED_56,X_INTRODUCED_57):: defines_var(X_INTRODUCED_57);
constraint int_eq_reif(X_INTRODUCED_6,4,X_INTRODUCED_58):: defines_var(X_INTRODUCED_58);
constraint bool2int(X_INTRODUCED_58,X_INTRODUCED_59):: defines_var(X_INTRODUCED_59);
solve  satisfy;
