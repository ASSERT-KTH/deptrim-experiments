array [1..4] of int: X_INTRODUCED_18 = [4,2,4,2];
var 9..9: X_INTRODUCED_5;
var int: X_INTRODUCED_15 ::var_is_introduced ;
var int: X_INTRODUCED_16 ::var_is_introduced ;
var int: X_INTRODUCED_17 ::var_is_introduced ;
var 1..4: min_ix:: output_var;
var 2..4: X_INTRODUCED_20 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_21 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_22 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_23 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_24 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_25 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_26 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_27 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_28 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_29 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_30 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_31 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_32 ::var_is_introduced :: is_defined_var;
array [1..5] of var int: x:: output_array([1..5]) = [5,3,1,2,X_INTRODUCED_20];
array [1..4] of var int: dists:: output_array([1..4]) = [9,30,11,27];
constraint int_min(30,9,X_INTRODUCED_15);
constraint int_min(11,X_INTRODUCED_15,X_INTRODUCED_16);
constraint int_min(27,X_INTRODUCED_16,X_INTRODUCED_17);
constraint array_int_element(min_ix,X_INTRODUCED_18,X_INTRODUCED_20):: defines_var(X_INTRODUCED_20);
constraint array_bool_or([X_INTRODUCED_23,X_INTRODUCED_26,X_INTRODUCED_29,X_INTRODUCED_32],true);
constraint int_eq_reif(min_ix,1,X_INTRODUCED_21):: defines_var(X_INTRODUCED_21);
constraint int_eq_reif(9,X_INTRODUCED_17,X_INTRODUCED_22):: defines_var(X_INTRODUCED_22);
constraint array_bool_and([X_INTRODUCED_21,X_INTRODUCED_22],X_INTRODUCED_23):: defines_var(X_INTRODUCED_23);
constraint int_eq_reif(min_ix,2,X_INTRODUCED_24):: defines_var(X_INTRODUCED_24);
constraint int_eq_reif(30,X_INTRODUCED_17,X_INTRODUCED_25):: defines_var(X_INTRODUCED_25);
constraint array_bool_and([X_INTRODUCED_24,X_INTRODUCED_25],X_INTRODUCED_26):: defines_var(X_INTRODUCED_26);
constraint int_eq_reif(min_ix,3,X_INTRODUCED_27):: defines_var(X_INTRODUCED_27);
constraint int_eq_reif(11,X_INTRODUCED_17,X_INTRODUCED_28):: defines_var(X_INTRODUCED_28);
constraint array_bool_and([X_INTRODUCED_27,X_INTRODUCED_28],X_INTRODUCED_29):: defines_var(X_INTRODUCED_29);
constraint int_eq_reif(min_ix,4,X_INTRODUCED_30):: defines_var(X_INTRODUCED_30);
constraint int_eq_reif(27,X_INTRODUCED_17,X_INTRODUCED_31):: defines_var(X_INTRODUCED_31);
constraint array_bool_and([X_INTRODUCED_30,X_INTRODUCED_31],X_INTRODUCED_32):: defines_var(X_INTRODUCED_32);
solve  minimize X_INTRODUCED_17;
