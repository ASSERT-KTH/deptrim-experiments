var 1..4: X_INTRODUCED_0;
var 1..4: X_INTRODUCED_1;
var 1..4: X_INTRODUCED_2;
var 1..4: X_INTRODUCED_3;
var {1,3}: X_INTRODUCED_4;
var {1,3}: X_INTRODUCED_5;
var {1,3}: X_INTRODUCED_6;
var {1,3}: X_INTRODUCED_7;
var bool: X_INTRODUCED_10 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_11 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_12 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_13 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_14 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_16 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_17 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_18 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_19 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_21 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_22 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_23 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_24 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_26 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_27 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_28 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_30 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_31 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_32 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_33 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_34 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_35 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_36 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_37 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_38 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_39 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_41 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_42 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_43 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_44 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_45 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_46 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_47 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_48 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_49 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_50 ::var_is_introduced :: is_defined_var;
array [1..4] of var int: V:: output_array([1..4]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3];
array [1..4] of var int: P:: output_array([1..4]) = [X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7];
constraint array_bool_or([X_INTRODUCED_14,X_INTRODUCED_19,X_INTRODUCED_24,X_INTRODUCED_28],true);
constraint array_bool_or([X_INTRODUCED_32,X_INTRODUCED_35,X_INTRODUCED_37,X_INTRODUCED_39],true);
constraint array_bool_or([X_INTRODUCED_43,X_INTRODUCED_45,X_INTRODUCED_48,X_INTRODUCED_50],true);
constraint int_eq_reif(X_INTRODUCED_0,1,X_INTRODUCED_10):: defines_var(X_INTRODUCED_10);
constraint int_eq_reif(X_INTRODUCED_4,1,X_INTRODUCED_11):: defines_var(X_INTRODUCED_11);
constraint int_eq_reif(X_INTRODUCED_1,3,X_INTRODUCED_12):: defines_var(X_INTRODUCED_12);
constraint int_eq_reif(X_INTRODUCED_5,3,X_INTRODUCED_13):: defines_var(X_INTRODUCED_13);
constraint array_bool_and([X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13],X_INTRODUCED_14):: defines_var(X_INTRODUCED_14);
constraint int_eq_reif(X_INTRODUCED_0,2,X_INTRODUCED_16):: defines_var(X_INTRODUCED_16);
constraint int_eq_reif(X_INTRODUCED_1,4,X_INTRODUCED_17):: defines_var(X_INTRODUCED_17);
constraint int_eq_reif(X_INTRODUCED_5,1,X_INTRODUCED_18):: defines_var(X_INTRODUCED_18);
constraint array_bool_and([X_INTRODUCED_11,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18],X_INTRODUCED_19):: defines_var(X_INTRODUCED_19);
constraint int_eq_reif(X_INTRODUCED_0,3,X_INTRODUCED_21):: defines_var(X_INTRODUCED_21);
constraint int_eq_reif(X_INTRODUCED_4,3,X_INTRODUCED_22):: defines_var(X_INTRODUCED_22);
constraint int_eq_reif(X_INTRODUCED_1,1,X_INTRODUCED_23):: defines_var(X_INTRODUCED_23);
constraint array_bool_and([X_INTRODUCED_18,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23],X_INTRODUCED_24):: defines_var(X_INTRODUCED_24);
constraint int_eq_reif(X_INTRODUCED_0,4,X_INTRODUCED_26):: defines_var(X_INTRODUCED_26);
constraint int_eq_reif(X_INTRODUCED_1,2,X_INTRODUCED_27):: defines_var(X_INTRODUCED_27);
constraint array_bool_and([X_INTRODUCED_11,X_INTRODUCED_18,X_INTRODUCED_26,X_INTRODUCED_27],X_INTRODUCED_28):: defines_var(X_INTRODUCED_28);
constraint int_eq_reif(X_INTRODUCED_2,3,X_INTRODUCED_30):: defines_var(X_INTRODUCED_30);
constraint int_eq_reif(X_INTRODUCED_6,3,X_INTRODUCED_31):: defines_var(X_INTRODUCED_31);
constraint array_bool_and([X_INTRODUCED_18,X_INTRODUCED_23,X_INTRODUCED_30,X_INTRODUCED_31],X_INTRODUCED_32):: defines_var(X_INTRODUCED_32);
constraint int_eq_reif(X_INTRODUCED_2,4,X_INTRODUCED_33):: defines_var(X_INTRODUCED_33);
constraint int_eq_reif(X_INTRODUCED_6,1,X_INTRODUCED_34):: defines_var(X_INTRODUCED_34);
constraint array_bool_and([X_INTRODUCED_18,X_INTRODUCED_27,X_INTRODUCED_33,X_INTRODUCED_34],X_INTRODUCED_35):: defines_var(X_INTRODUCED_35);
constraint int_eq_reif(X_INTRODUCED_2,1,X_INTRODUCED_36):: defines_var(X_INTRODUCED_36);
constraint array_bool_and([X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_34,X_INTRODUCED_36],X_INTRODUCED_37):: defines_var(X_INTRODUCED_37);
constraint int_eq_reif(X_INTRODUCED_2,2,X_INTRODUCED_38):: defines_var(X_INTRODUCED_38);
constraint array_bool_and([X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_34,X_INTRODUCED_38],X_INTRODUCED_39):: defines_var(X_INTRODUCED_39);
constraint int_eq_reif(X_INTRODUCED_3,1,X_INTRODUCED_41):: defines_var(X_INTRODUCED_41);
constraint int_eq_reif(X_INTRODUCED_7,1,X_INTRODUCED_42):: defines_var(X_INTRODUCED_42);
constraint array_bool_and([X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_41,X_INTRODUCED_42],X_INTRODUCED_43):: defines_var(X_INTRODUCED_43);
constraint int_eq_reif(X_INTRODUCED_3,2,X_INTRODUCED_44):: defines_var(X_INTRODUCED_44);
constraint array_bool_and([X_INTRODUCED_11,X_INTRODUCED_26,X_INTRODUCED_42,X_INTRODUCED_44],X_INTRODUCED_45):: defines_var(X_INTRODUCED_45);
constraint int_eq_reif(X_INTRODUCED_3,3,X_INTRODUCED_46):: defines_var(X_INTRODUCED_46);
constraint int_eq_reif(X_INTRODUCED_7,3,X_INTRODUCED_47):: defines_var(X_INTRODUCED_47);
constraint array_bool_and([X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_46,X_INTRODUCED_47],X_INTRODUCED_48):: defines_var(X_INTRODUCED_48);
constraint int_eq_reif(X_INTRODUCED_3,4,X_INTRODUCED_49):: defines_var(X_INTRODUCED_49);
constraint array_bool_and([X_INTRODUCED_11,X_INTRODUCED_16,X_INTRODUCED_42,X_INTRODUCED_49],X_INTRODUCED_50):: defines_var(X_INTRODUCED_50);
solve :: int_search([X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7],first_fail,indomain_min,complete) satisfy;
