array [1..2] of int: X_INTRODUCED_5 = [1,-1];
array [1..2] of int: X_INTRODUCED_15 = [1,-2];
array [1..2] of int: X_INTRODUCED_24 = [-1,1];
array [1..2] of int: X_INTRODUCED_29 = [1,1];
var 1..4: X_INTRODUCED_0;
var 3..4: X_INTRODUCED_1:: is_defined_var;
var 1..4: X_INTRODUCED_2;
var 1..4: X_INTRODUCED_3;
var 2..4: Ellis:: output_var;
var {1,2,4}: Ingham:: output_var;
var 1..4: Oakley:: output_var;
var {1,3,4}: Summers:: output_var;
var 1..4: dogcatcher:: output_var;
var 1..4: flautist:: output_var;
var 1..4: secretary:: output_var;
var 1..4: zookeeper:: output_var;
var bool: X_INTRODUCED_7 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_8 ::var_is_introduced :: is_defined_var;
var 2..4: X_INTRODUCED_10 ::var_is_introduced :: is_defined_var;
var 1..4: X_INTRODUCED_12 ::var_is_introduced :: is_defined_var;
var 1..4: X_INTRODUCED_17 ::var_is_introduced :: is_defined_var;
var 1..4: X_INTRODUCED_21 ::var_is_introduced :: is_defined_var;
var 1..4: X_INTRODUCED_23 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_25 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_26 ::var_is_introduced :: is_defined_var;
var 1..4: X_INTRODUCED_28 ::var_is_introduced :: is_defined_var;
array [1..4] of var int: muffins:: output_array([1..4]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3];
array [1..4] of var int: lastname = [Ellis,Ingham,Oakley,Summers];
array [1..4] of var int: job = [dogcatcher,flautist,secretary,zookeeper];
constraint int_lin_ne(X_INTRODUCED_5,[dogcatcher,flautist],0);
constraint int_lin_ne(X_INTRODUCED_5,[dogcatcher,secretary],0);
constraint int_lin_ne(X_INTRODUCED_5,[dogcatcher,zookeeper],0);
constraint int_lin_ne(X_INTRODUCED_5,[flautist,secretary],0);
constraint int_lin_ne(X_INTRODUCED_5,[flautist,zookeeper],0);
constraint int_lin_ne(X_INTRODUCED_5,[secretary,zookeeper],0);
constraint int_lin_ne(X_INTRODUCED_5,[Ellis,Ingham],0);
constraint int_lin_ne(X_INTRODUCED_5,[Ellis,Oakley],0);
constraint int_lin_ne(X_INTRODUCED_5,[Ellis,Summers],0);
constraint int_lin_ne(X_INTRODUCED_5,[Ingham,Oakley],0);
constraint int_lin_ne(X_INTRODUCED_5,[Ingham,Summers],0);
constraint int_lin_ne(X_INTRODUCED_5,[Oakley,Summers],0);
constraint array_bool_or([X_INTRODUCED_7,X_INTRODUCED_8],true);
constraint int_lin_ne(X_INTRODUCED_5,[flautist,Oakley],0);
constraint array_var_int_element(flautist,muffins,X_INTRODUCED_10):: defines_var(X_INTRODUCED_10);
constraint array_var_int_element(Oakley,muffins,X_INTRODUCED_12):: defines_var(X_INTRODUCED_12);
constraint int_lin_eq(X_INTRODUCED_15,[X_INTRODUCED_10,X_INTRODUCED_12],0):: defines_var(X_INTRODUCED_10);
constraint array_var_int_element(Summers,muffins,X_INTRODUCED_17):: defines_var(X_INTRODUCED_17);
constraint int_lin_eq(X_INTRODUCED_5,[X_INTRODUCED_1,X_INTRODUCED_17],2):: defines_var(X_INTRODUCED_1);
constraint array_var_int_element(secretary,muffins,X_INTRODUCED_21):: defines_var(X_INTRODUCED_21);
constraint array_var_int_element(dogcatcher,muffins,X_INTRODUCED_23):: defines_var(X_INTRODUCED_23);
constraint int_lin_le(X_INTRODUCED_24,[X_INTRODUCED_21,X_INTRODUCED_23],-1);
constraint array_bool_or([X_INTRODUCED_25,X_INTRODUCED_26],true);
constraint array_var_int_element(Ellis,muffins,X_INTRODUCED_28):: defines_var(X_INTRODUCED_28);
constraint int_lin_eq(X_INTRODUCED_29,[X_INTRODUCED_0,X_INTRODUCED_28],6);
constraint int_lin_ne(X_INTRODUCED_5,[X_INTRODUCED_0,X_INTRODUCED_1],0);
constraint int_lin_ne(X_INTRODUCED_5,[X_INTRODUCED_0,X_INTRODUCED_2],0);
constraint int_lin_ne(X_INTRODUCED_5,[X_INTRODUCED_0,X_INTRODUCED_3],0);
constraint int_lin_ne(X_INTRODUCED_5,[X_INTRODUCED_1,X_INTRODUCED_2],0);
constraint int_lin_ne(X_INTRODUCED_5,[X_INTRODUCED_1,X_INTRODUCED_3],0);
constraint int_lin_ne(X_INTRODUCED_5,[X_INTRODUCED_2,X_INTRODUCED_3],0);
constraint int_eq_reif(Oakley,4,X_INTRODUCED_7):: defines_var(X_INTRODUCED_7);
constraint int_eq_reif(Oakley,3,X_INTRODUCED_8):: defines_var(X_INTRODUCED_8);
constraint int_eq_reif(secretary,4,X_INTRODUCED_25):: defines_var(X_INTRODUCED_25);
constraint int_eq_reif(secretary,3,X_INTRODUCED_26):: defines_var(X_INTRODUCED_26);
solve  satisfy;
