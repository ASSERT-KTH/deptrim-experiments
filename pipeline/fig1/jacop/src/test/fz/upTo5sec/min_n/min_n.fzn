var 1..7: X_INTRODUCED_0;
var 1..7: X_INTRODUCED_1;
var 1..7: X_INTRODUCED_2;
var 1..7: X_INTRODUCED_3;
var 1..7: X_INTRODUCED_4;
var 3..3: t_min:: output_var;
var 1..1: rank:: output_var;
var bool: X_INTRODUCED_7 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_8 ::var_is_introduced ;
var 0..1: X_INTRODUCED_9 ::var_is_introduced ;
var 0..1: X_INTRODUCED_10 ::var_is_introduced ;
var 0..1: X_INTRODUCED_11 ::var_is_introduced ;
var 0..1: X_INTRODUCED_12 ::var_is_introduced ;
var bool: X_INTRODUCED_13 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_14 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_15 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_16 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_17 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_18 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_19 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_20 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_21 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_22 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_23 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_24 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_25 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_26 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_27 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_28 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_29 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_30 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_31 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_34 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_35 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_36 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_37 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_38 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_39 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_40 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_41 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_42 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_43 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_44 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_45 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_46 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_47 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_48 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_49 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_50 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_51 ::var_is_introduced :: is_defined_var;
array [1..5] of var int: variables:: output_array([1..5]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4];
constraint int_lin_eq([-1,-1,-1,-1,-1],[X_INTRODUCED_15,X_INTRODUCED_19,X_INTRODUCED_23,X_INTRODUCED_27,X_INTRODUCED_31],-1);
constraint int_ne(X_INTRODUCED_8,0);
constraint int_eq_reif(X_INTRODUCED_9,0,X_INTRODUCED_34):: defines_var(X_INTRODUCED_34);
constraint int_eq_reif(X_INTRODUCED_10,0,X_INTRODUCED_37):: defines_var(X_INTRODUCED_37);
constraint int_eq_reif(X_INTRODUCED_11,0,X_INTRODUCED_41):: defines_var(X_INTRODUCED_41);
constraint int_eq_reif(X_INTRODUCED_12,0,X_INTRODUCED_46):: defines_var(X_INTRODUCED_46);
constraint array_bool_or([X_INTRODUCED_47,X_INTRODUCED_48,X_INTRODUCED_49,X_INTRODUCED_50,X_INTRODUCED_51],true);
constraint int_lin_le_reif([1],[X_INTRODUCED_0],2,X_INTRODUCED_7):: defines_var(X_INTRODUCED_7);
constraint int_eq_reif(X_INTRODUCED_8,1,X_INTRODUCED_13):: defines_var(X_INTRODUCED_13);
constraint array_bool_and([X_INTRODUCED_7,X_INTRODUCED_13],X_INTRODUCED_14):: defines_var(X_INTRODUCED_14);
constraint bool2int(X_INTRODUCED_14,X_INTRODUCED_15):: defines_var(X_INTRODUCED_15);
constraint int_lin_le_reif([1],[X_INTRODUCED_1],2,X_INTRODUCED_16):: defines_var(X_INTRODUCED_16);
constraint int_eq_reif(X_INTRODUCED_9,1,X_INTRODUCED_17):: defines_var(X_INTRODUCED_17);
constraint array_bool_and([X_INTRODUCED_16,X_INTRODUCED_17],X_INTRODUCED_18):: defines_var(X_INTRODUCED_18);
constraint bool2int(X_INTRODUCED_18,X_INTRODUCED_19):: defines_var(X_INTRODUCED_19);
constraint int_lin_le_reif([1],[X_INTRODUCED_2],2,X_INTRODUCED_20):: defines_var(X_INTRODUCED_20);
constraint int_eq_reif(X_INTRODUCED_10,1,X_INTRODUCED_21):: defines_var(X_INTRODUCED_21);
constraint array_bool_and([X_INTRODUCED_20,X_INTRODUCED_21],X_INTRODUCED_22):: defines_var(X_INTRODUCED_22);
constraint bool2int(X_INTRODUCED_22,X_INTRODUCED_23):: defines_var(X_INTRODUCED_23);
constraint int_lin_le_reif([1],[X_INTRODUCED_3],2,X_INTRODUCED_24):: defines_var(X_INTRODUCED_24);
constraint int_eq_reif(X_INTRODUCED_11,1,X_INTRODUCED_25):: defines_var(X_INTRODUCED_25);
constraint array_bool_and([X_INTRODUCED_24,X_INTRODUCED_25],X_INTRODUCED_26):: defines_var(X_INTRODUCED_26);
constraint bool2int(X_INTRODUCED_26,X_INTRODUCED_27):: defines_var(X_INTRODUCED_27);
constraint int_lin_le_reif([1],[X_INTRODUCED_4],2,X_INTRODUCED_28):: defines_var(X_INTRODUCED_28);
constraint int_eq_reif(X_INTRODUCED_12,1,X_INTRODUCED_29):: defines_var(X_INTRODUCED_29);
constraint array_bool_and([X_INTRODUCED_28,X_INTRODUCED_29],X_INTRODUCED_30):: defines_var(X_INTRODUCED_30);
constraint bool2int(X_INTRODUCED_30,X_INTRODUCED_31):: defines_var(X_INTRODUCED_31);
constraint int_eq_reif(X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_34):: defines_var(X_INTRODUCED_34);
constraint int_eq_reif(X_INTRODUCED_0,X_INTRODUCED_2,X_INTRODUCED_35):: defines_var(X_INTRODUCED_35);
constraint int_eq_reif(X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_36):: defines_var(X_INTRODUCED_36);
constraint array_bool_or([X_INTRODUCED_35,X_INTRODUCED_36],X_INTRODUCED_37):: defines_var(X_INTRODUCED_37);
constraint int_eq_reif(X_INTRODUCED_0,X_INTRODUCED_3,X_INTRODUCED_38):: defines_var(X_INTRODUCED_38);
constraint int_eq_reif(X_INTRODUCED_1,X_INTRODUCED_3,X_INTRODUCED_39):: defines_var(X_INTRODUCED_39);
constraint int_eq_reif(X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_40):: defines_var(X_INTRODUCED_40);
constraint array_bool_or([X_INTRODUCED_38,X_INTRODUCED_39,X_INTRODUCED_40],X_INTRODUCED_41):: defines_var(X_INTRODUCED_41);
constraint int_eq_reif(X_INTRODUCED_0,X_INTRODUCED_4,X_INTRODUCED_42):: defines_var(X_INTRODUCED_42);
constraint int_eq_reif(X_INTRODUCED_1,X_INTRODUCED_4,X_INTRODUCED_43):: defines_var(X_INTRODUCED_43);
constraint int_eq_reif(X_INTRODUCED_2,X_INTRODUCED_4,X_INTRODUCED_44):: defines_var(X_INTRODUCED_44);
constraint int_eq_reif(X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_45):: defines_var(X_INTRODUCED_45);
constraint array_bool_or([X_INTRODUCED_42,X_INTRODUCED_43,X_INTRODUCED_44,X_INTRODUCED_45],X_INTRODUCED_46):: defines_var(X_INTRODUCED_46);
constraint int_eq_reif(3,X_INTRODUCED_0,X_INTRODUCED_47):: defines_var(X_INTRODUCED_47);
constraint int_eq_reif(3,X_INTRODUCED_1,X_INTRODUCED_48):: defines_var(X_INTRODUCED_48);
constraint int_eq_reif(3,X_INTRODUCED_2,X_INTRODUCED_49):: defines_var(X_INTRODUCED_49);
constraint int_eq_reif(3,X_INTRODUCED_3,X_INTRODUCED_50):: defines_var(X_INTRODUCED_50);
constraint int_eq_reif(3,X_INTRODUCED_4,X_INTRODUCED_51):: defines_var(X_INTRODUCED_51);
solve  satisfy;
