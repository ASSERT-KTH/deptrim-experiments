array [1..6] of int: X_INTRODUCED_26 = [1,-1,-1,-1,-1,-1];
var 0..5: nvar:: output_var:: is_defined_var;
var 0..0: remainder:: output_var;
var 2..2: quotient:: output_var;
var -2..2: X_INTRODUCED_6 ::var_is_introduced ;
var bool: X_INTRODUCED_7 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_8 ::var_is_introduced :: is_defined_var;
var -2..2: X_INTRODUCED_10 ::var_is_introduced ;
var bool: X_INTRODUCED_11 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_12 ::var_is_introduced :: is_defined_var;
var -2..2: X_INTRODUCED_14 ::var_is_introduced ;
var bool: X_INTRODUCED_15 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_16 ::var_is_introduced :: is_defined_var;
var -2..2: X_INTRODUCED_18 ::var_is_introduced ;
var bool: X_INTRODUCED_19 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_20 ::var_is_introduced :: is_defined_var;
var -2..2: X_INTRODUCED_22 ::var_is_introduced ;
var bool: X_INTRODUCED_23 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_24 ::var_is_introduced :: is_defined_var;
array [1..5] of var int: x:: output_array([1..5]) = [4,5,8,4,1];
constraint int_mod(4,2,X_INTRODUCED_6);
constraint int_mod(5,2,X_INTRODUCED_10);
constraint int_mod(8,2,X_INTRODUCED_14);
constraint int_mod(4,2,X_INTRODUCED_18);
constraint int_mod(1,2,X_INTRODUCED_22);
constraint int_lin_eq(X_INTRODUCED_26,[nvar,X_INTRODUCED_8,X_INTRODUCED_12,X_INTRODUCED_16,X_INTRODUCED_20,X_INTRODUCED_24],0):: defines_var(nvar);
constraint int_eq_reif(X_INTRODUCED_6,0,X_INTRODUCED_7):: defines_var(X_INTRODUCED_7);
constraint bool2int(X_INTRODUCED_7,X_INTRODUCED_8):: defines_var(X_INTRODUCED_8);
constraint int_eq_reif(X_INTRODUCED_10,0,X_INTRODUCED_11):: defines_var(X_INTRODUCED_11);
constraint bool2int(X_INTRODUCED_11,X_INTRODUCED_12):: defines_var(X_INTRODUCED_12);
constraint int_eq_reif(X_INTRODUCED_14,0,X_INTRODUCED_15):: defines_var(X_INTRODUCED_15);
constraint bool2int(X_INTRODUCED_15,X_INTRODUCED_16):: defines_var(X_INTRODUCED_16);
constraint int_eq_reif(X_INTRODUCED_18,0,X_INTRODUCED_19):: defines_var(X_INTRODUCED_19);
constraint bool2int(X_INTRODUCED_19,X_INTRODUCED_20):: defines_var(X_INTRODUCED_20);
constraint int_eq_reif(X_INTRODUCED_22,0,X_INTRODUCED_23):: defines_var(X_INTRODUCED_23);
constraint bool2int(X_INTRODUCED_23,X_INTRODUCED_24):: defines_var(X_INTRODUCED_24);
solve  satisfy;
