array [1..2] of int: X_INTRODUCED_0 = [1,-1];
var 3..3: X1:: output_var;
var 1..9: X2:: output_var;
var 1..9: X3:: output_var;
var 1..9: X4:: output_var;
var 1..9: X5:: output_var;
var 1..9: X6:: output_var;
var 1..10: X7:: output_var;
var 1..10: X8:: output_var;
var 1..10: X9:: output_var;
var 1..10: X10:: output_var;
var -9..9: X_INTRODUCED_1 ::var_is_introduced :: is_defined_var;
var -9..9: X_INTRODUCED_3 ::var_is_introduced :: is_defined_var;
var -9..9: X_INTRODUCED_5 ::var_is_introduced :: is_defined_var;
var -9..9: X_INTRODUCED_7 ::var_is_introduced :: is_defined_var;
var -9..9: X_INTRODUCED_9 ::var_is_introduced :: is_defined_var;
var -9..9: X_INTRODUCED_11 ::var_is_introduced :: is_defined_var;
array [1..10] of var int: Vars = [3,X2,X3,X4,X5,X6,X7,X8,X9,X10];
constraint int_abs(X_INTRODUCED_1,X6);
constraint int_abs(X_INTRODUCED_3,X5);
constraint int_abs(X_INTRODUCED_5,X4);
constraint int_abs(X_INTRODUCED_7,X3);
constraint int_abs(X_INTRODUCED_9,X2);
constraint int_abs(X_INTRODUCED_11,3);
constraint int_lin_ne([-1],[X2],-3);
constraint int_lin_ne([-1],[X3],-3);
constraint int_lin_ne([-1],[X4],-3);
constraint int_lin_ne([-1],[X5],-3);
constraint int_lin_ne([-1],[X6],-3);
constraint int_lin_ne([-1],[X7],-3);
constraint int_lin_ne([-1],[X8],-3);
constraint int_lin_ne([-1],[X9],-3);
constraint int_lin_ne([-1],[X10],-3);
constraint int_lin_ne(X_INTRODUCED_0,[X2,X3],0);
constraint int_lin_ne(X_INTRODUCED_0,[X2,X4],0);
constraint int_lin_ne(X_INTRODUCED_0,[X2,X5],0);
constraint int_lin_ne(X_INTRODUCED_0,[X2,X6],0);
constraint int_lin_ne(X_INTRODUCED_0,[X2,X7],0);
constraint int_lin_ne(X_INTRODUCED_0,[X2,X8],0);
constraint int_lin_ne(X_INTRODUCED_0,[X2,X9],0);
constraint int_lin_ne(X_INTRODUCED_0,[X2,X10],0);
constraint int_lin_ne(X_INTRODUCED_0,[X3,X4],0);
constraint int_lin_ne(X_INTRODUCED_0,[X3,X5],0);
constraint int_lin_ne(X_INTRODUCED_0,[X3,X6],0);
constraint int_lin_ne(X_INTRODUCED_0,[X3,X7],0);
constraint int_lin_ne(X_INTRODUCED_0,[X3,X8],0);
constraint int_lin_ne(X_INTRODUCED_0,[X3,X9],0);
constraint int_lin_ne(X_INTRODUCED_0,[X3,X10],0);
constraint int_lin_ne(X_INTRODUCED_0,[X4,X5],0);
constraint int_lin_ne(X_INTRODUCED_0,[X4,X6],0);
constraint int_lin_ne(X_INTRODUCED_0,[X4,X7],0);
constraint int_lin_ne(X_INTRODUCED_0,[X4,X8],0);
constraint int_lin_ne(X_INTRODUCED_0,[X4,X9],0);
constraint int_lin_ne(X_INTRODUCED_0,[X4,X10],0);
constraint int_lin_ne(X_INTRODUCED_0,[X5,X6],0);
constraint int_lin_ne(X_INTRODUCED_0,[X5,X7],0);
constraint int_lin_ne(X_INTRODUCED_0,[X5,X8],0);
constraint int_lin_ne(X_INTRODUCED_0,[X5,X9],0);
constraint int_lin_ne(X_INTRODUCED_0,[X5,X10],0);
constraint int_lin_ne(X_INTRODUCED_0,[X6,X7],0);
constraint int_lin_ne(X_INTRODUCED_0,[X6,X8],0);
constraint int_lin_ne(X_INTRODUCED_0,[X6,X9],0);
constraint int_lin_ne(X_INTRODUCED_0,[X6,X10],0);
constraint int_lin_ne(X_INTRODUCED_0,[X7,X8],0);
constraint int_lin_ne(X_INTRODUCED_0,[X7,X9],0);
constraint int_lin_ne(X_INTRODUCED_0,[X7,X10],0);
constraint int_lin_ne(X_INTRODUCED_0,[X8,X9],0);
constraint int_lin_ne(X_INTRODUCED_0,[X8,X10],0);
constraint int_lin_ne(X_INTRODUCED_0,[X9,X10],0);
constraint int_lin_eq([1,-1,-1],[X9,X10,X_INTRODUCED_1],0):: defines_var(X_INTRODUCED_1);
constraint int_lin_eq([1,-1,-1],[X8,X9,X_INTRODUCED_3],0):: defines_var(X_INTRODUCED_3);
constraint int_lin_eq([1,-1,-1],[X7,X8,X_INTRODUCED_5],0):: defines_var(X_INTRODUCED_5);
constraint int_lin_eq([1,-1,-1],[X5,X6,X_INTRODUCED_7],0):: defines_var(X_INTRODUCED_7);
constraint int_lin_eq([1,-1,-1],[X4,X5,X_INTRODUCED_9],0):: defines_var(X_INTRODUCED_9);
constraint int_lin_eq([1,-1,-1],[X2,X3,X_INTRODUCED_11],0):: defines_var(X_INTRODUCED_11);
solve :: int_search(Vars,first_fail,indomain_min,complete) satisfy;
