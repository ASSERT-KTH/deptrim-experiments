array [1..2] of int: X_INTRODUCED_8 = [1,-2];
array [1..2] of int: X_INTRODUCED_11 = [1,-3];
array [1..2] of int: X_INTRODUCED_14 = [1,-4];
array [1..2] of int: X_INTRODUCED_17 = [1,-5];
array [1..2] of int: X_INTRODUCED_20 = [1,-6];
array [1..2] of int: X_INTRODUCED_23 = [1,-7];
var int: X_INTRODUCED_0;
var int: X_INTRODUCED_1;
var int: X_INTRODUCED_2;
var int: X_INTRODUCED_3;
var int: X_INTRODUCED_4;
var int: X_INTRODUCED_5;
var int: n:: output_var:: is_defined_var;
array [1..6] of var int: x:: output_array([1..6]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5];
constraint int_lin_eq(X_INTRODUCED_8,[n,X_INTRODUCED_0],1):: defines_var(n);
constraint int_lin_eq(X_INTRODUCED_11,[n,X_INTRODUCED_1],1):: defines_var(n);
constraint int_lin_eq(X_INTRODUCED_14,[n,X_INTRODUCED_2],1):: defines_var(n);
constraint int_lin_eq(X_INTRODUCED_17,[n,X_INTRODUCED_3],1):: defines_var(n);
constraint int_lin_eq(X_INTRODUCED_20,[n,X_INTRODUCED_4],1):: defines_var(n);
constraint int_lin_eq(X_INTRODUCED_23,[n,X_INTRODUCED_5],0):: defines_var(n);
constraint int_le(0,X_INTRODUCED_0);
constraint int_le(0,X_INTRODUCED_1);
constraint int_le(0,X_INTRODUCED_2);
constraint int_le(0,X_INTRODUCED_3);
constraint int_le(0,X_INTRODUCED_4);
constraint int_le(0,X_INTRODUCED_5);
constraint int_le(1,n);
solve  minimize n;
