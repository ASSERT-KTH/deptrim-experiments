array [1..4] of int: X_INTRODUCED_15 = [1,-1,-1,-1];
array [1..2] of int: X_INTRODUCED_16 = [1,-1];
array [1..3] of int: X_INTRODUCED_24 = [1,1,1];
var 0..1: X_INTRODUCED_3;
var 0..1: X_INTRODUCED_4;
var 0..1: X_INTRODUCED_5;
var 0..1: X_INTRODUCED_6;
var 0..1: X_INTRODUCED_7;
var 0..1: X_INTRODUCED_8;
var 0..1: X_INTRODUCED_9;
var 0..1: X_INTRODUCED_10;
var 0..1: X_INTRODUCED_11;
var 0..3: last_sum:: is_defined_var;
var bool: X_INTRODUCED_12 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_13 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_17 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_18 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_19 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_20 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_21 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_22 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_25 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_26 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_27 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_28 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_29 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_30 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_32 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_33 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_34 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_35 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_36 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_37 ::var_is_introduced :: is_defined_var;
array [1..12] of var int: x:: output_array([1..4,1..3]) = [1,0,1,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11];
constraint array_bool_or([X_INTRODUCED_12,X_INTRODUCED_13],true);
constraint int_lin_eq(X_INTRODUCED_15,[last_sum,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11],0):: defines_var(last_sum);
constraint int_lin_eq(X_INTRODUCED_24,[X_INTRODUCED_18,X_INTRODUCED_20,X_INTRODUCED_22],1);
constraint int_lin_eq(X_INTRODUCED_24,[X_INTRODUCED_26,X_INTRODUCED_28,X_INTRODUCED_30],1);
constraint int_lin_eq(X_INTRODUCED_24,[X_INTRODUCED_33,X_INTRODUCED_35,X_INTRODUCED_37],1);
constraint int_eq_reif(last_sum,3,X_INTRODUCED_12):: defines_var(X_INTRODUCED_12);
constraint int_eq_reif(last_sum,0,X_INTRODUCED_13):: defines_var(X_INTRODUCED_13);
constraint int_lin_ne_reif([-1],[X_INTRODUCED_3],-1,X_INTRODUCED_17):: defines_var(X_INTRODUCED_17);
constraint bool2int(X_INTRODUCED_17,X_INTRODUCED_18):: defines_var(X_INTRODUCED_18);
constraint int_lin_ne_reif([-1],[X_INTRODUCED_4],0,X_INTRODUCED_19):: defines_var(X_INTRODUCED_19);
constraint bool2int(X_INTRODUCED_19,X_INTRODUCED_20):: defines_var(X_INTRODUCED_20);
constraint int_lin_ne_reif([-1],[X_INTRODUCED_5],-1,X_INTRODUCED_21):: defines_var(X_INTRODUCED_21);
constraint bool2int(X_INTRODUCED_21,X_INTRODUCED_22):: defines_var(X_INTRODUCED_22);
constraint int_lin_ne_reif(X_INTRODUCED_16,[X_INTRODUCED_3,X_INTRODUCED_6],0,X_INTRODUCED_25):: defines_var(X_INTRODUCED_25);
constraint bool2int(X_INTRODUCED_25,X_INTRODUCED_26):: defines_var(X_INTRODUCED_26);
constraint int_lin_ne_reif(X_INTRODUCED_16,[X_INTRODUCED_4,X_INTRODUCED_7],0,X_INTRODUCED_27):: defines_var(X_INTRODUCED_27);
constraint bool2int(X_INTRODUCED_27,X_INTRODUCED_28):: defines_var(X_INTRODUCED_28);
constraint int_lin_ne_reif(X_INTRODUCED_16,[X_INTRODUCED_5,X_INTRODUCED_8],0,X_INTRODUCED_29):: defines_var(X_INTRODUCED_29);
constraint bool2int(X_INTRODUCED_29,X_INTRODUCED_30):: defines_var(X_INTRODUCED_30);
constraint int_lin_ne_reif(X_INTRODUCED_16,[X_INTRODUCED_6,X_INTRODUCED_9],0,X_INTRODUCED_32):: defines_var(X_INTRODUCED_32);
constraint bool2int(X_INTRODUCED_32,X_INTRODUCED_33):: defines_var(X_INTRODUCED_33);
constraint int_lin_ne_reif(X_INTRODUCED_16,[X_INTRODUCED_7,X_INTRODUCED_10],0,X_INTRODUCED_34):: defines_var(X_INTRODUCED_34);
constraint bool2int(X_INTRODUCED_34,X_INTRODUCED_35):: defines_var(X_INTRODUCED_35);
constraint int_lin_ne_reif(X_INTRODUCED_16,[X_INTRODUCED_8,X_INTRODUCED_11],0,X_INTRODUCED_36):: defines_var(X_INTRODUCED_36);
constraint bool2int(X_INTRODUCED_36,X_INTRODUCED_37):: defines_var(X_INTRODUCED_37);
solve  satisfy;
