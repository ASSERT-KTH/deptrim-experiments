array [1..10] of int: X_INTRODUCED_31 = [1,1,1,1,1,1,1,1,1,1];
array [1..4] of int: X_INTRODUCED_33 = [-1,-1,-1,-1];
array [1..5] of int: X_INTRODUCED_35 = [1,1,1,1,1];
var 0..30: X_INTRODUCED_0;
var 0..30: X_INTRODUCED_1;
var 0..30: X_INTRODUCED_2;
var 0..30: X_INTRODUCED_3;
var 0..30: X_INTRODUCED_4;
var 0..30: X_INTRODUCED_5;
var 0..30: X_INTRODUCED_6;
var 0..30: X_INTRODUCED_7;
var 0..30: X_INTRODUCED_8;
var 0..30: X_INTRODUCED_9;
var 0..14200: return:: is_defined_var;
array [1..10] of var int: frac:: output_array([1..10]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9];
constraint int_lin_eq(X_INTRODUCED_31,[X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9],100);
constraint int_lin_le(X_INTRODUCED_33,[X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3],-50);
constraint int_lin_le(X_INTRODUCED_35,[X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_8,X_INTRODUCED_9],33);
constraint int_lin_eq([5,17,26,12,8,9,7,6,31,21,-1],[X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,return],0):: defines_var(return);
solve :: int_search(frac,anti_first_fail,indomain_max,complete) maximize return;
