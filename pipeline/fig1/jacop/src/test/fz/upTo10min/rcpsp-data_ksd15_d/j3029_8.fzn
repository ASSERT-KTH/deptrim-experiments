predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_17 = [1,-1];
array [1..15] of int: X_INTRODUCED_52 = [1,7,5,10,4,8,6,4,4,1,5,6,10,10,2];
array [1..15] of int: X_INTRODUCED_53 = [9,10,7,2,225,200,150,100,225,50,250,7,2,8,5];
array [1..15] of int: X_INTRODUCED_55 = [5,5,4,10,10,6,3,3,7,8,7,7,10,3,5];
array [1..15] of int: X_INTRODUCED_57 = [1,8,4,10,9,6,10,10,5,2,3,8,9,6,8];
array [1..15] of int: X_INTRODUCED_59 = [3,7,7,1,5,7,2,2,7,9,2,1,4,1,1];
var 0..1249: X_INTRODUCED_0;
var 0..1249: X_INTRODUCED_1;
var 0..1249: X_INTRODUCED_2;
var 0..1249: X_INTRODUCED_3;
var 0..1249: X_INTRODUCED_4;
var 0..1249: X_INTRODUCED_5;
var 0..1249: X_INTRODUCED_6;
var 0..1249: X_INTRODUCED_7;
var 0..1249: X_INTRODUCED_8;
var 0..1249: X_INTRODUCED_9;
var 0..1249: X_INTRODUCED_10;
var 0..1249: X_INTRODUCED_11;
var 0..1249: X_INTRODUCED_12;
var 0..1249: X_INTRODUCED_13;
var 0..1249: X_INTRODUCED_14;
var 0..1250: objective:: output_var;
var bool: X_INTRODUCED_27 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_28 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_29 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_30 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_33 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_34 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_36 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_37 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_39 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_40 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_41 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_42 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_43 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_44 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_45 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_46 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_47 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_48 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_49 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_50 ::var_is_introduced :: is_defined_var;
array [1..15] of var int: s:: output_array([1..15]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14];
array [1..16] of var int: X_INTRODUCED_64 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,objective];
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_0,X_INTRODUCED_6],-9);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_9],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_1,X_INTRODUCED_10],-10);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_3],-7);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_4],-7);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_2,X_INTRODUCED_8],-7);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_7],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_5],-225);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_12],-200);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_5,X_INTRODUCED_13],-200);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_10],-150);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_11],-150);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_14],-50);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_10,X_INTRODUCED_12],-250);
constraint array_bool_or([X_INTRODUCED_27,X_INTRODUCED_28],true);
constraint array_bool_or([X_INTRODUCED_29,X_INTRODUCED_30],true);
constraint array_bool_or([X_INTRODUCED_33,X_INTRODUCED_34],true);
constraint array_bool_or([X_INTRODUCED_36,X_INTRODUCED_37],true);
constraint array_bool_or([X_INTRODUCED_39,X_INTRODUCED_40],true);
constraint array_bool_or([X_INTRODUCED_41,X_INTRODUCED_42],true);
constraint array_bool_or([X_INTRODUCED_43,X_INTRODUCED_44],true);
constraint array_bool_or([X_INTRODUCED_45,X_INTRODUCED_46],true);
constraint array_bool_or([X_INTRODUCED_47,X_INTRODUCED_48],true);
constraint array_bool_or([X_INTRODUCED_49,X_INTRODUCED_50],true);
constraint jacop_cumulative(s,X_INTRODUCED_53,X_INTRODUCED_52,19);
constraint jacop_cumulative(s,X_INTRODUCED_53,X_INTRODUCED_55,17);
constraint jacop_cumulative(s,X_INTRODUCED_53,X_INTRODUCED_57,19);
constraint jacop_cumulative(s,X_INTRODUCED_53,X_INTRODUCED_59,16);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_7,objective],-100);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_8,objective],-225);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_11,objective],-7);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_12,objective],-2);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_13,objective],-8);
constraint int_lin_le(X_INTRODUCED_17,[X_INTRODUCED_14,objective],-5);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_3],-225,X_INTRODUCED_27):: defines_var(X_INTRODUCED_27);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_4],-2,X_INTRODUCED_28):: defines_var(X_INTRODUCED_28);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_3],-150,X_INTRODUCED_29):: defines_var(X_INTRODUCED_29);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_6],-2,X_INTRODUCED_30):: defines_var(X_INTRODUCED_30);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_3],-50,X_INTRODUCED_33):: defines_var(X_INTRODUCED_33);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_9],-2,X_INTRODUCED_34):: defines_var(X_INTRODUCED_34);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_12,X_INTRODUCED_3],-2,X_INTRODUCED_36):: defines_var(X_INTRODUCED_36);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_12],-2,X_INTRODUCED_37):: defines_var(X_INTRODUCED_37);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_13,X_INTRODUCED_3],-8,X_INTRODUCED_39):: defines_var(X_INTRODUCED_39);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_3,X_INTRODUCED_13],-2,X_INTRODUCED_40):: defines_var(X_INTRODUCED_40);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_4],-50,X_INTRODUCED_41):: defines_var(X_INTRODUCED_41);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_9],-225,X_INTRODUCED_42):: defines_var(X_INTRODUCED_42);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_12,X_INTRODUCED_4],-2,X_INTRODUCED_43):: defines_var(X_INTRODUCED_43);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_4,X_INTRODUCED_12],-225,X_INTRODUCED_44):: defines_var(X_INTRODUCED_44);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_7,X_INTRODUCED_6],-100,X_INTRODUCED_45):: defines_var(X_INTRODUCED_45);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_6,X_INTRODUCED_7],-150,X_INTRODUCED_46):: defines_var(X_INTRODUCED_46);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_12,X_INTRODUCED_9],-2,X_INTRODUCED_47):: defines_var(X_INTRODUCED_47);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_9,X_INTRODUCED_12],-50,X_INTRODUCED_48):: defines_var(X_INTRODUCED_48);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_13,X_INTRODUCED_12],-8,X_INTRODUCED_49):: defines_var(X_INTRODUCED_49);
constraint int_lin_le_reif(X_INTRODUCED_17,[X_INTRODUCED_12,X_INTRODUCED_13],-2,X_INTRODUCED_50):: defines_var(X_INTRODUCED_50);
solve :: int_search(X_INTRODUCED_64,smallest,indomain_min,complete) minimize objective;
