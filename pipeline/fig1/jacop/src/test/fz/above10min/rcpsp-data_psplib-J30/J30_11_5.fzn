predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_32 = [1,-1];
array [1..21] of int: X_INTRODUCED_61 = [3,2,4,5,2,2,3,4,9,4,9,7,4,3,2,6,2,2,6,4,3];
array [1..21] of int: X_INTRODUCED_62 = [1,5,2,8,10,3,7,2,10,7,6,9,4,5,10,5,3,7,5,2,4];
array [1..25] of int: X_INTRODUCED_64 = [1,7,5,2,4,6,3,7,3,10,2,3,8,5,7,8,5,7,5,10,10,8,1,3,5];
array [1..25] of int: X_INTRODUCED_65 = [1,5,7,2,8,10,3,7,2,10,5,9,6,7,4,8,5,10,5,3,7,5,2,4,5];
array [1..20] of int: X_INTRODUCED_67 = [3,6,10,3,6,7,3,1,3,6,6,7,4,9,1,5,10,10,1,1];
array [1..20] of int: X_INTRODUCED_68 = [1,5,7,2,8,7,10,7,9,5,5,6,9,6,7,10,5,2,4,5];
array [1..25] of int: X_INTRODUCED_70 = [2,1,2,7,7,7,2,7,4,7,2,2,3,4,5,7,4,4,1,3,8,3,7,5,1];
array [1..25] of int: X_INTRODUCED_71 = [1,5,7,2,8,10,3,2,10,9,5,6,9,6,7,4,8,5,10,5,3,5,2,4,5];
var 0..172: X_INTRODUCED_0;
var 0..172: X_INTRODUCED_1;
var 0..172: X_INTRODUCED_2;
var 0..172: X_INTRODUCED_3;
var 0..172: X_INTRODUCED_4;
var 0..172: X_INTRODUCED_5;
var 0..172: X_INTRODUCED_6;
var 0..172: X_INTRODUCED_7;
var 0..172: X_INTRODUCED_8;
var 0..172: X_INTRODUCED_9;
var 0..172: X_INTRODUCED_10;
var 0..172: X_INTRODUCED_11;
var 0..172: X_INTRODUCED_12;
var 0..172: X_INTRODUCED_13;
var 0..172: X_INTRODUCED_14;
var 0..172: X_INTRODUCED_15;
var 0..172: X_INTRODUCED_16;
var 0..172: X_INTRODUCED_17;
var 0..172: X_INTRODUCED_18;
var 0..172: X_INTRODUCED_19;
var 0..172: X_INTRODUCED_20;
var 0..172: X_INTRODUCED_21;
var 0..172: X_INTRODUCED_22;
var 0..172: X_INTRODUCED_23;
var 0..172: X_INTRODUCED_24;
var 0..172: X_INTRODUCED_25;
var 0..172: X_INTRODUCED_26;
var 0..172: X_INTRODUCED_27;
var 0..172: X_INTRODUCED_28;
var 0..172: X_INTRODUCED_29;
var 0..173: objective:: output_var;
var bool: X_INTRODUCED_59 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_60 ::var_is_introduced :: is_defined_var;
array [1..30] of var int: s:: output_array([1..30]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29];
array [1..21] of var int: X_INTRODUCED_63 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_19,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28];
array [1..25] of var int: X_INTRODUCED_66 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_13,X_INTRODUCED_15,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29];
array [1..20] of var int: X_INTRODUCED_69 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_7,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_18,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29];
array [1..25] of var int: X_INTRODUCED_72 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_11,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29];
array [1..31] of var int: X_INTRODUCED_76 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29,objective];
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_0,X_INTRODUCED_3],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_0,X_INTRODUCED_8],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_0,X_INTRODUCED_11],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_1,X_INTRODUCED_4],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_1,X_INTRODUCED_7],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_1,X_INTRODUCED_13],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_2,X_INTRODUCED_26],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_3,X_INTRODUCED_10],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_3,X_INTRODUCED_27],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_4,X_INTRODUCED_5],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_4,X_INTRODUCED_6],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_4,X_INTRODUCED_11],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_5,X_INTRODUCED_14],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_5,X_INTRODUCED_17],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_5,X_INTRODUCED_20],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_6,X_INTRODUCED_29],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_7,X_INTRODUCED_14],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_8,X_INTRODUCED_9],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_8,X_INTRODUCED_12],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_9,X_INTRODUCED_13],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_10,X_INTRODUCED_19],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_10,X_INTRODUCED_21],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_11,X_INTRODUCED_23],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_12,X_INTRODUCED_22],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_13,X_INTRODUCED_15],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_13,X_INTRODUCED_24],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_13,X_INTRODUCED_25],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_14,X_INTRODUCED_22],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_15,X_INTRODUCED_16],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_15,X_INTRODUCED_18],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_16,X_INTRODUCED_19],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_17,X_INTRODUCED_21],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_18,X_INTRODUCED_19],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_19,X_INTRODUCED_28],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_20,X_INTRODUCED_24],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_21,X_INTRODUCED_23],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_22,X_INTRODUCED_26],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_22,X_INTRODUCED_27],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_23,X_INTRODUCED_28],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_24,X_INTRODUCED_27],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_25,X_INTRODUCED_29],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_26,X_INTRODUCED_28],-5);
constraint array_bool_or([X_INTRODUCED_59,X_INTRODUCED_60],true);
constraint jacop_cumulative(X_INTRODUCED_63,X_INTRODUCED_62,X_INTRODUCED_61,17);
constraint jacop_cumulative(X_INTRODUCED_66,X_INTRODUCED_65,X_INTRODUCED_64,24);
constraint jacop_cumulative(X_INTRODUCED_69,X_INTRODUCED_68,X_INTRODUCED_67,26);
constraint jacop_cumulative(X_INTRODUCED_72,X_INTRODUCED_71,X_INTRODUCED_70,15);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_27,objective],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_28,objective],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_29,objective],-5);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_14,X_INTRODUCED_9],-6,X_INTRODUCED_59):: defines_var(X_INTRODUCED_59);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_9,X_INTRODUCED_14],-10,X_INTRODUCED_60):: defines_var(X_INTRODUCED_60);
solve :: int_search(X_INTRODUCED_76,smallest,indomain_min,complete) minimize objective;
