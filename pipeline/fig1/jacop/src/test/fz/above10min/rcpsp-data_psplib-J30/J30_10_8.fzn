predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_32 = [1,-1];
array [1..25] of int: X_INTRODUCED_68 = [8,1,6,2,9,6,5,6,7,6,10,3,7,8,6,1,3,2,8,9,4,10,5,1,9];
array [1..25] of int: X_INTRODUCED_69 = [2,5,3,4,1,7,2,3,3,10,7,2,9,6,6,3,3,10,7,10,9,7,8,7,5];
array [1..20] of int: X_INTRODUCED_71 = [9,4,1,1,3,7,7,6,2,5,4,4,4,8,9,8,10,3,7,1];
array [1..20] of int: X_INTRODUCED_72 = [2,5,8,3,4,2,3,10,7,2,8,10,9,6,3,9,8,2,7,5];
array [1..23] of int: X_INTRODUCED_74 = [10,8,6,5,10,2,5,9,3,9,3,7,10,7,1,5,6,6,2,7,5,9,4];
array [1..23] of int: X_INTRODUCED_75 = [2,5,8,4,1,7,2,3,3,10,7,8,6,3,3,10,7,10,9,9,7,8,5];
array [1..23] of int: X_INTRODUCED_77 = [2,9,3,8,1,3,5,9,6,9,8,6,8,3,7,1,4,7,9,1,8,6,2];
array [1..23] of int: X_INTRODUCED_78 = [2,5,8,3,4,1,7,3,2,8,10,9,6,3,10,7,10,9,9,8,2,7,5];
var 0..175: X_INTRODUCED_0;
var 0..175: X_INTRODUCED_1;
var 0..175: X_INTRODUCED_2;
var 0..175: X_INTRODUCED_3;
var 0..175: X_INTRODUCED_4;
var 0..175: X_INTRODUCED_5;
var 0..175: X_INTRODUCED_6;
var 0..175: X_INTRODUCED_7;
var 0..175: X_INTRODUCED_8;
var 0..175: X_INTRODUCED_9;
var 0..175: X_INTRODUCED_10;
var 0..175: X_INTRODUCED_11;
var 0..175: X_INTRODUCED_12;
var 0..175: X_INTRODUCED_13;
var 0..175: X_INTRODUCED_14;
var 0..175: X_INTRODUCED_15;
var 0..175: X_INTRODUCED_16;
var 0..175: X_INTRODUCED_17;
var 0..175: X_INTRODUCED_18;
var 0..175: X_INTRODUCED_19;
var 0..175: X_INTRODUCED_20;
var 0..175: X_INTRODUCED_21;
var 0..175: X_INTRODUCED_22;
var 0..175: X_INTRODUCED_23;
var 0..175: X_INTRODUCED_24;
var 0..175: X_INTRODUCED_25;
var 0..175: X_INTRODUCED_26;
var 0..175: X_INTRODUCED_27;
var 0..175: X_INTRODUCED_28;
var 0..175: X_INTRODUCED_29;
var 0..176: objective:: output_var;
var bool: X_INTRODUCED_59 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_60 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_61 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_62 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_63 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_64 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_65 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_66 ::var_is_introduced :: is_defined_var;
array [1..30] of var int: s:: output_array([1..30]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29];
array [1..25] of var int: X_INTRODUCED_70 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_28,X_INTRODUCED_29];
array [1..20] of var int: X_INTRODUCED_73 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_7,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_18,X_INTRODUCED_24,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29];
array [1..23] of var int: X_INTRODUCED_76 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_13,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_29];
array [1..23] of var int: X_INTRODUCED_79 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_8,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29];
array [1..31] of var int: X_INTRODUCED_83 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29,objective];
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_0,X_INTRODUCED_3],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_1,X_INTRODUCED_5],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_1,X_INTRODUCED_9],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_2,X_INTRODUCED_6],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_2,X_INTRODUCED_12],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_3,X_INTRODUCED_4],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_3,X_INTRODUCED_7],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_4,X_INTRODUCED_17],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_4,X_INTRODUCED_18],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_4,X_INTRODUCED_28],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_5,X_INTRODUCED_14],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_5,X_INTRODUCED_15],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_6,X_INTRODUCED_8],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_6,X_INTRODUCED_11],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_6,X_INTRODUCED_21],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_7,X_INTRODUCED_25],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_8,X_INTRODUCED_16],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_8,X_INTRODUCED_17],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_9,X_INTRODUCED_10],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_9,X_INTRODUCED_29],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_10,X_INTRODUCED_20],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_11,X_INTRODUCED_13],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_11,X_INTRODUCED_20],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_11,X_INTRODUCED_23],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_12,X_INTRODUCED_15],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_12,X_INTRODUCED_19],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_12,X_INTRODUCED_24],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_13,X_INTRODUCED_19],-8);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_14,X_INTRODUCED_18],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_15,X_INTRODUCED_18],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_16,X_INTRODUCED_23],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_17,X_INTRODUCED_29],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_18,X_INTRODUCED_27],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_19,X_INTRODUCED_22],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_19,X_INTRODUCED_26],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_20,X_INTRODUCED_22],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_21,X_INTRODUCED_25],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_22,X_INTRODUCED_28],-10);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_23,X_INTRODUCED_26],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_24,X_INTRODUCED_26],-9);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_25,X_INTRODUCED_28],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_26,X_INTRODUCED_27],-8);
constraint array_bool_or([X_INTRODUCED_59,X_INTRODUCED_60],true);
constraint array_bool_or([X_INTRODUCED_61,X_INTRODUCED_62],true);
constraint array_bool_or([X_INTRODUCED_63,X_INTRODUCED_64],true);
constraint array_bool_or([X_INTRODUCED_65,X_INTRODUCED_66],true);
constraint jacop_cumulative(X_INTRODUCED_70,X_INTRODUCED_69,X_INTRODUCED_68,27);
constraint jacop_cumulative(X_INTRODUCED_73,X_INTRODUCED_72,X_INTRODUCED_71,17);
constraint jacop_cumulative(X_INTRODUCED_76,X_INTRODUCED_75,X_INTRODUCED_74,22);
constraint jacop_cumulative(X_INTRODUCED_79,X_INTRODUCED_78,X_INTRODUCED_77,21);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_27,objective],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_28,objective],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_29,objective],-5);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_18,X_INTRODUCED_0],-3,X_INTRODUCED_59):: defines_var(X_INTRODUCED_59);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_0,X_INTRODUCED_18],-2,X_INTRODUCED_60):: defines_var(X_INTRODUCED_60);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_26,X_INTRODUCED_0],-8,X_INTRODUCED_61):: defines_var(X_INTRODUCED_61);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_0,X_INTRODUCED_26],-2,X_INTRODUCED_62):: defines_var(X_INTRODUCED_62);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_26,X_INTRODUCED_16],-8,X_INTRODUCED_63):: defines_var(X_INTRODUCED_63);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_16,X_INTRODUCED_26],-6,X_INTRODUCED_64):: defines_var(X_INTRODUCED_64);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_26,X_INTRODUCED_18],-8,X_INTRODUCED_65):: defines_var(X_INTRODUCED_65);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_18,X_INTRODUCED_26],-3,X_INTRODUCED_66):: defines_var(X_INTRODUCED_66);
solve :: int_search(X_INTRODUCED_83,smallest,indomain_min,complete) minimize objective;
