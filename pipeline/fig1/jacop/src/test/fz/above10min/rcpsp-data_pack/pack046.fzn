predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..2] of int: X_INTRODUCED_20 = [1,-1];
array [1..18] of int: X_INTRODUCED_29 = [3,3,1,3,2,2,3,2,2,3,1,1,2,1,2,3,3,3];
array [1..18] of int: X_INTRODUCED_30 = [18,18,15,10,16,12,13,11,14,14,13,15,15,18,10,13,12,19];
array [1..18] of int: X_INTRODUCED_32 = [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2];
var 0..255: X_INTRODUCED_0;
var 0..255: X_INTRODUCED_1;
var 0..255: X_INTRODUCED_2;
var 0..255: X_INTRODUCED_3;
var 0..255: X_INTRODUCED_4;
var 0..255: X_INTRODUCED_5;
var 0..255: X_INTRODUCED_6;
var 0..255: X_INTRODUCED_7;
var 0..255: X_INTRODUCED_8;
var 0..255: X_INTRODUCED_9;
var 0..255: X_INTRODUCED_10;
var 0..255: X_INTRODUCED_11;
var 0..255: X_INTRODUCED_12;
var 0..255: X_INTRODUCED_13;
var 0..255: X_INTRODUCED_14;
var 0..255: X_INTRODUCED_15;
var 0..255: X_INTRODUCED_16;
var 0..255: X_INTRODUCED_17;
var 0..256: objective:: output_var;
array [1..18] of var int: s:: output_array([1..18]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17];
array [1..19] of var int: X_INTRODUCED_45 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,objective];
constraint int_lin_le(X_INTRODUCED_20,[X_INTRODUCED_0,X_INTRODUCED_10],-18);
constraint int_lin_le(X_INTRODUCED_20,[X_INTRODUCED_1,X_INTRODUCED_15],-18);
constraint int_lin_le(X_INTRODUCED_20,[X_INTRODUCED_2,X_INTRODUCED_3],-15);
constraint int_lin_le(X_INTRODUCED_20,[X_INTRODUCED_3,X_INTRODUCED_6],-10);
constraint int_lin_le(X_INTRODUCED_20,[X_INTRODUCED_5,X_INTRODUCED_9],-12);
constraint int_lin_le(X_INTRODUCED_20,[X_INTRODUCED_5,X_INTRODUCED_14],-12);
constraint int_lin_le(X_INTRODUCED_20,[X_INTRODUCED_5,X_INTRODUCED_15],-12);
constraint int_lin_le(X_INTRODUCED_20,[X_INTRODUCED_7,X_INTRODUCED_16],-11);
constraint int_lin_le(X_INTRODUCED_20,[X_INTRODUCED_8,X_INTRODUCED_11],-14);
constraint int_lin_le(X_INTRODUCED_20,[X_INTRODUCED_13,X_INTRODUCED_15],-18);
constraint jacop_cumulative(s,X_INTRODUCED_30,X_INTRODUCED_29,7);
constraint jacop_cumulative(s,X_INTRODUCED_30,X_INTRODUCED_32,9);
constraint jacop_cumulative(s,X_INTRODUCED_30,X_INTRODUCED_32,5);
constraint int_lin_le(X_INTRODUCED_20,[X_INTRODUCED_4,objective],-16);
constraint int_lin_le(X_INTRODUCED_20,[X_INTRODUCED_6,objective],-13);
constraint int_lin_le(X_INTRODUCED_20,[X_INTRODUCED_9,objective],-14);
constraint int_lin_le(X_INTRODUCED_20,[X_INTRODUCED_10,objective],-13);
constraint int_lin_le(X_INTRODUCED_20,[X_INTRODUCED_11,objective],-15);
constraint int_lin_le(X_INTRODUCED_20,[X_INTRODUCED_12,objective],-15);
constraint int_lin_le(X_INTRODUCED_20,[X_INTRODUCED_14,objective],-10);
constraint int_lin_le(X_INTRODUCED_20,[X_INTRODUCED_15,objective],-13);
constraint int_lin_le(X_INTRODUCED_20,[X_INTRODUCED_16,objective],-12);
constraint int_lin_le(X_INTRODUCED_20,[X_INTRODUCED_17,objective],-19);
solve :: int_search(X_INTRODUCED_45,smallest,indomain_min,complete) minimize objective;
